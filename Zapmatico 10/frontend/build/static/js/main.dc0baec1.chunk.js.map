{"version":3,"sources":["layout/themeContext.js","translate/languages/pt.js","translate/languages/index.js","translate/languages/en.js","translate/languages/es.js","translate/i18n.js","errors/toastError.js","services/api.js","services/socket.js","hooks/useWhatsApps/index.js","context/WhatsApp/WhatsAppsContext.js","hooks/useAuth.js/index.js","context/Auth/AuthContext.js","rules.js","components/Can/index.js","layout/MainListItems.js","components/ButtonWithSpinner/index.js","components/MarkdownWrapper/index.js","components/TicketListItem/index.js","hooks/useTickets/index.js","components/NotificationsPopOver/index.js","components/QueueSelect/index.js","components/UserModal/index.js","components/BackdropLoading/index.js","hooks/useDate/index.js","components/AnnouncementsPopover/index.js","pages/Chat/ChatPopover.js","layout/index.js","pages/Dashboard/Chart.js","components/Dashboard/CardCounter.js","components/Dashboard/TableAttendantsStatus.js","hooks/useCompanies/index.js","pages/Dashboard/index.js","components/ContactModal/index.js","components/NewTicketModal/index.js","context/Tickets/TicketsContext.js","components/VcardPreview/index.js","components/ModalImageCors/index.js","components/ConfirmationModal/index.js","context/ReplyingMessage/ReplyingMessageContext.js","components/MessageOptionsMenu/index.js","components/MessagesList/index.js","components/TicketHeaderSkeleton/index.js","components/TicketHeader/index.js","components/TicketInfo/index.js","components/TicketMessagesDialog/index.js","helpers/contrastColor.js","components/ContactTag/index.js","components/TicketListItemCustom/index.js","components/TicketsListSkeleton/index.js","components/TicketsListCustom/index.js","components/TicketsListGroup/index.js","components/TabPanel/index.js","components/TicketsQueueSelect/index.js","components/TagsFilter/index.js","components/UsersFilter/index.js","components/TicketsManagerTabs/index.js","components/ContactDrawerSkeleton/index.js","components/ContactForm/index.js","components/ContactNotesDialogListItem/index.js","hooks/useTicketNotes/index.js","components/ContactNotes/index.js","components/ContactDrawer/index.js","components/MessageInputCustom/RecordingTimer.js","hooks/useQuickMessages/index.js","components/MessageInputCustom/index.js","hooks/useLocalStorage/index.js","hooks/useQueues/index.js","components/TransferTicketModalCustom/index.js","components/ScheduleModal/index.js","components/TicketOptionsMenu/index.js","components/TicketActionButtonsCustom/index.js","components/TagsContainer/index.js","components/Ticket/index.js","pages/TicketsCustom/index.js","components/TicketAdvancedLayout/index.js","pages/TicketsAdvanced/index.js","pages/TicketResponsiveContainer/index.js","hooks/usePlans/index.js","pages/Signup/index.js","pages/Login/index.js","components/MainContainer/index.js","components/MainHeader/index.js","components/MainHeaderButtonsWrapper/index.js","components/Title/index.js","components/TableRowSkeleton/index.js","components/WhatsAppModal/index.js","components/QrcodeModal/index.js","pages/Connections/index.js","components/SchedulesForm/index.js","components/QueueSelectCustom/index.js","components/ModalUsers/index.js","components/CompaniesManager/index.js","components/CurrencyInput/index.js","components/PlansManager/index.js","hooks/useHelps/index.js","components/HelpsManager/index.js","hooks/useSettings/index.js","components/Settings/Options.js","components/OnlyForSuperUser/index.js","pages/SettingsCustom/index.js","components/FormFields/InputField.js","components/FormFields/SelectField.js","components/CheckoutPage/Forms/AddressForm.js","components/CheckoutPage/Forms/PaymentForm.js","components/CheckoutPage/ReviewOrder/styles.js","components/CheckoutPage/ReviewOrder/ShippingDetails.js","components/CheckoutPage/ReviewOrder/index.js","components/CheckoutPage/ReviewOrder/ReviewOrder.js","components/CheckoutPage/CheckoutSuccess/style.js","components/CheckoutPage/CheckoutSuccess/CheckoutSuccess.js","components/CheckoutPage/CheckoutSuccess/index.js","components/CheckoutPage/FormModel/checkoutFormModel.js","components/CheckoutPage/FormModel/validationSchema.js","components/CheckoutPage/FormModel/formInitialValues.js","components/CheckoutPage/styles.js","components/CheckoutPage/index.js","components/CheckoutPage/CheckoutPage.js","components/SubscriptionModal/index.js","pages/Financeiro/index.js","pages/Users/index.js","pages/Contacts/index.js","components/ColorPicker/index.js","components/QueueOptions/index.js","components/QueueModal/index.js","pages/Queues/index.js","components/TagModal/index.js","pages/Tags/index.js","pages/MessagesAPI/index.js","pages/Helps/index.js","components/ContactListDialog/index.js","pages/ContactLists/index.js","components/ContactListItemModal/index.js","hooks/useContactLists/index.js","pages/ContactListItems/index.js","components/QuickMessageDialog/index.js","pages/QuickMessages/index.js","routes/Route.js","pages/Schedules/index.js","components/CampaignModal/index.js","pages/Campaigns/index.js","pages/CampaignsConfig/index.js","pages/CampaignReport/index.js","components/AnnouncementModal/index.js","pages/Annoucements/index.js","pages/Chat/ChatList.js","pages/Chat/ChatMessages.js","pages/Chat/index.js","pages/Subscription/index.js","pages/Kanban/index.js","routes/index.js","App.js","index.js","assets/planilha.xlsx","assets/sound.mp3","assets/logo1.png","assets/chat_notify.mp3","assets/wa-background.png","assets/wa-background-dark.png","assets/logologin.png"],"names":["ColorModeContext","React","createContext","toggleColorMode","messages","pt","translations","signup","title","toasts","success","fail","form","name","email","password","buttons","submit","login","register","companies","plan","token","auth","dashboard","charts","perDay","connections","deleted","confirmationModal","deleteTitle","deleteMessage","disconnectTitle","disconnectMessage","add","disconnect","tryAgain","qrcode","newQr","connecting","toolTips","disconnected","content","connected","timeout","table","status","lastUpdate","default","actions","session","whatsappModal","edit","okAdd","okEdit","cancel","qrCode","message","contacts","searchPlaceholder","importTitlte","importMessage","import","whatsapp","contactModal","mainInfo","extraInfo","number","extraName","extraValue","addExtraInfo","queueModal","color","greetingMessage","complationMessage","outOfHoursMessage","ratingMessage","userModal","profile","scheduleModal","body","contact","sendAt","sentAt","tagModal","chat","noTicketMessage","uploads","titles","titleUploadMsgDragDrop","titleFileList","ticketsManager","newTicket","ticketsQueueSelect","placeholder","tickets","notification","tabs","open","closed","search","showAll","transferTicketModal","fieldLabel","fieldQueueLabel","fieldQueuePlaceholder","noOptions","ok","ticketsList","pendingHeader","assignedHeader","noTicketsTitle","noTicketsMessage","accept","reopen","newTicketModal","mainDrawer","listItems","quickMessages","queues","tags","administration","users","settings","helps","messagesAPI","schedules","campaigns","annoucements","chats","financeiro","appBar","user","logout","textMessage","mediaMessage","media","notifications","noTickets","dialog","shortcode","contactLists","company","contactListItems","lists","contactList","scheduledAt","completedAt","confirmation","new","update","readonly","message1","message2","message3","message4","message5","confirmationMessage1","confirmationMessage2","confirmationMessage3","confirmationMessage4","confirmationMessage5","messagePlaceholder","tagList","okadd","restart","close","attach","announcements","priority","text","mediaName","mediaPath","campaignsConfig","greeting","queueSelect","inputLabel","userCreation","options","enabled","disabled","messagesList","header","assignedTo","return","resolve","messagesInput","placeholderOpen","placeholderClosed","signMessage","contactDrawer","ticketOptionsMenu","schedule","delete","transfer","registerAppointment","appointmentsModal","textarea","confirm","messageOptionsMenu","reply","quickemessage","geral","quickemessages","backendErrors","ERR_NO_OTHER_WHATSAPP","ERR_NO_DEF_WAPP_FOUND","ERR_WAPP_NOT_INITIALIZED","ERR_WAPP_CHECK_CONTACT","ERR_WAPP_INVALID_CONTACT","ERR_WAPP_DOWNLOAD_MEDIA","ERR_INVALID_CREDENTIALS","ERR_SENDING_WAPP_MSG","ERR_DELETE_WAPP_MSG","ERR_OTHER_OPEN_TICKET","ERR_SESSION_EXPIRED","ERR_USER_CREATION_DISABLED","ERR_NO_PERMISSION","ERR_DUPLICATED_CONTACT","ERR_NO_SETTING_FOUND","ERR_NO_CONTACT_FOUND","ERR_NO_TICKET_FOUND","ERR_NO_USER_FOUND","ERR_NO_WAPP_FOUND","ERR_CREATING_MESSAGE","ERR_CREATING_TICKET","ERR_FETCH_WAPP_MSG","ERR_QUEUE_COLOR_ALREADY_EXISTS","ERR_WAPP_GREETING_REQUIRED","en","titleFrom","es","i18n","use","LanguageDetector","init","debug","defaultNS","fallbackLng","ns","resources","toastError","err","_err$response","_err$response$data","errorMsg","response","data","error","exists","toast","t","toastId","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","isString","api","axios","create","baseURL","process","withCredentials","openApi","socketConnection","params","userId","localStorage","getItem","openSocket","transports","pingTimeout","pingInterval","query","isObject","reducer","state","action","type","payload","whatsApp","whatsAppIndex","findIndex","s","id","updatedAt","retries","whatsAppId","splice","useWhatsApps","whatsApps","dispatch","useReducer","loading","setLoading","useState","useEffect","async","get","fetchSession","companyId","socket","on","whatsappId","WhatsAppsContext","WhatsAppsProvider","_ref","children","createElement","Provider","value","useAuth","history","useHistory","isAuth","setIsAuth","setUser","interceptors","request","config","headers","JSON","parse","Promise","reject","_error$response","_error$response2","originalRequest","_retry","post","setItem","stringify","defaults","Authorization","removeItem","handleLogin","userData","has","isArray","setting","find","key","moment","locale","dueDate","hoje","format","vencimento","diff","before","isBefore","dias","duration","asDays","diasVenc","valueOf","console","log","Math","round","warn","push","handleLogout","getCurrentUserInfo","AuthContext","AuthProvider","rules","static","admin","Can","role","perform","yes","no","check","permissions","staticPermissions","includes","dynamicPermissions","dynamic","permissionCondition","ListItemLink","props","icon","primary","to","className","renderLink","useMemo","forwardRef","itemProps","ref","RouterLink","Object","assign","ListItem","button","component","ListItemIcon","ListItemText","defaultProps","newChats","forEach","chatIndex","u","chatId","map","MainListItems","drawerClose","useContext","connectionWarning","setConnectionWarning","openCampaignSubmenu","setOpenCampaignSubmenu","showCampaigns","setShowCampaigns","invisible","setInvisible","pageNumber","setPageNumber","searchParam","delayDebounceFn","setTimeout","fetchChats","clearTimeout","unreadsCount","length","chatUser","unreads","filter","whats","records","onClick","PieChartOutlinedIcon","WhatsAppIcon","ExploreOutlinedIcon","LocalOfferOutlinedIcon","OfflineBoltOutlinedIcon","LocalPhoneOutlinedIcon","EventAvailableOutlinedIcon","Badge","badgeContent","ContactlessOutlinedIcon","Fragment","Divider","ListSubheader","inset","prev","VolumeUpOutlinedIcon","ExpandLessIcon","ExpandMoreIcon","Collapse","style","paddingLeft","in","unmountOnExit","List","disablePadding","ListIcon","PeopleIcon","SettingsOutlinedIcon","super","ErrorOutlineOutlinedIcon","WrapTextOutlinedIcon","PeopleAltOutlinedIcon","CodeRoundedIcon","useStyles","makeStyles","position","buttonProgress","green","top","left","marginTop","marginLeft","ButtonWithSpinner","rest","classes","Button","CircularProgress","size","elements","allowedElements","CustomLink","target","rel","MarkdownWrapper","_ref2","boldRegex","tildaRegex","test","replace","markdownOptions","disableParsingRawHTML","forceInline","overrides","a","element","el","Markdown","ticket","pendingTicket","cursor","noTicketsDiv","display","height","margin","flexDirection","alignItems","justifyContent","noTicketsText","textAlign","fontSize","lineHeight","fontWeight","contactNameWrapper","lastMessageTime","justifySelf","closedBadge","alignSelf","marginRight","contactLastMessage","paddingRight","newMessagesCount","badgeStyle","backgroundColor","acceptButton","ticketQueueColor","flex","width","TicketListItem","_ticket$queue","_ticket$queue2","_ticket$contact","ticketId","useParams","isMounted","useRef","current","dense","e","uuid","handleSelectTicket","selected","clsx","Tooltip","arrow","placement","queue","ListItemAvatar","Avatar","src","profilePicUrl","disableTypography","Typography","noWrap","variant","lastMessage","isSameDay","parseISO","Date","secondary","unreadMessages","badge","put","handleAcepptTicket","useTickets","date","queueIds","withUnreadMessages","hasMore","setHasMore","setTickets","fetchTickets","tabContainer","overflowY","maxHeight","scrollbarStyles","popoverPaper","maxWidth","spacing","breakpoints","down","noShadow","boxShadow","icons","customBadge","NotificationsPopOver","volume","ticketIdUrl","location","pathname","split","ticketIdRef","anchorEl","isOpen","setIsOpen","setNotifications","setDesktopNotifications","play","useSound","alertSound","soundAlertRef","historyRef","window","Notification","requestPermission","q","filteredTickets","indexOf","queueId","emit","prevState","ticketIndex","notfiticationIndex","n","tag","String","read","_data$ticket$queue","document","visibilityState","isGroup","isBot","handleNotifications","renotify","onclick","preventDefault","focus","handleClickAway","NotificationTicket","IconButton","handleClick","aria-label","overlap","ChatIcon","Popover","disableScrollLock","anchorOrigin","vertical","horizontal","transformOrigin","paper","onClose","chips","flexWrap","chip","QueueSelect","selectedQueueIds","onChange","multiple","setQueues","fetchQueues","FormControl","fullWidth","InputLabel","shrink","Select","label","labelWidth","MenuProps","getContentAnchorEl","renderValue","_queues$find","_queues$find2","Chip","MenuItem","root","multFieldLine","btnWrapper","formControl","minWidth","UserSchema","Yup","shape","min","max","required","UserModal","initialState","loggedInUser","setSelectedQueueIds","_data$queues","userQueueIds","fetchUser","handleClose","Dialog","scroll","DialogTitle","Formik","initialValues","enableReinitialize","validationSchema","onSubmit","values","handleSaveUser","setSubmitting","touched","errors","isSubmitting","Form","DialogContent","dividers","Field","as","TextField","autoFocus","Boolean","helperText","labelId","DialogActions","backdrop","zIndex","drawer","BackdropLoading","Backdrop","useDate","dateToClient","strDate","isValid","datetimeToClient","dateToDatabase","mainPaper","padding","AnnouncementDialog","announcement","aria-labelledby","aria-describedby","border","backgroundImage","filename","backgroundRepeat","backgroundSize","backgroundPosition","DialogContentText","newAnnouncements","announcementIndex","announcementId","AnnouncementsPopover","setAnchorEl","setAnnouncement","showAnnouncementDialog","setShowAnnouncementDialog","fetchAnnouncements","record","event","currentTarget","AnnouncementIcon","Paper","onScroll","scrollTop","scrollHeight","clientHeight","item","background","borderLeft","alt","createdAt","ChatPopover","notifySound","newMessage","senderId","ForumIcon","goToMessages","href","palette","fancyBackground","mode","main","toolbar","barraSuperior","toolbarIcon","minHeight","transition","transitions","easing","sharp","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","up","appBarSpacer","overflow","container","paddingTop","paddingBottom","containerWithScroll","LoggedInLayout","_user$company","_user$company2","_user$company3","_user$company4","userModalOpen","setUserModalOpen","menuOpen","setMenuOpen","drawerOpen","setDrawerOpen","drawerVariant","setDrawerVariant","useTheme","colorMode","greaterThenSm","useMediaQuery","offsetWidth","clear","reload","interval","setInterval","clearInterval","handleCloseMenu","Drawer","logo","ChevronLeftIcon","AppBar","Toolbar","edge","MenuIcon","Brightness7Icon","Brightness4Icon","aria-controls","aria-haspopup","AccountCircle","Menu","handleOpenUserModal","handleClickLogout","Chart","cardAvatar","grey","cardTitle","cardSubtitle","CardCounter","Skeleton","Card","CardHeader","avatar","subheader","off","red","pointer","useCompanies","save","responseData","url","method","remove","list","finding","findAll","updateSchedules","fixedHeightPaper","blue","alignRight","selectContainer","card1","card2","card3","card4","card5","card6","card7","card8","card9","Dashboard","counters","setCounters","attendants","setAttendants","filterType","setFilterType","period","setPeriod","companyDueDate","setCompanyDueDate","dateFrom","setDateFrom","dateTo","setDateTo","useDashboard","fetchData","days","isEmpty","date_from","date_to","keys","firstLoad","loadCompanies","companiesList","formatTime","minutes","startOf","Container","Grid","xs","sm","md","handleChangeFilterType","FormHelperText","InputLabelProps","handleChangePeriod","elevation","paragraph","supportPending","CallIcon","supportHappening","HourglassEmptyIcon","supportFinished","CheckCircleIcon","leads","GroupAddIcon","avgSupportTime","AccessAlarmIcon","avgWaitTime","TimerIcon","TableAttendantsStatus","textField","extraAttr","ContactSchema","ContactModal","contactId","onSave","setContact","fetchContact","handleSaveContact","gutterBottom","marginBottom","FieldArray","_ref3","info","index","DeleteOutlineIcon","createFilterOptions","trim","NewTicketModal","_user$queues","modalOpen","initialContact","setOptions","setSearchParam","selectedContact","setSelectedContact","selectedQueue","setSelectedQueue","newContact","setNewContact","contactModalOpen","setContactModalOpen","fetchContacts","handleSaveTicket","createAddContactOption","filterOptions","filtered","inputValue","renderOption","option","renderOptionLabel","handleCloseContactModal","Autocomplete","clearOnBlur","autoHighlight","freeSolo","clearOnEscape","getOptionLabel","newValue","handleSelectOption","renderInput","onKeyPress","InputProps","endAdornment","displayEmpty","TicketsContext","TicketsContextProvider","currentTicket","setCurrentTicket","code","VcardPreview","contactObj","borderRadius","Box","messageMedia","objectFit","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","ModalImageCors","imageUrl","fetching","setFetching","blobUrl","setBlobUrl","responseType","URL","createObjectURL","Blob","fetchImage","ModalImage","smallSrcSet","medium","large","ConfirmationModal","onConfirm","ReplyMessageContext","ReplyMessageProvider","replyingMessage","setReplyingMessage","medias","setMedias","MessageOptionsMenu","confirmationOpen","setConfirmationOpen","fromMe","hanldeReplyMessage","messagesListWrapper","whatsBackground","whatsBackgroundDark","circleLoading","opacity","messageLeft","right","quotedContainerLeft","quotedMsg","quotedSideColorLeft","messageRight","quotedContainerRight","quotedMsgRight","quotedSideColorRight","messageActionsButton","messageContactName","textContentItem","overflowWrap","textContentItemDeleted","fontStyle","timestamp","bottom","dailyTimestamp","dailyTimestampText","ackIcons","verticalAlign","deletedIcon","ackDoneAllIcon","downloadMedia","newMessages","messageIndex","m","messageToUpdate","MessagesList","lastMessageRef","selectedMessage","setSelectedMessage","messageOptionsMenuOpen","currentTicketId","isIOS","navigator","userAgent","MSStream","scrollToBottom","fetchMessages","scrollIntoView","handleOpenMessageOptionsMenu","extrairNomeENumero","vcard","nomeMatch","match","nome","numeroMatch","numero","checkMessageMedia","mediaType","mediaUrl","vcardPreviewInfo","controls","startIcon","GetApp","renderDailyTimestamps","messageDay","previousMessageDay","float","renderMessageDivider","renderQuotedMessage","_message$quotedMsg","_message$quotedMsg2","_message$quotedMsg3","_message$quotedMsg3$c","_message$quotedMsg4","getElementById","prevPageNumber","onDrop","droppedFiles","Array","from","dataTransfer","files","clearData","onDragOver","dropEffect","onPaste","clipboardData","renderMessages","_message$queue2","_message$queue","_message$contact","isDeleted","ExpandMore","Block","ack","AccessTime","Done","DoneAll","renderMessageAck","ticketHeader","total","borderBottom","TicketHeaderSkeleton","square","titleTypographyProps","subheaderTypographyProps","animation","TicketHeader","TicketInfo","userName","setUserName","contactName","setContactName","truncadName","substring","mainWrapper","mainWrapperShift","easeOut","TicketMessagesDialog","setTicket","fetchTicket","_data$contact","handleDrawerOpen","renderTicketInfo","contrastColor","ContactTag","toUpperCase","queueTag","connectionTag","ticketInfo","secondaryContentSecond","alignContent","ticketInfo1","Radiusdot","transform","TicketListItemCustom","_ticket$queue5","_ticket$queue5$name","_ticket$queue6","_ticket$contact2","_ticket$whatsapp","_ticket$whatsapp2","_ticket$whatsapp2$nam","_ticket$queue7","_ticket$queue8","_ticket$queue8$name","_ticket$tags","ticketUser","setTicketUser","ticketQueueName","setTicketQueueName","setTicketQueueColor","whatsAppName","setWhatsAppName","openTicketMessageDialog","setOpenTicketMessageDialog","_ticket$queue$name","_ticket$user","_ticket$user$name","_ticket$whatsapp$name","uuidv4","VisibilityIcon","ListItemSecondaryAction","chatbot","AndroidIcon","_ticket$queue3","handleCloseTicket","_ticket$queue4","handleReopenTicket","TicketsSkeleton","ticketsListWrapper","borderTop","ticketsListHeader","ticketsCount","unshift","TicketsListCustom","updateCount","shouldUpdateTicket","count","toString","TicketsListSkeleton","TabPanel","TicketsQueueSelect","userQueues","Checkbox","checked","TagsFilter","onFiltered","setTags","selecteds","setSelecteds","loadTags","v","r","renderTags","getTagProps","textShadow","UsersFilter","initialUsers","setUsers","loadUsers","userList","getOptionSelected","toLowerCase","getUserProps","ticketsWrapper","tabsHeader","tabHeaderBackground","settingsIcon","tab","ticketOptionsBox","optionsBackground","serachInputWrapper","searchIcon","searchInput","show","hide","TicketsManagerTabs","setTab","tabOpen","setTabOpen","newTicketModalOpen","setNewTicketModalOpen","showAllTickets","setShowAllTickets","searchInputRef","openCount","setOpenCount","pendingCount","setPendingCount","selectedTags","setSelectedTags","selectedUsers","setSelectedUsers","searchTimeout","handleChangeTabOpen","applyPanelStyle","handleCloseOrOpenTicket","Tabs","handleChangeTab","indicatorColor","textColor","Tab","GroupIcon","CheckBoxIcon","SearchIcon","InputBase","inputRef","searchedTerm","FormControlLabel","labelPlacement","control","Switch","TicketsList","val","TicketsListGroup","ContactDrawerSkeleton","contactHeader","contactAvatar","contactDetails","contactExtraInfo","textCenter","ContactForm","onCancel","inline","ContactNotesDialogListItem","note","deleteItem","DeleteIcon","useTicketNotes","saveNote","deleteNote","listNotes","NoteSchema","ContactNotes","newNote","setNewNote","showOnDeleteDialog","setShowOnDeleteDialog","selectedNote","setSelectedNote","notes","setNotes","handleResetState","loadNotes","openAndFetchData","handleChangeComment","handleOpenDialogDelete","handleSave","setErrors","rows","multiline","flexShrink","borderRight","ContactDrawer","_contact$extraInfo","handleDrawerClose","setModalOpen","openForm","setOpenForm","anchor","PaperProps","BackdropProps","ModalProps","CloseIcon","CreateIcon","Link","timerBox","RecordingTimer","timer","setTimer","seconds","addZero","useQuickMessages","deleteRecord","Mp3Recorder","MicRecorder","bitRate","newMessageBox","messageInputWrapper","messageInput","sendMessageIcons","uploadInput","viewMediaInputWrapper","emojiBox","audioLoading","recorderWrapper","cancelAudioIcon","sendAudioIcon","replyginMsgWrapper","replyginMsgContainer","replyginMsgBody","replyginContactMsgSideColor","replyginSelfMsgSideColor","EmojiOptions","showEmoji","setShowEmoji","handleAddEmoji","MoodIcon","Picker","perLine","showPreview","showSkinTones","onSelect","SignSwitch","setSignMessage","isWidthUp","FileInput","handleChangeMedias","disableOption","htmlFor","AttachFileIcon","ActionButtons","inputMessage","recording","ticketStatus","handleSendMessage","handleCancelAudio","handleUploadAudio","handleStartRecording","SendIcon","HighlightOffIcon","CheckCircleOutlineIcon","MicIcon","CustomInput","setInputMessage","handleInputPaste","setMediaUrl","setQuickMessages","popupOpen","setPopupOpen","listQuickMessages","truncatedMessage","firstWord","charAt","filteredOptions","setInputRef","input","closeIcon","opt","onInputChange","reason","shiftKey","maxRows","withWidth","_medias$","isWorking","setRecording","initialValue","storedValue","setStoredValue","valueToStore","Function","useLocalStorage","itsMe","emoji","native","selectedMedias","mediaDevices","getUserMedia","audio","start","blob","stop","getMp3","formData","FormData","getTime","append","CancelIcon","ClearIcon","renderReplyingMessage","useQueues","TransferTicketModalCustom","ticketid","allQueues","setAllQueues","selectedUser","setSelectedUser","findAllQueues","loadQueues","fetchUsers","noOptionsText","ScheduleSchema","ScheduleModal","scheduleId","cleanContact","setSchedule","currentContact","setCurrentContact","setContacts","c","customList","capitalize","scheduleData","handleSaveSchedule","TicketOptionsMenu","transferTicketModalOpen","setTransferTicketModalOpen","scheduleModalOpen","setScheduleModalOpen","setContactId","handleOpenConfirmationModal","keepMounted","handleOpenScheduleModal","handleCloseTransferTicketModal","handleCloseScheduleModal","actionButtons","TicketActionButtonsCustom","ticketOptionsMenuOpen","customTheme","createTheme","handleUpdateTicketStatus","Replay","UndoRoundedIcon","ThemeProvider","MoreVert","TagsContainer","then","createTag","optionsChanged","newTag","syncTags","PaperComponent","Ticket","TicketActionButtons","MessageInput","chatContainer","chatPapper","contactsWrapper","messagesWrapper","welcomeMsg","TicketsCustom","TicketsManager","TicketAdvancedLayout","styled","gridTemplateRows","placeholderContainer","placeholderItem","TicketAdvanced","setOption","BottomNavigation","showLabels","BottomNavigationAction","QuestionAnswerIcon","Tickets","usePlans","getPlanList","finder","SignUp","qs","planId","plans","setPlans","listPlans","CssBaseline","LockOutlinedIcon","recurrence","campaignsEnabled","handleSignUp","autoComplete","justify","mt","Login","handleChangeInput","noValidate","mainContainer","contentWrapper","MainContainer","contactsHeader","MainHeader","MainHeaderButtonsWrapper","Title","customTableCell","TableRowSkeleton","columns","TableRow","TableCell","_","align","SessionSchema","memo","isDefault","provider","useTypebot","sessionName","setWhatsApp","selectedQueueId","setSelectedQueueId","whatsQueueIds","transferQueueId","whatsappData","handleSaveWhatsApp","selectedIds","timeToTransfer","selectedId","setQrCode","QRCode","tooltip","typography","pxToRem","tooltipPopper","CustomToolTip","popper","Connections","whatsAppModalOpen","setWhatsAppModalOpen","qrModalOpen","setQrModalOpen","selectedWhatsApp","setSelectedWhatsApp","confirmModalOpen","setConfirmModalOpen","confirmationModalInitialState","confirmModalInfo","setConfirmModalInfo","handleCloseWhatsAppModal","useCallback","handleCloseQrModal","renderActionButtons","handleOpenQrModal","handleStartWhatsAppSession","handleRequestNewQrCode","restartWhatsapps","QrcodeModal","WhatsAppModal","PopupState","popupId","popupState","Table","TableHead","TableBody","channel","Facebook","Instagram","WhatsApp","IconChannel","SignalCellularConnectedNoInternet0Bar","CropFree","SignalCellular4Bar","SignalCellularConnectedNoInternet2Bar","renderStatusToolTips","CheckCircle","handleEditWhatsApp","Edit","DeleteOutline","textfield","row","buttonContainer","SchedulesForm","labelSaveButton","setSchedules","weekday","weekdayEn","startTime","endTime","render","arrayHelpers","FastField","field","NumberFormat","customInput","_ref4","QueueSelectCustom","ModalUsers","tableContainer","textRight","CompanyForm","onDelete","modalUser","setModalUser","firstUser","setFirstUser","setRecord","phone","handleCloseModalUsers","resetForm","handleSubmit","setValues","incrementDueDate","head","handleOpenModalUsers","CompaniesManagerGrid","rowStyle","now","EditIcon","renderPlan","renderCampaignsStatus","renderStatus","CompaniesManager","showConfirmDialog","setShowConfirmDialog","setRecords","loadPlans","companyList","handleCancel","handleOpenDeleteDialog","handleDelete","defaultMaskOptions","prefix","suffix","includeThousandsSeparator","thousandsSeparatorSymbol","allowDecimal","decimalSymbol","decimalLimit","integerLimit","allowNegative","allowLeadingZeroes","CurrencyInput","maskOptions","inputProps","currencyMask","createNumberMask","MaskedInput","mask","inputMode","PlanManagerForm","PlansManagerGrid","toLocaleString","currency","PlansManager","planList","datanew","minimumFractionDigits","HelpManagerForm","HelpsManagerGrid","description","video","HelpsManager","useHelps","loadHelps","helpList","useSettings","getAll","Options","scheduleTypeChanged","userRating","setUserRating","scheduleType","setScheduleType","callType","setCallType","chatbotType","setChatbotType","CheckMsgIsGroup","setCheckMsgIsGroupType","outsideMessageType","setOutsideMessageType","loadingUserRating","setLoadingUserRating","loadingScheduleType","setLoadingScheduleType","loadingCallType","setLoadingCallType","loadingChatbotType","setLoadingChatbotType","loadingCheckMsgIsGroup","setCheckMsgIsGroup","loadingOutsideMessageType","setLoadingOutsideMessageType","loadingOutsideQueueType","setLoadingOutsideQueueType","ipixcType","setIpIxcType","loadingIpIxcType","setLoadingIpIxcType","tokenixcType","setTokenIxcType","loadingTokenIxcType","setLoadingTokenIxcType","ipmkauthType","setIpMkauthType","loadingIpMkauthType","setLoadingIpMkauthType","clientidmkauthType","setClientIdMkauthType","loadingClientIdMkauthType","setLoadingClientIdMkauthType","clientsecretmkauthType","setClientSecrectMkauthType","loadingClientSecrectMkauthType","setLoadingClientSecrectMkauthType","asaasType","setAsaasType","loadingAsaasType","setLoadingAsaasType","handleChangeUserRating","handleScheduleType","handleGroupType","handleCallType","handleChatbotType","handleOutsideMessageType","OnlyForSuperUser","SettingsCustom","setCompany","currentUser","setCurrentUser","setSettings","schedulesEnabled","setSchedulesEnabled","getAllSettings","settingList","d","findData","isSuper","scrollButtons","handleTabChange","InputField","errorText","meta","useField","at","_renderHelperText","SelectField","selectedValue","isError","countries","AddressForm","billingName","setBillingName","addressZipCode","setAddressZipCode","addressStreet","setAddressStreet","addressState","setAddressState","addressCity","setAddressCity","addressDistrict","setAddressDistrict","formField","firstName","address1","city","zipcode","country","setFieldValue","ul","listStyle","cardHeader","cardPricing","footer","divider","customCard","custom","Pricing","setActiveStep","activeStep","usersPlans","setUsersPlans","companiesPlans","setCompaniesPlans","connectionsPlans","setConnectionsPlans","storagePlans","setStoragePlans","customValuePlans","setCustomValuePlans","plansCompanies","price","buttonText","buttonVariant","tiers","tier","StarIcon","CardContent","line","CardActions","listItem","PaymentDetails","formValues","newPlan","ReviewOrder","useFormikContext","ShippingDetails","div","Total","SuccessContent","CheckoutSuccess","_pix$qrcode","pix","pixString","stripeURL","asaasURL","mercadopagoURL","valorext","copied","setCopied","CopyToClipboard","onCopy","handleCopyQR","FaCheckCircle","FaCopy","boxSizing","fontFamily","letterSpacing","textTransform","formId","requiredErrorMsg","lastName","invalidErrorMsg","useAddressForPaymentDetails","invoiceId","nameOnCard","cardNumber","expiryDate","cvv","checkoutFormModel","nullable","stepper","wrapper","CheckoutPage","steps","datePayment","setDatePayment","Invoice","currentValidationSchema","isLastStep","_handleBack","Stepper","Step","StepLabel","formInitialValues","newValues","address2","_submitForm","setTouched","step","PaymentForm","_renderStepContent","invoices","newUsers","userIndex","Invoices","selectedContactId","setSelectedContactId","fetchInvoices","rowStatus","SubscriptionModal","detail","handleOpenContactModal","Users","deletingUser","setDeletingUser","handleDeleteUser","handleCloseUserModal","startAdornment","InputAdornment","handleEditUser","newContacts","contactIndex","Contacts","deletingContact","setDeletingContact","ImportContacts","setImportContacts","blockingContact","setBlockingContact","unBlockingContact","setUnBlockingContact","confirmOpen","setConfirmOpen","confirmChatsOpen","setConfirmChatsOpen","contactTicket","setContactTicket","fileUploadRef","listContactsToExport","setListContactsToExport","handleGetContactsToExport","handleDeleteContact","active","handleBlockContact","handleUnBlockContact","go","handleimportContact","handleImportExcel","handleimportChats","bindTrigger","ArrowDropDown","bindMenu","ContactPhone","click","Backup","CSVLink","textDecoration","separator","CloudDownloadIcon","closeAction","allDatas","exportData","wb","XLSX","book_new","ws","json_to_sheet","book_append_sheet","handleDownloadModelToExport","getDate","getMonth","getFullYear","getHours","getMinutes","getDateLastMessage","hadleEditContact","BlockIcon","ColorPicker","currentColor","selectedColor","setSelectedColor","BlockPicker","triangle","colors","hex","onChangeComplete","addButton","QueueOptionStepper","updateOptions","activeOption","setActiveOption","handleOption","parentId","optionList","edition","handleEdition","renderTitle","handleOptionChangeTitle","SaveIcon","order","handleDeleteOption","renderMessage","handleOptionChangeMessage","renderStep","StepContent","optionNumber","handleAddOption","AddIcon","nonLinear","orientation","QueueOptions","fetchOptions","addOption","newOption","renderStepper","colorAdorment","QueueSchema","QueueModal","tempoRoteador","ativarRoteador","colorPickerModalOpen","setColorPickerModalOpen","setQueue","greetingRef","handleSaveQueue","onFocus","Colorize","selectField","newQueues","queueIndex","Queues","queueModalOpen","setQueueModalOpen","handleCloseConfirmationModal","handleDeleteQueue","handleCloseQueueModal","handleOpenQueueModal","handleEditQueue","TagSchema","TagModal","tagId","kanban","setTag","handleKanbanChange","kanbanValue","tagData","handleSaveTag","ColorBox","disableAlpha","hslGradient","newTags","tagIndex","Tags","selectedTag","setSelectedTag","deletingTag","setDeletingTag","tagModalOpen","setTagModalOpen","fetchTags","handleDeleteTag","handleCloseTagModal","handleOpenTagModal","sort","b","handleEditTag","mainHeader","elementMargin","formContainer","MessagesAPI","formMessageTextData","formMessageMediaData","file","setFile","catch","handleSendTextMessage","firstFile","handleSendMediaMessage","heading","flexBasis","secondaryHeading","Helps","Accordion","AccordionSummary","expandIcon","AccordionDetails","frameBorder","allow","allowFullScreen","renderVideo","ContactListSchema","ContactListModal","contactListId","setContactList","fetchContactList","contactListData","handleSaveContactList","newContactLists","contactListIndex","ContactLists","selectedContactList","setSelectedContactList","deletingContactList","setDeletingContactList","contactListModalOpen","setContactListModalOpen","fetchContactLists","handleDeleteContactList","ContactListDialog","handleCloseContactListModal","handleOpenContactListModal","contactsCount","planilhaExemplo","download","DownloadIcon","goToContacts","handleEditContactList","ContactListItemModal","useContactLists","findById","ContactListItems","contactListItemModalOpen","setContactListItemModalOpen","findContactList","handleCloseContactListItemModal","handleImportContacts","goToContactLists","handleOpenContactListItemModal","isWhatsappValid","titleAccess","htmlColor","QuickeMessageSchema","QuickMessageDialog","quickemessageId","setQuickemessage","attachment","setAttachment","attachmentFile","handleAttachmentFile","quickemessageData","handleSaveQuickeMessage","quickmessages","newQuickmessages","quickemessageIndex","Quickemessages","selectedQuickemessage","setSelectedQuickemessage","deletingQuickemessage","setDeletingQuickemessage","quickemessageModalOpen","setQuickMessageDialogOpen","fetchQuickemessages","handleDeleteQuickemessage","resetPagination","handleCloseQuickMessageDialog","handleOpenQuickMessageDialog","_quickemessage$mediaN","handleEditQuickemessage","Route","Component","isPrivate","Redirect","RouterRoute","newSchedules","scheduleIndex","Schedules","selectedSchedule","setSelectedSchedule","deletingSchedule","setDeletingSchedule","param","URLSearchParams","fetchSchedules","handleOpenScheduleModalFromContactId","handleDeleteSchedule","str","len","handleEditSchedule","truncate","CampaignSchema","CampaignModal","campaignId","tagListId","campaign","setCampaign","whatsapps","setWhatsapps","selectedWhatsapps","setSelectedWhatsapps","setContactLists","tagLists","setTagLists","messageTab","setMessageTab","campaignEditable","setCampaignEditable","mappedWhatsapps","formattedTagLists","_ref5","prevCampaignData","entries","_ref6","moreThenAnHour","Number","isNaN","isEditable","renderMessageField","identifier","renderConfirmationMessageField","dataValues","join","_ref7","handleSaveCampaign","_ref8","centered","restartCampaign","cancelCampaign","newCampaigns","campaignIndex","Campaigns","selectedCampaign","setSelectedCampaign","deletingCampaign","setDeletingCampaign","campaignModalOpen","setCampaignModalOpen","fetchCampaigns","handleDeleteCampaign","handleCloseCampaignModal","handleOpenCampaignModal","formatStatus","PauseCircleOutlineIcon","PlayCircleOutlineIcon","DescriptionIcon","handleEditCampaign","tabPanelsContainer","initialSettings","messageInterval","longerIntervalAfter","greaterInterval","variables","CampaignsConfig","showVariablesForm","setShowVariablesForm","selectedKey","setSelectedKey","variable","setVariable","settingsList","fromEntries","handleOnChangeVariable","changedProp","handleOnChangeSettings","removeVariable","newList","addVariable","variablesExists","k","CampaignReport","validContacts","setValidContacts","delivered","setDelivered","confirmationRequested","setConfirmationRequested","confirmed","setConfirmed","percent","setPercent","mounted","findCampaign","valids","isNull","deliveredAt","confirmationRequestedAt","LinearProgress","DoneIcon","DoneAllIcon","ListAltIcon","ScheduleIcon","EventAvailableIcon","AnnouncementSchema","AnnouncementModal","announcementData","handleSaveAnnouncement","Announcements","selectedAnnouncement","setSelectedAnnouncement","deletingAnnouncement","setDeletingAnnouncement","announcementModalOpen","setAnnouncementModalOpen","handleDeleteAnnouncement","handleCloseAnnouncementModal","handleOpenAnnouncementModal","_announcement$mediaNa","handleEditAnnouncement","chatList","ChatList","handleSelectChat","handleDeleteChat","handleEditChat","pageInfo","selectedChat","setSelectedChat","getPrimaryText","mainText","getSecondaryText","getItemStyle","ownerId","messageList","inputArea","buttonSend","boxLeft","boxRight","ChatMessages","handleLoadMore","scrollToBottomRef","baseRef","contentMessage","setContentMessage","sender","Input","onKeyUp","gridContainer","gridItem","gridItemTab","btnContainer","ChatModal","handleLoadNewChat","setTitle","showDialog","setShowDialog","dialogType","setDialogType","currentChat","setCurrentChat","setChats","chatsPageInfo","setChatsPageInfo","setMessages","messagesPageInfo","setMessagesPageInfo","messagesPage","setMessagesPage","findChats","selectChat","findMessages","changedChats","filteredChats","sendMessage","deleteChat","loadMoreMessages","_formatDate","past","abs","ceil","defaultValue","trialExpiration","readOnly","Kanban","reloadData","setReloadData","isInitialLoadComplete","setIsInitialLoadComplete","lanes","jsonString","UserQueue","popularCards","fetchedTags","lista","teste","handleCardClick","ticketsNaoAgrupados","tagsOrdenadas","cards","ticketsFiltrados","Board","handleLaneDragEnd","board","sourceLaneId","targetLaneId","currentOrder","handleUpdateLanes","antigoIndex","novoIndex","objetoMovido","moverObjeto","onCardMoveAcrossLanes","cardId","Routes","BrowserRouter","exact","path","Signup","TicketResponsiveContainer","QuickMessages","Financeiro","Annoucements","Subscription","Chat","ToastContainer","queryClient","QueryClient","App","setLocale","prefersDarkMode","preferredTheme","setMode","prevMode","scrollbarStylesSoft","textPrimary","borderPrimary","dark","light","messageIcons","inputBackground","i18nlocale","ptBR","QueryClientProvider","client","ReactDOM","module","exports"],"mappings":"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","file":"static/js/main.dc0baec1.chunk.js","sourcesContent":["import React from \"react\";\n\nconst ColorModeContext = React.createContext({ toggleColorMode: () => { } });\n\nexport default ColorModeContext;","const messages = {\n  pt: {\n    translations: {\n      signup: {\n        title: \"Finalize seu cadastro!\",\n        toasts: {\n          success: \"Usuário criado com sucesso! Faça seu login!!!.\",\n          fail: \"Erro ao criar usuário. Verifique os dados informados.\",\n        },\n        form: {\n          name: \"Nome\",\n          email: \"Email\",\n          password: \"Senha\",\n        },\n        buttons: {\n          submit: \"Cadastrar\",\n          login: \"Já tem uma conta? Entre!\",\n        },\n      },\n      login: {\n        title: \"Login\",\n        form: {\n          email: \"Email\",\n          password: \"Senha\",\n        },\n        buttons: {\n          submit: \"Entrar\",\n          register: \"Não tem uma conta? Venha escolher seu plano!\",\n        },\n      },\n      companies: {\n        title: \"Cadastrar Empresa\",\n        form: {\n          name: \"Nome da Empresa\",\n          plan: \"Plano\",\n          token: \"Token\",\n          submit: \"Cadastrar\",\n          success: \"Empresa criada com sucesso!\",\n        },\n      },\n      auth: {\n        toasts: {\n          success: \"Login efetuado com sucesso!\",\n        },\n        token: \"Token\",\n      },\n      dashboard: {\n        charts: {\n          perDay: {\n            title: \"Conversas hoje: \",\n          },\n        },\n      },\n      connections: {\n        title: \"Conexões\",\n        toasts: {\n          deleted: \"Conexão com o WhatsApp excluída com sucesso!\",\n        },\n        confirmationModal: {\n          deleteTitle: \"Deletar\",\n          deleteMessage: \"Você tem certeza? Essa ação não pode ser revertida.\",\n          disconnectTitle: \"Desconectar\",\n          disconnectMessage:\n            \"Tem certeza? Você precisará ler o QR Code novamente.\",\n        },\n        buttons: {\n          add: \"Adicionar WhatsApp\",\n          disconnect: \"desconectar\",\n          tryAgain: \"Tentar novamente\",\n          qrcode: \"QR CODE\",\n          newQr: \"Novo QR CODE\",\n          connecting: \"Conectando\",\n        },\n        toolTips: {\n          disconnected: {\n            title: \"Falha ao iniciar sessão do WhatsApp\",\n            content:\n              \"Certifique-se de que seu celular esteja conectado à internet e tente novamente, ou solicite um novo QR Code\",\n          },\n          qrcode: {\n            title: \"Esperando leitura do QR Code\",\n            content:\n              \"Clique no botão 'QR CODE' e leia o QR Code com o seu celular para iniciar a sessão\",\n          },\n          connected: {\n            title: \"Conexão estabelecida!\",\n          },\n          timeout: {\n            title: \"A conexão com o celular foi perdida\",\n            content:\n              \"Certifique-se de que seu celular esteja conectado à internet e o WhatsApp esteja aberto, ou clique no botão 'Desconectar' para obter um novo QR Code\",\n          },\n        },\n        table: {\n          name: \"Nome\",\n          status: \"Status\",\n          lastUpdate: \"Última atualização\",\n          default: \"Padrão\",\n          actions: \"Ações\",\n          session: \"Sessão\",\n        },\n      },\n      whatsappModal: {\n        title: {\n          add: \"Adicionar WhatsApp\",\n          edit: \"Editar WhatsApp\",\n        },\n        form: {\n          name: \"Nome\",\n          default: \"Padrão\",\n        },\n        buttons: {\n          okAdd: \"Adicionar\",\n          okEdit: \"Salvar\",\n          cancel: \"Cancelar\",\n        },\n        success: \"WhatsApp salvo com sucesso.\",\n      },\n      qrCode: {\n        message: \"Leia o QrCode para iniciar a sessão\",\n      },\n      contacts: {\n        title: \"Contatos\",\n        toasts: {\n          deleted: \"Contato excluído com sucesso!\",\n        },\n        searchPlaceholder: \"Pesquisar...\",\n        confirmationModal: {\n          deleteTitle: \"Deletar \",\n          importTitlte: \"Importar contatos\",\n          deleteMessage:\n            \"Tem certeza que deseja deletar este contato? Todos as conversas relacionadas serão perdidos.\",\n          importMessage: \"Deseja importar todos os contatos do telefone?\",\n        },\n        buttons: {\n          import: \"Importar Contatos\",\n          add: \"Adicionar Contato\",\n        },\n        table: {\n          name: \"Nome\",\n          whatsapp: \"WhatsApp\",\n          email: \"Email\",\n          actions: \"Ações\",\n        },\n      },\n      contactModal: {\n        title: {\n          add: \"Adicionar contato\",\n          edit: \"Editar contato\",\n        },\n        form: {\n          mainInfo: \"Dados do contato\",\n          extraInfo: \"Informações adicionais\",\n          name: \"Nome\",\n          number: \"Número do Whatsapp\",\n          email: \"Email\",\n          extraName: \"Nome do campo\",\n          extraValue: \"Valor\",\n        },\n        buttons: {\n          addExtraInfo: \"Adicionar informação\",\n          okAdd: \"Adicionar\",\n          okEdit: \"Salvar\",\n          cancel: \"Cancelar\",\n        },\n        success: \"Contato salvo com sucesso.\",\n      },\n      queueModal: {\n        title: {\n          add: \"Adicionar fila\",\n          edit: \"Editar fila\",\n        },\n        form: {\n          name: \"Nome\",\n          color: \"Cor\",\n          greetingMessage: \"Mensagem de saudação\",\n          complationMessage: \"Mensagem de conclusão\",\n          outOfHoursMessage: \"Mensagem de fora de expediente\",\n          ratingMessage: \"Mensagem de avaliação\",\n          token: \"Token\",\n        },\n        buttons: {\n          okAdd: \"Adicionar\",\n          okEdit: \"Salvar\",\n          cancel: \"Cancelar\",\n        },\n      },\n      userModal: {\n        title: {\n          add: \"Adicionar usuário\",\n          edit: \"Editar usuário\",\n        },\n        form: {\n          name: \"Nome\",\n          email: \"Email\",\n          password: \"Senha\",\n          profile: \"Perfil\",\n        },\n        buttons: {\n          okAdd: \"Adicionar\",\n          okEdit: \"Salvar\",\n          cancel: \"Cancelar\",\n        },\n        success: \"Usuário salvo com sucesso.\",\n      },\n      scheduleModal: {\n        title: {\n          add: \"Novo Agendamento\",\n          edit: \"Editar Agendamento\",\n        },\n        form: {\n          body: \"Mensagem\",\n          contact: \"Contato\",\n          sendAt: \"Data de Agendamento\",\n          sentAt: \"Data de Envio\",\n        },\n        buttons: {\n          okAdd: \"Adicionar\",\n          okEdit: \"Salvar\",\n          cancel: \"Cancelar\",\n        },\n        success: \"Agendamento salvo com sucesso.\",\n      },\n      tagModal: {\n        title: {\n          add: \"Nova Tag\",\n          edit: \"Editar Tag\",\n        },\n        form: {\n          name: \"Nome\",\n          color: \"Cor\",\n        },\n        buttons: {\n          okAdd: \"Adicionar\",\n          okEdit: \"Salvar\",\n          cancel: \"Cancelar\",\n        },\n        success: \"Tag salvo com sucesso.\",\n      },\n      chat: {\n        noTicketMessage: \"Selecione um ticket para começar a conversar.\",\n      },\n      uploads: {\n        titles: {\n          titleUploadMsgDragDrop: \"ARRASTE E SOLTE ARQUIVOS NO CAMPO ABAIXO\",\n          titleFileList: \"Lista de arquivo(s)\"\n        },\n      },      \n      ticketsManager: {\n        buttons: {\n          newTicket: \"Novo\",\n        },\n      },\n      ticketsQueueSelect: {\n        placeholder: \"Filas\",\n      },\n      tickets: {\n        toasts: {\n          deleted: \"O atendimento que você estava foi deletado.\",\n        },\n        notification: {\n          message: \"Mensagem de\",\n        },\n        tabs: {\n          open: { title: \"Abertas\" },\n          closed: { title: \"Resolvidos\" },\n          search: { title: \"Busca\" },\n        },\n        search: {\n          placeholder: \"Buscar atendimento e mensagens\",\n        },\n        buttons: {\n          showAll: \"Todos\",\n        },\n      },\n      transferTicketModal: {\n        title: \"Transferir Ticket\",\n        fieldLabel: \"Digite para buscar usuários\",\n        fieldQueueLabel: \"Transferir para fila\",\n        fieldQueuePlaceholder: \"Selecione uma fila\",\n        noOptions: \"Nenhum usuário encontrado com esse nome\",\n        buttons: {\n          ok: \"Transferir\",\n          cancel: \"Cancelar\",\n        },\n      },\n      ticketsList: {\n        pendingHeader: \"Aguardando\",\n        assignedHeader: \"Atendendo\",\n        noTicketsTitle: \"Nada aqui!\",\n        noTicketsMessage:\n          \"Nenhum atendimento encontrado com esse status ou termo pesquisado\",\n        buttons: {\n          accept: \"Aceitar\",\n          closed: \"Finalizar\",\n          reopen: \"Reabrir\",\n        },\n      },\n      newTicketModal: {\n        title: \"Criar Ticket\",\n        fieldLabel: \"Digite para pesquisar o contato\",\n        add: \"Adicionar\",\n        buttons: {\n          ok: \"Salvar\",\n          cancel: \"Cancelar\",\n        },\n      },\n      mainDrawer: {\n        listItems: {\n          dashboard: \"Dashboard\",\n          connections: \"Conexões\",\n          tickets: \"Conversas\",\n          quickMessages: \"Respostas Rápidas\",\n          contacts: \"Contatos\",\n          queues: \"Filas & Setores\",\n          tags: \"Tags\",\n          administration: \"Administração\",\n          users: \"Usuários\",\n          settings: \"Configurações\",\n          helps: \"Ajuda\",\n          messagesAPI: \"API\",\n          schedules: \"Agendamentos\",\n          campaigns: \"Campanhas\",\n          annoucements: \"Informativos\",\n          chats: \"Chat Interno\",\n          financeiro: \"Financeiro\",\n        },\n        appBar: {\n          user: {\n            profile: \"Perfil\",\n            logout: \"Sair\",\n          },\n        },\n      },\n      messagesAPI: {\n        title: \"API\",\n        textMessage: {\n          number: \"Número\",\n          body: \"Mensagem\",\n          token: \"Token cadastrado\",\n        },\n        mediaMessage: {\n          number: \"Número\",\n          body: \"Nome do arquivo\",\n          media: \"Arquivo\",\n          token: \"Token cadastrado\",\n        },\n      },\n      notifications: {\n        noTickets: \"Nenhuma notificação.\",\n      },\n      quickMessages: {\n        title: \"Respostas Rápidas\",\n        buttons: {\n          add: \"Nova Resposta\",\n        },\n        dialog: {\n          shortcode: \"Atalho\",\n          message: \"Resposta\",\n        },\n      },\n      contactLists: {\n        title: \"Listas de Contatos\",\n        table: {\n          name: \"Nome\",\n          contacts: \"Contatos\",\n          actions: \"Ações\",\n        },\n        buttons: {\n          add: \"Nova Lista\",\n        },\n        dialog: {\n          name: \"Nome\",\n          company: \"Empresa\",\n          okEdit: \"Editar\",\n          okAdd: \"Adicionar\",\n          add: \"Adicionar\",\n          edit: \"Editar\",\n          cancel: \"Cancelar\",\n        },\n        confirmationModal: {\n          deleteTitle: \"Excluir\",\n          deleteMessage: \"Esta ação não pode ser revertida.\",\n        },\n        toasts: {\n          deleted: \"Registro excluído\",\n        },\n      },\n      contactListItems: {\n        title: \"Contatos\",\n        searchPlaceholder: \"Pesquisa\",\n        buttons: {\n          add: \"Novo\",\n          lists: \"Listas\",\n          import: \"Importar\",\n        },\n        dialog: {\n          name: \"Nome\",\n          number: \"Número\",\n          whatsapp: \"Whatsapp\",\n          email: \"E-mail\",\n          okEdit: \"Editar\",\n          okAdd: \"Adicionar\",\n          add: \"Adicionar\",\n          edit: \"Editar\",\n          cancel: \"Cancelar\",\n        },\n        table: {\n          name: \"Nome\",\n          number: \"Número\",\n          whatsapp: \"Whatsapp\",\n          email: \"E-mail\",\n          actions: \"Ações\",\n        },\n        confirmationModal: {\n          deleteTitle: \"Excluir\",\n          deleteMessage: \"Esta ação não pode ser revertida.\",\n          importMessage: \"Deseja importar os contatos desta planilha? \",\n          importTitlte: \"Importar\",\n        },\n        toasts: {\n          deleted: \"Registro excluído\",\n        },\n      },\n      campaigns: {\n        title: \"Campanhas\",\n        searchPlaceholder: \"Pesquisa\",\n        buttons: {\n          add: \"Nova Campanha\",\n          contactLists: \"Listas de Contatos\",\n        },\n        table: {\n          name: \"Nome\",\n          whatsapp: \"Conexão\",\n          contactList: \"Lista de Contatos\",\n          status: \"Status\",\n          scheduledAt: \"Agendamento\",\n          completedAt: \"Concluída\",\n          confirmation: \"Confirmação\",\n          actions: \"Ações\",\n        },\n        dialog: {\n          new: \"Nova Campanha\",\n          update: \"Editar Campanha\",\n          readonly: \"Apenas Visualização\",\n          form: {\n            name: \"Nome\",\n            message1: \"Mensagem 1\",\n            message2: \"Mensagem 2\",\n            message3: \"Mensagem 3\",\n            message4: \"Mensagem 4\",\n            message5: \"Mensagem 5\",\n            confirmationMessage1: \"Mensagem de Confirmação 1\",\n            confirmationMessage2: \"Mensagem de Confirmação 2\",\n            confirmationMessage3: \"Mensagem de Confirmação 3\",\n            confirmationMessage4: \"Mensagem de Confirmação 4\",\n            confirmationMessage5: \"Mensagem de Confirmação 5\",\n            messagePlaceholder: \"Conteúdo da mensagem\",\n            whatsapp: \"Conexão\",\n            status: \"Status\",\n            scheduledAt: \"Agendamento\",\n            confirmation: \"Confirmação\",\n            contactList: \"Lista de Contato\",\n            tagList: \"Tags\",\n          },\n          buttons: {\n            add: \"Adicionar\",\n            edit: \"Atualizar\",\n            okadd: \"Ok\",\n            cancel: \"Cancelar Disparos\",\n            restart: \"Reiniciar Disparos\",\n            close: \"Fechar\",\n            attach: \"Anexar Arquivo\",\n          },\n        },\n        confirmationModal: {\n          deleteTitle: \"Excluir\",\n          deleteMessage: \"Esta ação não pode ser revertida.\",\n        },\n        toasts: {\n          success: \"Operação realizada com sucesso\",\n          cancel: \"Campanha cancelada\",\n          restart: \"Campanha reiniciada\",\n          deleted: \"Registro excluído\",\n        },\n      },\n      announcements: {\n        title: \"Informativos\",\n        searchPlaceholder: \"Pesquisa\",\n        buttons: {\n          add: \"Novo Informativo\",\n          contactLists: \"Listas de Informativos\",\n        },\n        table: {\n          priority: \"Prioridade\",\n          title: \"Title\",\n          text: \"Texto\",\n          mediaName: \"Arquivo\",\n          status: \"Status\",\n          actions: \"Ações\",\n        },\n        dialog: {\n          edit: \"Edição de Informativo\",\n          add: \"Novo Informativo\",\n          update: \"Editar Informativo\",\n          readonly: \"Apenas Visualização\",\n          form: {\n            priority: \"Prioridade\",\n            title: \"Title\",\n            text: \"Texto\",\n            mediaPath: \"Arquivo\",\n            status: \"Status\",\n          },\n          buttons: {\n            add: \"Adicionar\",\n            edit: \"Atualizar\",\n            okadd: \"Ok\",\n            cancel: \"Cancelar\",\n            close: \"Fechar\",\n            attach: \"Anexar Arquivo\",\n          },\n        },\n        confirmationModal: {\n          deleteTitle: \"Excluir\",\n          deleteMessage: \"Esta ação não pode ser revertida.\",\n        },\n        toasts: {\n          success: \"Operação realizada com sucesso\",\n          deleted: \"Registro excluído\",\n        },\n      },\n      campaignsConfig: {\n        title: \"Configurações de Campanhas\",\n      },\n      queues: {\n        title: \"Filas & Chatbot\",\n        table: {\n          name: \"Nome\",\n          color: \"Cor\",\n          greeting: \"Mensagem de saudação\",\n          actions: \"Ações\",\n        },\n        buttons: {\n          add: \"Adicionar fila\",\n        },\n        confirmationModal: {\n          deleteTitle: \"Excluir\",\n          deleteMessage:\n            \"Você tem certeza? Essa ação não pode ser revertida! As Conversas dessa fila continuarão existindo, mas não terão mais nenhuma fila atribuída.\",\n        },\n      },\n      queueSelect: {\n        inputLabel: \"Filas\",\n      },\n      users: {\n        title: \"Usuários\",\n        table: {\n          name: \"Nome\",\n          email: \"Email\",\n          profile: \"Perfil\",\n          actions: \"Ações\",\n        },\n        buttons: {\n          add: \"Adicionar usuário\",\n        },\n        toasts: {\n          deleted: \"Usuário excluído com sucesso.\",\n        },\n        confirmationModal: {\n          deleteTitle: \"Excluir\",\n          deleteMessage:\n            \"Todos os dados do usuário serão perdidos. Os atendimento abertos deste usuário serão movidos para a fila.\",\n        },\n      },\n      helps: {\n        title: \"Central de Ajuda\",\n      },\n      schedules: {\n        title: \"Agendamentos\",\n        confirmationModal: {\n          deleteTitle: \"Você tem certeza que quer excluir este Agendamento?\",\n          deleteMessage: \"Esta ação não pode ser revertida.\",\n        },\n        table: {\n          contact: \"Contato\",\n          body: \"Mensagem\",\n          sendAt: \"Data de Agendamento\",\n          sentAt: \"Data de Envio\",\n          status: \"Status\",\n          actions: \"Ações\",\n        },\n        buttons: {\n          add: \"Novo Agendamento\",\n        },\n        toasts: {\n          deleted: \"Agendamento excluído com sucesso.\",\n        },\n      },\n      tags: {\n        title: \"Tags\",\n        confirmationModal: {\n          deleteTitle: \"Você tem certeza que quer excluir esta Tag?\",\n          deleteMessage: \"Esta ação não pode ser revertida.\",\n        },\n        table: {\n          name: \"Nome\",\n          color: \"Cor\",\n          tickets: \"Registrados\",\n          actions: \"Ações\",\n        },\n        buttons: {\n          add: \"Nova Tag\",\n        },\n        toasts: {\n          deleted: \"Tag excluído com sucesso.\",\n        },\n      },\n      settings: {\n        success: \"Configurações salvas com sucesso.\",\n        title: \"Configurações\",\n        settings: {\n          userCreation: {\n            name: \"Criação de usuário\",\n            options: {\n              enabled: \"Ativado\",\n              disabled: \"Desativado\",\n            },\n          },\n        },\n      },\n      messagesList: {\n        header: {\n          assignedTo: \"Atribuído à:\",\n          buttons: {\n            return: \"Retornar\",\n            resolve: \"Resolver\",\n            reopen: \"Reabrir\",\n            accept: \"Aceitar\",\n          },\n        },\n      },\n      messagesInput: {\n        placeholderOpen: \"Digite uma mensagem\",\n        placeholderClosed:\n          \"Reabra ou aceite esse ticket para enviar uma mensagem.\",\n        signMessage: \"Assinar\",\n      },\n      contactDrawer: {\n        header: \"Dados do contato\",\n        buttons: {\n          edit: \"Editar contato\",\n        },\n        extraInfo: \"Outras informações\",\n      },\n      ticketOptionsMenu: {\n        schedule: \"Agendamento\",\n        delete: \"Deletar\",\n        transfer: \"Transferir\",\n        registerAppointment: \"Observações do Contato\",\n        appointmentsModal: {\n          title: \"Observações do Contato\",\n          textarea: \"Observação\",\n          placeholder: \"Insira aqui a informação que deseja registrar\",\n        },\n        confirmationModal: {\n          title: \"Deletar o ticket do contato\",\n          message:\n            \"Atenção! Todas as mensagens relacionadas ao ticket serão perdidas.\",\n        },\n        buttons: {\n          delete: \"Excluir\",\n          cancel: \"Cancelar\",\n        },\n      },\n      confirmationModal: {\n        buttons: {\n          confirm: \"Ok\",\n          cancel: \"Cancelar\",\n        },\n      },\n      messageOptionsMenu: {\n        delete: \"Deletar\",\n        reply: \"Responder\",\n        confirmationModal: {\n          title: \"Apagar mensagem?\",\n          message: \"Esta ação não pode ser revertida.\",\n        },\n      },\n      quickemessage: {\n        toasts: {\n          success: \"Atalho adicionado com sucesso!\",\n          deleted: \"Atalho removido com sucesso!\",\n        },\n        title: \"Respostas Rápidas\",\n        buttons: {\n          add: \"Nova Resposta\",\n        },\n        dialog: {\n          add: \"Adicionar\",\n          edit: \"Editar\",\n          form: {\n            shortcode: \"Atalho\",\n            message: \"Mensagem\",\n            geral: \"Global\",\n          },\n          buttons: {\n            cancel: \"Cancelar\",\n            edit: \"Salvar\",\n            attach: \"Anexar\",\n            add: \"Salvar\",\n          },\n        },\n        confirmationModal: {\n          deleteTitle: \"Exclusão\",\n          deleteMessage: \"Esta ação é irreversível! Deseja prosseguir?\",  \n        },\n      },\n      quickemessages: {\n        toasts: {\n          success: \"Atalho adicionado com sucesso!\",\n          deleted: \"Atalho removido com sucesso!\",\n        },\n        title: \"Respostas Rápidas\",\n        table: {\n          shortcode: \"Atalho\",\n          mediaName: \"Arquivo\",\n          status: \"Global\",\n          actions: \"Ação\",\n        },\n        searchPlaceholder: \"Procurar\",\n        buttons: {\n          add: \"Adicionar\",\n          attach: \"Anexar Arquivo\",\n          cancel: \"Cancelar\",\n          edit: \"Salvar\",\n        },\n        confirmationModal: {\n          deleteTitle: \"Exclusão\",\n          deleteMessage: \"Esta ação é irreversível! Deseja prosseguir?\",  \n        },\n      },\n      backendErrors: {\n        ERR_NO_OTHER_WHATSAPP: \"Deve haver pelo menos um WhatsApp padrão.\",\n        ERR_NO_DEF_WAPP_FOUND:\n          \"Nenhum WhatsApp padrão encontrado. Verifique a página de conexões.\",\n        ERR_WAPP_NOT_INITIALIZED:\n          \"Esta sessão do WhatsApp não foi inicializada. Verifique a página de conexões.\",\n        ERR_WAPP_CHECK_CONTACT:\n          \"Não foi possível verificar o contato do WhatsApp. Verifique a página de conexões\",\n        ERR_WAPP_INVALID_CONTACT: \"Este não é um número de Whatsapp válido.\",\n        ERR_WAPP_DOWNLOAD_MEDIA:\n          \"Não foi possível baixar mídia do WhatsApp. Verifique a página de conexões.\",\n        ERR_INVALID_CREDENTIALS:\n          \"Erro de autenticação. Por favor, tente novamente.\",\n        ERR_SENDING_WAPP_MSG:\n          \"Erro ao enviar mensagem do WhatsApp. Verifique a página de conexões.\",\n        ERR_DELETE_WAPP_MSG: \"Não foi possível excluir a mensagem do WhatsApp.\",\n        ERR_OTHER_OPEN_TICKET: \"Já existe um tíquete aberto para este contato.\",\n        ERR_SESSION_EXPIRED: \"Sessão expirada. Por favor entre.\",\n        ERR_USER_CREATION_DISABLED:\n          \"A criação do usuário foi desabilitada pelo administrador.\",\n        ERR_NO_PERMISSION: \"Você não tem permissão para acessar este recurso.\",\n        ERR_DUPLICATED_CONTACT: \"Já existe um contato com este número.\",\n        ERR_NO_SETTING_FOUND: \"Nenhuma configuração encontrada com este ID.\",\n        ERR_NO_CONTACT_FOUND: \"Nenhum contato encontrado com este ID.\",\n        ERR_NO_TICKET_FOUND: \"Nenhum tíquete encontrado com este ID.\",\n        ERR_NO_USER_FOUND: \"Nenhum usuário encontrado com este ID.\",\n        ERR_NO_WAPP_FOUND: \"Nenhum WhatsApp encontrado com este ID.\",\n        ERR_CREATING_MESSAGE: \"Erro ao criar mensagem no banco de dados.\",\n        ERR_CREATING_TICKET: \"Erro ao criar tíquete no banco de dados.\",\n        ERR_FETCH_WAPP_MSG:\n          \"Erro ao buscar a mensagem no WhtasApp, talvez ela seja muito antiga.\",\n        ERR_QUEUE_COLOR_ALREADY_EXISTS:\n          \"Esta cor já está em uso, escolha outra.\",\n        ERR_WAPP_GREETING_REQUIRED:\n          \"A mensagem de saudação é obrigatório quando há mais de uma fila.\",\n      },\n    },\n  },\n};\n\nexport { messages };\n","import { messages as portugueseMessages } from \"./pt\";\nimport { messages as englishMessages } from \"./en\";\nimport { messages as spanishMessages } from \"./es\";\n\nconst messages = {\n\t...portugueseMessages,\n\t...englishMessages,\n\t...spanishMessages,\n};\n\nexport { messages };\n","const messages = {\n\ten: {\n\t\ttranslations: {\n\t\t\tsignup: {\n\t\t\t\ttitle: \"Sign up\",\n\t\t\t\ttoasts: {\n\t\t\t\t\tsuccess: \"User created successfully! Please login!\",\n\t\t\t\t\tfail: \"Error creating user. Check the reported data.\",\n\t\t\t\t},\n\t\t\t\tform: {\n\t\t\t\t\tname: \"Name\",\n\t\t\t\t\temail: \"Email\",\n\t\t\t\t\tpassword: \"Password\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\tsubmit: \"Register\",\n\t\t\t\t\tlogin: \"Already have an account? Log in!\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tlogin: {\n\t\t\t\ttitle: \"Login\",\n\t\t\t\tform: {\n\t\t\t\t\temail: \"Email\",\n\t\t\t\t\tpassword: \"Password\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\tsubmit: \"Enter\",\n\t\t\t\t\tregister: \"Don't have an account? Register!\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tauth: {\n\t\t\t\ttoasts: {\n\t\t\t\t\tsuccess: \"Login successfully!\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tdashboard: {\n\t\t\t\tcharts: {\n\t\t\t\t\tperDay: {\n\t\t\t\t\t\ttitle: \"Tickets today: \",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tconnections: {\n\t\t\t\ttitle: \"Connections\",\n\t\t\t\ttoasts: {\n\t\t\t\t\tdeleted: \"WhatsApp connection deleted sucessfully!\",\n\t\t\t\t},\n\t\t\t\tconfirmationModal: {\n\t\t\t\t\tdeleteTitle: \"Delete\",\n\t\t\t\t\tdeleteMessage: \"Are you sure? It cannot be reverted.\",\n\t\t\t\t\tdisconnectTitle: \"Disconnect\",\n\t\t\t\t\tdisconnectMessage: \"Are you sure? You'll need to read QR Code again.\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\tadd: \"Add WhatsApp\",\n\t\t\t\t\tdisconnect: \"Disconnect\",\n\t\t\t\t\ttryAgain: \"Try Again\",\n\t\t\t\t\tqrcode: \"QR CODE\",\n\t\t\t\t\tnewQr: \"New QR CODE\",\n\t\t\t\t\tconnecting: \"Connectiing\",\n\t\t\t\t},\n\t\t\t\ttoolTips: {\n\t\t\t\t\tdisconnected: {\n\t\t\t\t\t\ttitle: \"Failed to start WhatsApp session\",\n\t\t\t\t\t\tcontent:\n\t\t\t\t\t\t\t\"Make sure your cell phone is connected to the internet and try again, or request a new QR Code\",\n\t\t\t\t\t},\n\t\t\t\t\tqrcode: {\n\t\t\t\t\t\ttitle: \"Waiting for QR Code read\",\n\t\t\t\t\t\tcontent:\n\t\t\t\t\t\t\t\"Click on 'QR CODE' button and read the QR Code with your cell phone to start session\",\n\t\t\t\t\t},\n\t\t\t\t\tconnected: {\n\t\t\t\t\t\ttitle: \"Connection established\",\n\t\t\t\t\t},\n\t\t\t\t\ttimeout: {\n\t\t\t\t\t\ttitle: \"Connection with cell phone has been lost\",\n\t\t\t\t\t\tcontent:\n\t\t\t\t\t\t\t\"Make sure your cell phone is connected to the internet and WhatsApp is open, or click on 'Disconnect' button to get a new QRcode\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttable: {\n\t\t\t\t\tname: \"Name\",\n\t\t\t\t\tstatus: \"Status\",\n\t\t\t\t\tlastUpdate: \"Last Update\",\n\t\t\t\t\tdefault: \"Default\",\n\t\t\t\t\tactions: \"Actions\",\n\t\t\t\t\tsession: \"Session\",\n\t\t\t\t},\n\t\t\t},\n\t\t\twhatsappModal: {\n\t\t\t\ttitle: {\n\t\t\t\t\tadd: \"Add WhatsApp\",\n\t\t\t\t\tedit: \"Edit WhatsApp\",\n\t\t\t\t},\n\t\t\t\tform: {\n\t\t\t\t\tname: \"Name\",\n\t\t\t\t\tdefault: \"Default\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\tokAdd: \"Add\",\n\t\t\t\t\tokEdit: \"Save\",\n\t\t\t\t\tcancel: \"Cancel\",\n\t\t\t\t},\n\t\t\t\tsuccess: \"WhatsApp saved successfully.\",\n\t\t\t},\n\t\t\tqrCode: {\n\t\t\t\tmessage: \"Read QrCode to start the session\",\n\t\t\t},\n\t\t\tcontacts: {\n\t\t\t\ttitle: \"Contacts\",\n\t\t\t\ttoasts: {\n\t\t\t\t\tdeleted: \"Contact deleted sucessfully!\",\n\t\t\t\t},\n\t\t\t\tsearchPlaceholder: \"Search ...\",\n\t\t\t\tconfirmationModal: {\n\t\t\t\t\tdeleteTitle: \"Delete\",\n\t\t\t\t\timportTitlte: \"Import contacts\",\n\t\t\t\t\tdeleteMessage:\n\t\t\t\t\t\t\"Are you sure you want to delete this contact? All related tickets will be lost.\",\n\t\t\t\t\timportMessage: \"Do you want to import all contacts from the phone?\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\timport: \"Import Contacts\",\n\t\t\t\t\tadd: \"Add Contact\",\n\t\t\t\t},\n\t\t\t\ttable: {\n\t\t\t\t\tname: \"Name\",\n\t\t\t\t\twhatsapp: \"WhatsApp\",\n\t\t\t\t\temail: \"Email\",\n\t\t\t\t\tactions: \"Actions\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tcontactModal: {\n\t\t\t\ttitle: {\n\t\t\t\t\tadd: \"Add contact\",\n\t\t\t\t\tedit: \"Edit contact\",\n\t\t\t\t},\n\t\t\t\tform: {\n\t\t\t\t\tmainInfo: \"Contact details\",\n\t\t\t\t\textraInfo: \"Additional information\",\n\t\t\t\t\tname: \"Name\",\n\t\t\t\t\tnumber: \"Whatsapp number\",\n\t\t\t\t\temail: \"Email\",\n\t\t\t\t\textraName: \"Field name\",\n\t\t\t\t\textraValue: \"Value\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\taddExtraInfo: \"Add information\",\n\t\t\t\t\tokAdd: \"Add\",\n\t\t\t\t\tokEdit: \"Save\",\n\t\t\t\t\tcancel: \"Cancel\",\n\t\t\t\t},\n\t\t\t\tsuccess: \"Contact saved successfully.\",\n\t\t\t},\n\t\t\tqueueModal: {\n\t\t\t\ttitle: {\n\t\t\t\t\tadd: \"Add queue\",\n\t\t\t\t\tedit: \"Edit queue\",\n\t\t\t\t},\n\t\t\t\tform: {\n\t\t\t\t\tname: \"Name\",\n\t\t\t\t\tcolor: \"Color\",\n\t\t\t\t\tgreetingMessage: \"Greeting Message\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\tokAdd: \"Add\",\n\t\t\t\t\tokEdit: \"Save\",\n\t\t\t\t\tcancel: \"Cancel\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tuserModal: {\n\t\t\t\ttitle: {\n\t\t\t\t\tadd: \"Add user\",\n\t\t\t\t\tedit: \"Edit user\",\n\t\t\t\t},\n\t\t\t\tform: {\n\t\t\t\t\tname: \"Name\",\n\t\t\t\t\temail: \"Email\",\n\t\t\t\t\tpassword: \"Password\",\n\t\t\t\t\tprofile: \"Profile\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\tokAdd: \"Add\",\n\t\t\t\t\tokEdit: \"Save\",\n\t\t\t\t\tcancel: \"Cancel\",\n\t\t\t\t},\n\t\t\t\tsuccess: \"User saved successfully.\",\n\t\t\t},\n\t\t\tchat: {\n\t\t\t\tnoTicketMessage: \"Select a ticket to start chatting.\",\n\t\t\t},\n\t\t\tticketsManager: {\n\t\t\t\tbuttons: {\n\t\t\t\t\tnewTicket: \"New\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tticketsQueueSelect: {\n\t\t\t\tplaceholder: \"Queues\",\n\t\t\t},\n\t\t\ttickets: {\n\t\t\t\ttoasts: {\n\t\t\t\t\tdeleted: \"The ticket you were on has been deleted.\",\n\t\t\t\t},\n\t\t\t\tnotification: {\n\t\t\t\t\tmessage: \"Message from\",\n\t\t\t\t},\n\t\t\t\ttabs: {\n\t\t\t\t\topen: { title: \"Inbox\" },\n\t\t\t\t\tclosed: { title: \"Resolved\" },\n\t\t\t\t\tsearch: { title: \"Search\" },\n\t\t\t\t},\n\t\t\t\tsearch: {\n\t\t\t\t\tplaceholder: \"Search tickets and messages.\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\tshowAll: \"All\",\n\t\t\t\t},\n\t\t\t},\n\t\t\ttransferTicketModal: {\n\t\t\t\ttitle: \"Transfer Ticket\",\n\t\t\t\tfieldLabel: \"Type to search for users\",\n\t\t\t\tnoOptions: \"No user found with this name\",\n\t\t\t\tbuttons: {\n\t\t\t\t\tok: \"Transfer\",\n\t\t\t\t\tcancel: \"Cancel\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tticketsList: {\n\t\t\t\tpendingHeader: \"Queue\",\n\t\t\t\tassignedHeader: \"Working on\",\n\t\t\t\tnoTicketsTitle: \"Nothing here!\",\n\t\t\t\tnoTicketsMessage: \"No tickets found with this status or search term.\",\n\t\t\t\tbuttons: {\n\t\t\t\t\taccept: \"Accept\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tnewTicketModal: {\n\t\t\t\ttitle: \"Create Ticket\",\n\t\t\t\tfieldLabel: \"Type to search for a contact\",\n\t\t\t\tadd: \"Add\",\n\t\t\t\tbuttons: {\n\t\t\t\t\tok: \"Save\",\n\t\t\t\t\tcancel: \"Cancel\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tmainDrawer: {\n\t\t\t\tlistItems: {\n\t\t\t\t\tdashboard: \"Dashboard\",\n\t\t\t\t\tconnections: \"Connections\",\n\t\t\t\t\ttickets: \"Tickets\",\n\t\t\t\t\tcontacts: \"Contacts\",\n\t\t\t\t\tqueues: \"Queues\",\n\t\t\t\t\tadministration: \"Administration\",\n\t\t\t\t\tusers: \"Users\",\n\t\t\t\t\tsettings: \"Settings\",\n\t\t\t\t},\n\t\t\t\tappBar: {\n\t\t\t\t\tuser: {\n\t\t\t\t\t\tprofile: \"Profile\",\n\t\t\t\t\t\tlogout: \"Logout\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tnotifications: {\n\t\t\t\tnoTickets: \"No notifications.\",\n\t\t\t},\n\t\t\tqueues: {\n\t\t\t\ttitle: \"Queues\",\n\t\t\t\ttable: {\n\t\t\t\t\tname: \"Name\",\n\t\t\t\t\tcolor: \"Color\",\n\t\t\t\t\tgreeting: \"Greeting message\",\n\t\t\t\t\tactions: \"Actions\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\tadd: \"Add queue\",\n\t\t\t\t},\n\t\t\t\tconfirmationModal: {\n\t\t\t\t\tdeleteTitle: \"Delete\",\n\t\t\t\t\tdeleteMessage:\n\t\t\t\t\t\t\"Are you sure? It cannot be reverted! Tickets in this queue will still exist, but will not have any queues assigned.\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tqueueSelect: {\n\t\t\t\tinputLabel: \"Queues\",\n\t\t\t},\n\t\t\tusers: {\n\t\t\t\ttitle: \"Users\",\n\t\t\t\ttable: {\n\t\t\t\t\tname: \"Name\",\n\t\t\t\t\temail: \"Email\",\n\t\t\t\t\tprofile: \"Profile\",\n\t\t\t\t\tactions: \"Actions\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\tadd: \"Add user\",\n\t\t\t\t},\n\t\t\t\ttoasts: {\n\t\t\t\t\tdeleted: \"User deleted sucessfully.\",\n\t\t\t\t},\n\t\t\t\tconfirmationModal: {\n\t\t\t\t\tdeleteTitle: \"Delete\",\n\t\t\t\t\tdeleteMessage:\n\t\t\t\t\t\t\"All user data will be lost. Users' open tickets will be moved to queue.\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tsettings: {\n\t\t\t\tsuccess: \"Settings saved successfully.\",\n\t\t\t\ttitle: \"Settings\",\n\t\t\t\tsettings: {\n\t\t\t\t\tuserCreation: {\n\t\t\t\t\t\tname: \"User creation\",\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\tenabled: \"Enabled\",\n\t\t\t\t\t\t\tdisabled: \"Disabled\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tmessagesList: {\n\t\t\t\theader: {\n\t\t\t\t\tassignedTo: \"Assigned to:\",\n\t\t\t\t\tbuttons: {\n\t\t\t\t\t\treturn: \"Return\",\n\t\t\t\t\t\tresolve: \"Resolve\",\n\t\t\t\t\t\treopen: \"Reopen\",\n\t\t\t\t\t\taccept: \"Accept\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tmessagesInput: {\n\t\t\t\tplaceholderOpen: \"Type a message\",\n\t\t\t\tplaceholderClosed: \"Reopen or accept this ticket to send a message.\",\n\t\t\t\tsignMessage: \"Sign\",\n\t\t\t},\n\t\t\tcontactDrawer: {\n\t\t\t\theader: \"Contact details\",\n\t\t\t\tbuttons: {\n\t\t\t\t\tedit: \"Edit contact\",\n\t\t\t\t},\n\t\t\t\textraInfo: \"Other information\",\n\t\t\t},\n\t\t\tticketOptionsMenu: {\n\t\t\t\tdelete: \"Delete\",\n\t\t\t\ttransfer: \"Transfer\",\n\t\t\t\tconfirmationModal: {\n\t\t\t\t\ttitle: \"Delete ticket #\",\n\t\t\t\t\ttitleFrom: \"from contact \",\n\t\t\t\t\tmessage: \"Attention! All ticket's related messages will be lost.\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\tdelete: \"Delete\",\n\t\t\t\t\tcancel: \"Cancel\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tconfirmationModal: {\n\t\t\t\tbuttons: {\n\t\t\t\t\tconfirm: \"Ok\",\n\t\t\t\t\tcancel: \"Cancel\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tmessageOptionsMenu: {\n\t\t\t\tdelete: \"Delete\",\n\t\t\t\treply: \"Reply\",\n\t\t\t\tconfirmationModal: {\n\t\t\t\t\ttitle: \"Delete message?\",\n\t\t\t\t\tmessage: \"This action cannot be reverted.\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tbackendErrors: {\n\t\t\t\tERR_NO_OTHER_WHATSAPP:\n\t\t\t\t\t\"There must be at lest one default WhatsApp connection.\",\n\t\t\t\tERR_NO_DEF_WAPP_FOUND:\n\t\t\t\t\t\"No default WhatsApp found. Check connections page.\",\n\t\t\t\tERR_WAPP_NOT_INITIALIZED:\n\t\t\t\t\t\"This WhatsApp session is not initialized. Check connections page.\",\n\t\t\t\tERR_WAPP_CHECK_CONTACT:\n\t\t\t\t\t\"Could not check WhatsApp contact. Check connections page.\",\n\t\t\t\tERR_WAPP_INVALID_CONTACT: \"This is not a valid whatsapp number.\",\n\t\t\t\tERR_WAPP_DOWNLOAD_MEDIA:\n\t\t\t\t\t\"Could not download media from WhatsApp. Check connections page.\",\n\t\t\t\tERR_INVALID_CREDENTIALS: \"Authentication error. Please try again.\",\n\t\t\t\tERR_SENDING_WAPP_MSG:\n\t\t\t\t\t\"Error sending WhatsApp message. Check connections page.\",\n\t\t\t\tERR_DELETE_WAPP_MSG: \"Couldn't delete message from WhatsApp.\",\n\t\t\t\tERR_OTHER_OPEN_TICKET:\n\t\t\t\t\t\"There's already an open ticket for this contact.\",\n\t\t\t\tERR_SESSION_EXPIRED: \"Session expired. Please login.\",\n\t\t\t\tERR_USER_CREATION_DISABLED:\n\t\t\t\t\t\"User creation was disabled by administrator.\",\n\t\t\t\tERR_NO_PERMISSION: \"You don't have permission to access this resource.\",\n\t\t\t\tERR_DUPLICATED_CONTACT: \"A contact with this number already exists.\",\n\t\t\t\tERR_NO_SETTING_FOUND: \"No setting found with this ID.\",\n\t\t\t\tERR_NO_CONTACT_FOUND: \"No contact found with this ID.\",\n\t\t\t\tERR_NO_TICKET_FOUND: \"No ticket found with this ID.\",\n\t\t\t\tERR_NO_USER_FOUND: \"No user found with this ID.\",\n\t\t\t\tERR_NO_WAPP_FOUND: \"No WhatsApp found with this ID.\",\n\t\t\t\tERR_CREATING_MESSAGE: \"Error while creating message on database.\",\n\t\t\t\tERR_CREATING_TICKET: \"Error while creating ticket on database.\",\n\t\t\t\tERR_FETCH_WAPP_MSG:\n\t\t\t\t\t\"Error fetching the message in WhtasApp, maybe it is too old.\",\n\t\t\t\tERR_QUEUE_COLOR_ALREADY_EXISTS:\n\t\t\t\t\t\"This color is already in use, pick another one.\",\n\t\t\t\tERR_WAPP_GREETING_REQUIRED:\n\t\t\t\t\t\"Greeting message is required if there is more than one queue.\",\n\t\t\t},\n\t\t},\n\t},\n};\n\nexport { messages };\n","const messages = {\n\tes: {\n\t\ttranslations: {\n\t\t\tsignup: {\n\t\t\t\ttitle: \"Registro\",\n\t\t\t\ttoasts: {\n\t\t\t\t\tsuccess:\n\t\t\t\t\t\t\"¡El usuario ha sido creado satisfactoriamente! ¡Ahora inicia sesión!\",\n\t\t\t\t\tfail: \"Error creando el usuario. Verifica la data reportada.\",\n\t\t\t\t},\n\t\t\t\tform: {\n\t\t\t\t\tname: \"Nombre\",\n\t\t\t\t\temail: \"Correo Electrónico\",\n\t\t\t\t\tpassword: \"Contraseña\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\tsubmit: \"Regístrate\",\n\t\t\t\t\tlogin: \"¿Ya tienes una cuenta? ¡Inicia sesión!\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tlogin: {\n\t\t\t\ttitle: \"Inicio de Sesión\",\n\t\t\t\tform: {\n\t\t\t\t\temail: \"Correo Electrónico\",\n\t\t\t\t\tpassword: \"Contraseña\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\tsubmit: \"Ingresa\",\n\t\t\t\t\tregister: \"¿No tienes cuenta? ¡Regístrate!\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tauth: {\n\t\t\t\ttoasts: {\n\t\t\t\t\tsuccess: \"¡Inicio de sesión exitoso!\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tdashboard: {\n\t\t\t\tcharts: {\n\t\t\t\t\tperDay: {\n\t\t\t\t\t\ttitle: \"Tickets hoy: \",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tconnections: {\n\t\t\t\ttitle: \"Conexiones\",\n\t\t\t\ttoasts: {\n\t\t\t\t\tdeleted:\n\t\t\t\t\t\t\"¡La conexión de WhatsApp ha sido borrada satisfactoriamente!\",\n\t\t\t\t},\n\t\t\t\tconfirmationModal: {\n\t\t\t\t\tdeleteTitle: \"Borrar\",\n\t\t\t\t\tdeleteMessage: \"¿Estás seguro? Este proceso no puede ser revertido.\",\n\t\t\t\t\tdisconnectTitle: \"Desconectar\",\n\t\t\t\t\tdisconnectMessage: \"Estás seguro? Deberá volver a leer el código QR\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\tadd: \"Agrega WhatsApp\",\n\t\t\t\t\tdisconnect: \"Desconectar\",\n\t\t\t\t\ttryAgain: \"Inténtalo de nuevo\",\n\t\t\t\t\tqrcode: \"QR CODE\",\n\t\t\t\t\tnewQr: \"Nuevo QR CODE\",\n\t\t\t\t\tconnecting: \"Conectando\",\n\t\t\t\t},\n\t\t\t\ttoolTips: {\n\t\t\t\t\tdisconnected: {\n\t\t\t\t\t\ttitle: \"No se pudo iniciar la sesión de WhatsApp\",\n\t\t\t\t\t\tcontent:\n\t\t\t\t\t\t\t\"Asegúrese de que su teléfono celular esté conectado a Internet y vuelva a intentarlo o solicite un nuevo código QR\",\n\t\t\t\t\t},\n\t\t\t\t\tqrcode: {\n\t\t\t\t\t\ttitle: \"Esperando la lectura del código QR\",\n\t\t\t\t\t\tcontent:\n\t\t\t\t\t\t\t\"Haga clic en el botón 'CÓDIGO QR' y lea el Código QR con su teléfono celular para iniciar la sesión\",\n\t\t\t\t\t},\n\t\t\t\t\tconnected: {\n\t\t\t\t\t\ttitle: \"Conexión establecida\",\n\t\t\t\t\t},\n\t\t\t\t\ttimeout: {\n\t\t\t\t\t\ttitle: \"Se perdió la conexión con el teléfono celular\",\n\t\t\t\t\t\tcontent:\n\t\t\t\t\t\t\t\"Asegúrese de que su teléfono celular esté conectado a Internet y que WhatsApp esté abierto, o haga clic en el botón 'Desconectar' para obtener un nuevo código QR\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\ttable: {\n\t\t\t\t\tname: \"Nombre\",\n\t\t\t\t\tstatus: \"Estado\",\n\t\t\t\t\tlastUpdate: \"Última Actualización\",\n\t\t\t\t\tdefault: \"Por Defecto\",\n\t\t\t\t\tactions: \"Acciones\",\n\t\t\t\t\tsession: \"Sesión\",\n\t\t\t\t},\n\t\t\t},\n\t\t\twhatsappModal: {\n\t\t\t\ttitle: {\n\t\t\t\t\tadd: \"Agrega WhatsApp\",\n\t\t\t\t\tedit: \"Edita WhatsApp\",\n\t\t\t\t},\n\t\t\t\tform: {\n\t\t\t\t\tname: \"Nombre\",\n\t\t\t\t\tdefault: \"Por Defecto\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\tokAdd: \"Agregar\",\n\t\t\t\t\tokEdit: \"Guardar\",\n\t\t\t\t\tcancel: \"Cancelar\",\n\t\t\t\t},\n\t\t\t\tsuccess: \"WhatsApp guardado satisfactoriamente.\",\n\t\t\t},\n\t\t\tqrCode: {\n\t\t\t\tmessage: \"Lée el código QR para empezar la sesión.\",\n\t\t\t},\n\t\t\tcontacts: {\n\t\t\t\ttitle: \"Contactos\",\n\t\t\t\ttoasts: {\n\t\t\t\t\tdeleted: \"¡Contacto borrado satisfactoriamente!\",\n\t\t\t\t},\n\t\t\t\tsearchPlaceholder: \"Buscar...\",\n\t\t\t\tconfirmationModal: {\n\t\t\t\t\tdeleteTitle: \"Borrar\",\n\t\t\t\t\timportTitlte: \"Importar contactos\",\n\t\t\t\t\tdeleteMessage:\n\t\t\t\t\t\t\"¿Estás seguro que deseas borrar este contacto? Todos los tickets relacionados se perderán.\",\n\t\t\t\t\timportMessage:\n\t\t\t\t\t\t\"¿Quieres importar todos los contactos desde tu teléfono?\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\timport: \"Importar Contactos\",\n\t\t\t\t\tadd: \"Agregar Contacto\",\n\t\t\t\t},\n\t\t\t\ttable: {\n\t\t\t\t\tname: \"Nombre\",\n\t\t\t\t\twhatsapp: \"WhatsApp\",\n\t\t\t\t\temail: \"Correo Electrónico\",\n\t\t\t\t\tactions: \"Acciones\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tcontactModal: {\n\t\t\t\ttitle: {\n\t\t\t\t\tadd: \"Agregar contacto\",\n\t\t\t\t\tedit: \"Editar contacto\",\n\t\t\t\t},\n\t\t\t\tform: {\n\t\t\t\t\tmainInfo: \"Detalles del contacto\",\n\t\t\t\t\textraInfo: \"Información adicional\",\n\t\t\t\t\tname: \"Nombre\",\n\t\t\t\t\tnumber: \"Número de Whatsapp\",\n\t\t\t\t\temail: \"Correo Electrónico\",\n\t\t\t\t\textraName: \"Nombre del Campo\",\n\t\t\t\t\textraValue: \"Valor\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\taddExtraInfo: \"Agregar información\",\n\t\t\t\t\tokAdd: \"Agregar\",\n\t\t\t\t\tokEdit: \"Guardar\",\n\t\t\t\t\tcancel: \"Cancelar\",\n\t\t\t\t},\n\t\t\t\tsuccess: \"Contacto guardado satisfactoriamente.\",\n\t\t\t},\n\t\t\tqueueModal: {\n\t\t\t\ttitle: {\n\t\t\t\t\tadd: \"Agregar cola\",\n\t\t\t\t\tedit: \"Editar cola\",\n\t\t\t\t},\n\t\t\t\tform: {\n\t\t\t\t\tname: \"Nombre\",\n\t\t\t\t\tcolor: \"Color\",\n\t\t\t\t\tgreetingMessage: \"Mensaje de saludo\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\tokAdd: \"Añadir\",\n\t\t\t\t\tokEdit: \"Ahorrar\",\n\t\t\t\t\tcancel: \"Cancelar\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tuserModal: {\n\t\t\t\ttitle: {\n\t\t\t\t\tadd: \"Agregar usuario\",\n\t\t\t\t\tedit: \"Editar usuario\",\n\t\t\t\t},\n\t\t\t\tform: {\n\t\t\t\t\tname: \"Nombre\",\n\t\t\t\t\temail: \"Correo Electrónico\",\n\t\t\t\t\tpassword: \"Contraseña\",\n\t\t\t\t\tprofile: \"Perfil\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\tokAdd: \"Agregar\",\n\t\t\t\t\tokEdit: \"Guardar\",\n\t\t\t\t\tcancel: \"Cancelar\",\n\t\t\t\t},\n\t\t\t\tsuccess: \"Usuario guardado satisfactoriamente.\",\n\t\t\t},\n\t\t\tchat: {\n\t\t\t\tnoTicketMessage: \"Selecciona un ticket para empezar a chatear.\",\n\t\t\t},\n\t\t\tticketsManager: {\n\t\t\t\tbuttons: {\n\t\t\t\t\tnewTicket: \"Nuevo\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tticketsQueueSelect: {\n\t\t\t\tplaceholder: \"Linhas\",\n\t\t\t},\n\t\t\ttickets: {\n\t\t\t\ttoasts: {\n\t\t\t\t\tdeleted: \"El ticket en el que estabas ha sido borrado.\",\n\t\t\t\t},\n\t\t\t\tnotification: {\n\t\t\t\t\tmessage: \"Mensaje de\",\n\t\t\t\t},\n\t\t\t\ttabs: {\n\t\t\t\t\topen: { title: \"Bandeja\" },\n\t\t\t\t\tclosed: { title: \"Resueltos\" },\n\t\t\t\t\tsearch: { title: \"Buscar\" },\n\t\t\t\t},\n\t\t\t\tsearch: {\n\t\t\t\t\tplaceholder: \"Buscar tickets y mensajes.\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\tshowAll: \"Todos\",\n\t\t\t\t},\n\t\t\t},\n\t\t\ttransferTicketModal: {\n\t\t\t\ttitle: \"Transferir Ticket\",\n\t\t\t\tfieldLabel: \"Escriba para buscar usuarios\",\n\t\t\t\tnoOptions: \"No se encontraron usuarios con ese nombre\",\n\t\t\t\tbuttons: {\n\t\t\t\t\tok: \"Transferir\",\n\t\t\t\t\tcancel: \"Cancelar\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tticketsList: {\n\t\t\t\tpendingHeader: \"Cola\",\n\t\t\t\tassignedHeader: \"Trabajando en\",\n\t\t\t\tnoTicketsTitle: \"¡Nada acá!\",\n\t\t\t\tnoTicketsMessage:\n\t\t\t\t\t\"No se encontraron tickets con este estado o término de búsqueda\",\n\t\t\t\tbuttons: {\n\t\t\t\t\taccept: \"Acceptar\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tnewTicketModal: {\n\t\t\t\ttitle: \"Crear Ticket\",\n\t\t\t\tfieldLabel: \"Escribe para buscar un contacto\",\n\t\t\t\tadd: \"Añadir\",\n\t\t\t\tbuttons: {\n\t\t\t\t\tok: \"Guardar\",\n\t\t\t\t\tcancel: \"Cancelar\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tmainDrawer: {\n\t\t\t\tlistItems: {\n\t\t\t\t\tdashboard: \"Dashboard\",\n\t\t\t\t\tconnections: \"Conexiones\",\n\t\t\t\t\ttickets: \"Tickets\",\n\t\t\t\t\tcontacts: \"Contactos\",\n\t\t\t\t\tqueues: \"Linhas\",\n\t\t\t\t\tadministration: \"Administración\",\n\t\t\t\t\tusers: \"Usuarios\",\n\t\t\t\t\tsettings: \"Configuración\",\n\t\t\t\t},\n\t\t\t\tappBar: {\n\t\t\t\t\tuser: {\n\t\t\t\t\t\tprofile: \"Perfil\",\n\t\t\t\t\t\tlogout: \"Cerrar Sesión\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tnotifications: {\n\t\t\t\tnoTickets: \"Sin notificaciones.\",\n\t\t\t},\n\t\t\tqueues: {\n\t\t\t\ttitle: \"Linhas\",\n\t\t\t\ttable: {\n\t\t\t\t\tname: \"Nombre\",\n\t\t\t\t\tcolor: \"Color\",\n\t\t\t\t\tgreeting: \"Mensaje de saludo\",\n\t\t\t\t\tactions: \"Comportamiento\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\tadd: \"Agregar cola\",\n\t\t\t\t},\n\t\t\t\tconfirmationModal: {\n\t\t\t\t\tdeleteTitle: \"Eliminar\",\n\t\t\t\t\tdeleteMessage:\n\t\t\t\t\t\t\"¿Estás seguro? ¡Esta acción no se puede revertir! Los tickets en esa cola seguirán existiendo, pero ya no tendrán ninguna cola asignada.\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tqueueSelect: {\n\t\t\t\tinputLabel: \"Linhas\",\n\t\t\t},\n\t\t\tusers: {\n\t\t\t\ttitle: \"Usuarios\",\n\t\t\t\ttable: {\n\t\t\t\t\tname: \"Nombre\",\n\t\t\t\t\temail: \"Correo Electrónico\",\n\t\t\t\t\tprofile: \"Perfil\",\n\t\t\t\t\tactions: \"Acciones\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\tadd: \"Agregar usuario\",\n\t\t\t\t},\n\t\t\t\ttoasts: {\n\t\t\t\t\tdeleted: \"Usuario borrado satisfactoriamente.\",\n\t\t\t\t},\n\t\t\t\tconfirmationModal: {\n\t\t\t\t\tdeleteTitle: \"Borrar\",\n\t\t\t\t\tdeleteMessage:\n\t\t\t\t\t\t\"Toda la información del usuario se perderá. Los tickets abiertos de los usuarios se moverán a la cola.\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tsettings: {\n\t\t\t\tsuccess: \"Configuración guardada satisfactoriamente.\",\n\t\t\t\ttitle: \"Configuración\",\n\t\t\t\tsettings: {\n\t\t\t\t\tuserCreation: {\n\t\t\t\t\t\tname: \"Creación de usuarios\",\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\tenabled: \"Habilitado\",\n\t\t\t\t\t\t\tdisabled: \"Deshabilitado\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tmessagesList: {\n\t\t\t\theader: {\n\t\t\t\t\tassignedTo: \"Asignado a:\",\n\t\t\t\t\tbuttons: {\n\t\t\t\t\t\treturn: \"Devolver\",\n\t\t\t\t\t\tresolve: \"Resolver\",\n\t\t\t\t\t\treopen: \"Reabrir\",\n\t\t\t\t\t\taccept: \"Aceptar\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tmessagesInput: {\n\t\t\t\tplaceholderOpen: \"Escribe un mensaje\",\n\t\t\t\tplaceholderClosed:\n\t\t\t\t\t\"Vuelva a abrir o acepte este ticket para enviar un mensaje.\",\n\t\t\t\tsignMessage: \"Firmar\",\n\t\t\t},\n\t\t\tcontactDrawer: {\n\t\t\t\theader: \"Detalles del contacto\",\n\t\t\t\tbuttons: {\n\t\t\t\t\tedit: \"Editar contacto\",\n\t\t\t\t},\n\t\t\t\textraInfo: \"Otra información\",\n\t\t\t},\n\t\t\tticketOptionsMenu: {\n\t\t\t\tdelete: \"Borrar\",\n\t\t\t\ttransfer: \"Transferir\",\n\t\t\t\tconfirmationModal: {\n\t\t\t\t\ttitle: \"¿Borrar ticket #\",\n\t\t\t\t\ttitleFrom: \"del contacto \",\n\t\t\t\t\tmessage:\n\t\t\t\t\t\t\"¡Atención! Todos los mensajes Todos los mensajes relacionados con el ticket se perderán.\",\n\t\t\t\t},\n\t\t\t\tbuttons: {\n\t\t\t\t\tdelete: \"Borrar\",\n\t\t\t\t\tcancel: \"Cancelar\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tconfirmationModal: {\n\t\t\t\tbuttons: {\n\t\t\t\t\tconfirm: \"Ok\",\n\t\t\t\t\tcancel: \"Cancelar\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tmessageOptionsMenu: {\n\t\t\t\tdelete: \"Borrar\",\n\t\t\t\treply: \"Responder\",\n\t\t\t\tconfirmationModal: {\n\t\t\t\t\ttitle: \"¿Borrar mensaje?\",\n\t\t\t\t\tmessage: \"Esta acción no puede ser revertida.\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tbackendErrors: {\n\t\t\t\tERR_NO_OTHER_WHATSAPP:\n\t\t\t\t\t\"Debe haber al menos una conexión de WhatsApp predeterminada.\",\n\t\t\t\tERR_NO_DEF_WAPP_FOUND:\n\t\t\t\t\t\"No se encontró WhatsApp predeterminado. Verifique la página de conexiones.\",\n\t\t\t\tERR_WAPP_NOT_INITIALIZED:\n\t\t\t\t\t\"Esta sesión de WhatsApp no ​​está inicializada. Verifique la página de conexiones.\",\n\t\t\t\tERR_WAPP_CHECK_CONTACT:\n\t\t\t\t\t\"No se pudo verificar el contacto de WhatsApp. Verifique la página de conexiones.\",\n\t\t\t\tERR_WAPP_INVALID_CONTACT: \"Este no es un número de whatsapp válido.\",\n\t\t\t\tERR_WAPP_DOWNLOAD_MEDIA:\n\t\t\t\t\t\"No se pudieron descargar los medios de WhatsApp. Verifique la página de conexiones.\",\n\t\t\t\tERR_INVALID_CREDENTIALS: \"Error de autenticación. Vuelva a intentarlo.\",\n\t\t\t\tERR_SENDING_WAPP_MSG:\n\t\t\t\t\t\"Error al enviar el mensaje de WhatsApp. Verifique la página de conexiones.\",\n\t\t\t\tERR_DELETE_WAPP_MSG: \"No se pudo borrar el mensaje de WhatsApp.\",\n\t\t\t\tERR_OTHER_OPEN_TICKET: \"Ya hay un ticket abierto para este contacto.\",\n\t\t\t\tERR_SESSION_EXPIRED: \"Sesión caducada. Inicie sesión.\",\n\t\t\t\tERR_USER_CREATION_DISABLED:\n\t\t\t\t\t\"La creación de usuarios fue deshabilitada por el administrador.\",\n\t\t\t\tERR_NO_PERMISSION: \"No tienes permiso para acceder a este recurso.\",\n\t\t\t\tERR_DUPLICATED_CONTACT: \"Ya existe un contacto con este número.\",\n\t\t\t\tERR_NO_SETTING_FOUND:\n\t\t\t\t\t\"No se encontró ninguna configuración con este ID.\",\n\t\t\t\tERR_NO_CONTACT_FOUND: \"No se encontró ningún contacto con este ID.\",\n\t\t\t\tERR_NO_TICKET_FOUND: \"No se encontró ningún ticket con este ID.\",\n\t\t\t\tERR_NO_USER_FOUND: \"No se encontró ningún usuario con este ID.\",\n\t\t\t\tERR_NO_WAPP_FOUND: \"No se encontró WhatsApp con este ID.\",\n\t\t\t\tERR_CREATING_MESSAGE: \"Error al crear el mensaje en la base de datos.\",\n\t\t\t\tERR_CREATING_TICKET: \"Error al crear el ticket en la base de datos.\",\n\t\t\t\tERR_FETCH_WAPP_MSG:\n\t\t\t\t\t\"Error al obtener el mensaje en WhtasApp, tal vez sea demasiado antiguo.\",\n\t\t\t\tERR_QUEUE_COLOR_ALREADY_EXISTS:\n\t\t\t\t\t\"Este color ya está en uso, elija otro.\",\n\t\t\t\tERR_WAPP_GREETING_REQUIRED:\n\t\t\t\t\t\"El mensaje de saludo es obligatorio cuando hay más de una cola.\",\n\t\t\t},\n\t\t},\n\t},\n};\n\nexport { messages };\n","import i18n from \"i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\n\nimport { messages } from \"./languages\";\n\ni18n.use(LanguageDetector).init({\n\tdebug: false,\n\tdefaultNS: [\"translations\"],\n\tfallbackLng: \"pt\",\n\tns: [\"translations\"],\n\tresources: messages,\n});\n\nexport { i18n };\n","import { toast } from \"react-toastify\";\nimport { i18n } from \"../translate/i18n\";\nimport { isString } from 'lodash';\n\nconst toastError = err => {\n\tconst errorMsg = err.response?.data?.error;\n\tif (errorMsg) {\n\t\tif (i18n.exists(`backendErrors.${errorMsg}`)) {\n\t\t\ttoast.error(i18n.t(`backendErrors.${errorMsg}`), {\n\t\t\t\ttoastId: errorMsg,\n\t\t\t\tautoClose: 2000,\n\t\t\t\thideProgressBar: false,\n\t\t\t\tcloseOnClick: true,\n\t\t\t\tpauseOnHover: false,\n\t\t\t\tdraggable: true,\n\t\t\t\tprogress: undefined,\n\t\t\t\ttheme: \"light\",\n\t\t\t});\n\t\t\treturn\n\t\t} else {\n\t\t\ttoast.error(errorMsg, {\n\t\t\t\ttoastId: errorMsg,\n\t\t\t\tautoClose: 2000,\n\t\t\t\thideProgressBar: false,\n\t\t\t\tcloseOnClick: true,\n\t\t\t\tpauseOnHover: false,\n\t\t\t\tdraggable: true,\n\t\t\t\tprogress: undefined,\n\t\t\t\ttheme: \"light\",\n\t\t\t});\n\t\t\treturn\n\t\t}\n\t} if (isString(err)) {\n\t\ttoast.error(err);\n\t\treturn\n\t} else {\n\t\ttoast.error(\"An error occurred!\");\n\t\treturn\n\t}\n};\n\nexport default toastError;\n","import axios from \"axios\";\n\nconst api = axios.create({\n\tbaseURL: process.env.REACT_APP_BACKEND_URL,\n\twithCredentials: true,\n});\n\nexport const openApi = axios.create({\n\tbaseURL: process.env.REACT_APP_BACKEND_URL\n});\n\nexport default api;\n","import openSocket from \"socket.io-client\";\nimport { isObject } from \"lodash\";\n\nexport function socketConnection(params) {\n  let userId = null;\n  if (localStorage.getItem(\"userId\")) {\n    userId = localStorage.getItem(\"userId\");\n  }\n  return openSocket(process.env.REACT_APP_BACKEND_URL, {\n    transports: [\"websocket\", \"polling\", \"flashsocket\"],\n    pingTimeout: 18000,\n    pingInterval: 18000,\n    query: isObject(params) ? { ...params, userId } : { userId },\n  });\n}\n","import { useState, useEffect, useReducer } from \"react\";\nimport toastError from \"../../errors/toastError\";\n\nimport api from \"../../services/api\";\nimport { socketConnection } from \"../../services/socket\";\n\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_WHATSAPPS\") {\n    const whatsApps = action.payload;\n\n    return [...whatsApps];\n  }\n\n  if (action.type === \"UPDATE_WHATSAPPS\") {\n    const whatsApp = action.payload;\n    const whatsAppIndex = state.findIndex((s) => s.id === whatsApp.id);\n\n    if (whatsAppIndex !== -1) {\n      state[whatsAppIndex] = whatsApp;\n      return [...state];\n    } else {\n      return [whatsApp, ...state];\n    }\n  }\n\n  if (action.type === \"UPDATE_SESSION\") {\n    const whatsApp = action.payload;\n    const whatsAppIndex = state.findIndex((s) => s.id === whatsApp.id);\n\n    if (whatsAppIndex !== -1) {\n      state[whatsAppIndex].status = whatsApp.status;\n      state[whatsAppIndex].updatedAt = whatsApp.updatedAt;\n      state[whatsAppIndex].qrcode = whatsApp.qrcode;\n      state[whatsAppIndex].retries = whatsApp.retries;\n      return [...state];\n    } else {\n      return [...state];\n    }\n  }\n\n  if (action.type === \"DELETE_WHATSAPPS\") {\n    const whatsAppId = action.payload;\n\n    const whatsAppIndex = state.findIndex((s) => s.id === whatsAppId);\n    if (whatsAppIndex !== -1) {\n      state.splice(whatsAppIndex, 1);\n    }\n    return [...state];\n  }\n\n  if (action.type === \"RESET\") {\n    return [];\n  }\n};\n\nconst useWhatsApps = () => {\n  const [whatsApps, dispatch] = useReducer(reducer, []);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setLoading(true);\n    const fetchSession = async () => {\n      try {\n        const { data } = await api.get(\"/whatsapp/?session=0\");\n        dispatch({ type: \"LOAD_WHATSAPPS\", payload: data });\n        setLoading(false);\n      } catch (err) {\n        setLoading(false);\n        toastError(err);\n      }\n    };\n    fetchSession();\n  }, []);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketConnection({ companyId });\n\n    socket.on(`company-${companyId}-whatsapp`, (data) => {\n      if (data.action === \"update\") {\n        dispatch({ type: \"UPDATE_WHATSAPPS\", payload: data.whatsapp });\n      }\n    });\n\n    socket.on(`company-${companyId}-whatsapp`, (data) => {\n      if (data.action === \"delete\") {\n        dispatch({ type: \"DELETE_WHATSAPPS\", payload: data.whatsappId });\n      }\n    });\n\n    socket.on(`company-${companyId}-whatsappSession`, (data) => {\n      if (data.action === \"update\") {\n        dispatch({ type: \"UPDATE_SESSION\", payload: data.session });\n      }\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  return { whatsApps, loading };\n};\n\nexport default useWhatsApps;\n","import React, { createContext } from \"react\";\n\nimport useWhatsApps from \"../../hooks/useWhatsApps\";\n\nconst WhatsAppsContext = createContext();\n\nconst WhatsAppsProvider = ({ children }) => {\n\tconst { loading, whatsApps } = useWhatsApps();\n\n\treturn (\n\t\t<WhatsAppsContext.Provider value={{ whatsApps, loading }}>\n\t\t\t{children}\n\t\t</WhatsAppsContext.Provider>\n\t);\n};\n\nexport { WhatsAppsContext, WhatsAppsProvider };\n","import { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { has, isArray } from \"lodash\";\n\nimport { toast } from \"react-toastify\";\n\nimport { i18n } from \"../../translate/i18n\";\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\nimport { socketConnection } from \"../../services/socket\";\nimport moment from \"moment\";\nconst useAuth = () => {\n  const history = useHistory();\n  const [isAuth, setIsAuth] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState({});\n\n  api.interceptors.request.use(\n    (config) => {\n      const token = localStorage.getItem(\"token\");\n      if (token) {\n        config.headers[\"Authorization\"] = `Bearer ${JSON.parse(token)}`;\n        setIsAuth(true);\n      }\n      return config;\n    },\n    (error) => {\n      Promise.reject(error);\n    }\n  );\n\n  api.interceptors.response.use(\n    (response) => {\n      return response;\n    },\n    async (error) => {\n      const originalRequest = error.config;\n      if (error?.response?.status === 403 && !originalRequest._retry) {\n        originalRequest._retry = true;\n\n        const { data } = await api.post(\"/auth/refresh_token\");\n        if (data) {\n          localStorage.setItem(\"token\", JSON.stringify(data.token));\n          api.defaults.headers.Authorization = `Bearer ${data.token}`;\n        }\n        return api(originalRequest);\n      }\n      if (error?.response?.status === 401) {\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"companyId\");\n        api.defaults.headers.Authorization = undefined;\n        setIsAuth(false);\n      }\n      return Promise.reject(error);\n    }\n  );\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    (async () => {\n      if (token) {\n        try {\n          const { data } = await api.post(\"/auth/refresh_token\");\n          api.defaults.headers.Authorization = `Bearer ${data.token}`;\n          setIsAuth(true);\n          setUser(data.user);\n        } catch (err) {\n          toastError(err);\n        }\n      }\n      setLoading(false);\n    })();\n  }, []);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketConnection({ companyId });\n\n    socket.on(`company-${companyId}-user`, (data) => {\n      if (data.action === \"update\" && data.user.id === user.id) {\n        setUser(data.user);\n      }\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [user]);\n\n  const handleLogin = async (userData) => {\n    setLoading(true);\n\n    try {\n      const { data } = await api.post(\"/auth/login\", userData);\n      const { user: { companyId, id, company }, } = data;\n\n\n\n      if (has(company, \"settings\") && isArray(company.settings)) {\n        const setting = company.settings.find(\n          (s) => s.key === \"campaignsEnabled\"\n        );\n        if (setting && setting.value === \"true\") {\n          localStorage.setItem(\"cshow\", null); //regra pra exibir campanhas\n        }\n      }\n\n      moment.locale('pt-br');\n      const dueDate = data.user.company.dueDate;\n      const hoje = moment(moment()).format(\"DD/MM/yyyy\");\n      const vencimento = moment(dueDate).format(\"DD/MM/yyyy\");\n\n      var diff = moment(dueDate).diff(moment(moment()).format());\n\n      var before = moment(moment().format()).isBefore(dueDate);\n      var dias = moment.duration(diff).asDays();\n      var diasVenc = vencimento.valueOf() - hoje.valueOf()\n      console.log(\"🚀 Console Log : diasVenc\", diasVenc);\n\n      if (before === true) {\n        localStorage.setItem(\"token\", JSON.stringify(data.token));\n        localStorage.setItem(\"companyId\", companyId);\n        localStorage.setItem(\"userId\", id);\n        localStorage.setItem(\"companyDueDate\", vencimento);\n        api.defaults.headers.Authorization = `Bearer ${data.token}`;\n        setUser(data.user);\n        setIsAuth(true);\n        toast.success(i18n.t(\"auth.toasts.success\"));\n        if (Math.round(dias) < 5) {\n          toast.warn(`Sua assinatura vence em ${Math.round(dias)} ${Math.round(dias) === 1 ? 'dia' : 'dias'} `);\n        }\n        history.push(\"/tickets\");\n        setLoading(false);\n      } else {\n        console.log(\"BLOQUEADO\")\n        toastError(`Opss! Sua assinatura venceu ${vencimento}.\nEntre em contato com o Suporte para mais informações! `);\n        setLoading(false);\n      }\n\n      //quebra linha \n    } catch (err) {\n      toastError(err);\n      setLoading(false);\n    }\n  };\n\n  const handleLogout = async () => {\n    setLoading(true);\n\n    try {\n      await api.delete(\"/auth/logout\");\n      setIsAuth(false);\n      setUser({});\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"companyId\");\n      localStorage.removeItem(\"userId\");\n      localStorage.removeItem(\"cshow\");\n      api.defaults.headers.Authorization = undefined;\n      setLoading(false);\n      history.push(\"/login\");\n    } catch (err) {\n      toastError(err);\n      setLoading(false);\n    }\n  };\n\n  const getCurrentUserInfo = async () => {\n    try {\n      const { data } = await api.get(\"/auth/me\");\n      return data;\n    } catch (err) {\n      toastError(err);\n    }\n  };\n\n  return {\n    isAuth,\n    user,\n    loading,\n    handleLogin,\n    handleLogout,\n    getCurrentUserInfo,\n  };\n};\n\nexport default useAuth;\n","import React, { createContext } from \"react\";\n\nimport useAuth from \"../../hooks/useAuth.js\";\n\nconst AuthContext = createContext();\n\nconst AuthProvider = ({ children }) => {\n\tconst { loading, user, isAuth, handleLogin, handleLogout } = useAuth();\n\n\treturn (\n\t\t<AuthContext.Provider\n\t\t\tvalue={{ loading, user, isAuth, handleLogin, handleLogout }}\n\t\t>\n\t\t\t{children}\n\t\t</AuthContext.Provider>\n\t);\n};\n\nexport { AuthContext, AuthProvider };\n","const rules = {\n\tuser: {\n\t\tstatic: [],\n\t},\n\n\tadmin: {\n\t\tstatic: [\n\t\t\t\"dashboard:view\",\n\t\t\t\"drawer-admin-items:view\",\n\t\t\t\"tickets-manager:showall\",\n\t\t\t\"user-modal:editProfile\",\n\t\t\t\"user-modal:editQueues\",\n\t\t\t\"ticket-options:deleteTicket\",\n\t\t\t\"contacts-page:deleteContact\",\n\t\t\t\"connections-page:actionButtons\",\n\t\t\t\"connections-page:addConnection\",\n\t\t\t\"connections-page:editOrDeleteConnection\"\n\t\t],\n\t},\n};\n\nexport default rules;\n","import rules from \"../../rules\";\n\nconst check = (role, action, data) => {\n\tconst permissions = rules[role];\n\tif (!permissions) {\n\t\t// role is not present in the rules\n\t\treturn false;\n\t}\n\n\tconst staticPermissions = permissions.static;\n\n\tif (staticPermissions && staticPermissions.includes(action)) {\n\t\t// static rule not provided for action\n\t\treturn true;\n\t}\n\n\tconst dynamicPermissions = permissions.dynamic;\n\n\tif (dynamicPermissions) {\n\t\tconst permissionCondition = dynamicPermissions[action];\n\t\tif (!permissionCondition) {\n\t\t\t// dynamic rule not provided for action\n\t\t\treturn false;\n\t\t}\n\n\t\treturn permissionCondition(data);\n\t}\n\treturn false;\n};\n\nconst Can = ({ role, perform, data, yes, no }) =>\n\tcheck(role, perform, data) ? yes() : no();\n\nCan.defaultProps = {\n\tyes: () => null,\n\tno: () => null,\n};\n\nexport { Can };\n","import React, { useContext, useEffect, useReducer, useState } from \"react\";\r\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\r\n\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { Badge, Collapse, List } from \"@material-ui/core\";\r\n//import DashboardOutlinedIcon from \"@material-ui/icons/DashboardOutlined\";\r\nimport WhatsAppIcon from \"@material-ui/icons/WhatsApp\";\r\n//import SyncAltIcon from \"@material-ui/icons/SyncAlt\";\r\nimport SettingsOutlinedIcon from \"@material-ui/icons/SettingsOutlined\";\r\nimport PeopleAltOutlinedIcon from \"@material-ui/icons/PeopleAltOutlined\";\r\n//import ContactPhoneOutlinedIcon from \"@material-ui/icons/ContactPhoneOutlined\";\r\nimport AccountTreeOutlinedIcon from \"@material-ui/icons/AccountTreeOutlined\";\r\n//import FlashOnIcon from \"@material-ui/icons/FlashOn\";\r\n//import HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\r\nimport CodeRoundedIcon from \"@material-ui/icons/CodeRounded\";\r\n// import EventIcon from \"@material-ui/icons/Event\";\r\n//import LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\r\n//import EventAvailableIcon from \"@material-ui/icons/EventAvailable\";\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport ListIcon from \"@material-ui/icons/ListAlt\";\r\n//import AnnouncementIcon from \"@material-ui/icons/Announcement\";\r\n//import ForumIcon from \"@material-ui/icons/Forum\";\r\n//import LocalAtmIcon from '@material-ui/icons/LocalAtm';\r\n//import DialpadIcon from '@material-ui/icons/Dialpad';\r\n//import PermContactCalendarSharpIcon from '@material-ui/icons/PermContactCalendarSharp';\r\n//import ContactPhoneSharpIcon from '@material-ui/icons/ContactPhoneSharp';\r\n//import SpeakerNotesSharpIcon from '@material-ui/icons/SpeakerNotesSharp';\r\n//import DashboardSharpIcon from '@material-ui/icons/DashboardSharp';\r\n//import LiveHelpSharpIcon from '@material-ui/icons/LiveHelpSharp';\r\n//import AssignmentSharpIcon from '@material-ui/icons/AssignmentSharp';\r\n//import ChatOutlinedIcon from '@material-ui/icons/ChatOutlined';\r\n//import ContactPhoneOutlinedIcon from '@material-ui/icons/ContactPhoneOutlined';\r\n//import AssignmentOutlinedIcon from '@material-ui/icons/AssignmentOutlined';\r\nimport LocalOfferOutlinedIcon from '@material-ui/icons/LocalOfferOutlined';\r\n//import ForumOutlinedIcon from '@material-ui/icons/ForumOutlined';\r\n//import LiveHelpOutlinedIcon from '@material-ui/icons/LiveHelpOutlined';\r\n//import AnnouncementOutlinedIcon from '@material-ui/icons/AnnouncementOutlined';\r\n//import FeaturedPlayListOutlinedIcon from '@material-ui/icons/FeaturedPlayListOutlined';\r\n//import InsertChartOutlinedIcon from '@material-ui/icons/InsertChartOutlined';\r\n//import EventNoteOutlinedIcon from '@material-ui/icons/EventNoteOutlined';\r\nimport EventAvailableOutlinedIcon from '@material-ui/icons/EventAvailableOutlined';\r\nimport PieChartOutlinedIcon from '@material-ui/icons/PieChartOutlined';\r\nimport LocalPhoneOutlinedIcon from '@material-ui/icons/LocalPhoneOutlined';\r\nimport ContactlessOutlinedIcon from '@material-ui/icons/ContactlessOutlined';\r\nimport HelpOutlineOutlinedIcon from '@material-ui/icons/HelpOutlineOutlined';\r\nimport ExploreOutlinedIcon from '@material-ui/icons/ExploreOutlined';\r\nimport FlipCameraAndroidOutlinedIcon from '@material-ui/icons/FlipCameraAndroidOutlined';\r\n//import NotificationImportantOutlinedIcon from '@material-ui/icons/NotificationImportantOutlined';\r\nimport MonetizationOnOutlinedIcon from '@material-ui/icons/MonetizationOnOutlined';\r\nimport WrapTextOutlinedIcon from '@material-ui/icons/WrapTextOutlined';\r\nimport ErrorOutlineOutlinedIcon from '@material-ui/icons/ErrorOutlineOutlined';\r\nimport OfflineBoltOutlinedIcon from '@material-ui/icons/OfflineBoltOutlined';\r\nimport VolumeUpOutlinedIcon from '@material-ui/icons/VolumeUpOutlined';\r\nimport { TiFlowChildren } from \"react-icons/ti\";\r\n\r\n\r\nimport { i18n } from \"../translate/i18n\";\r\nimport { WhatsAppsContext } from \"../context/WhatsApp/WhatsAppsContext\";\r\nimport { AuthContext } from \"../context/Auth/AuthContext\";\r\nimport { Can } from \"../components/Can\";\r\nimport { socketConnection } from \"../services/socket\";\r\nimport { isArray } from \"lodash\";\r\nimport api from \"../services/api\";\r\nimport toastError from \"../errors/toastError\";\r\n\r\nfunction ListItemLink(props) {\r\n  const { icon, primary, to, className } = props;\r\n\r\n  const renderLink = React.useMemo(\r\n    () =>\r\n      React.forwardRef((itemProps, ref) => (\r\n        <RouterLink to={to} ref={ref} {...itemProps} />\r\n      )),\r\n    [to]\r\n  );\r\n\r\n  return (\r\n    <li>\r\n      <ListItem button component={renderLink} className={className}>\r\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\r\n        <ListItemText primary={primary} />\r\n      </ListItem>\r\n    </li>\r\n  );\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n  if (action.type === \"LOAD_CHATS\") {\r\n    const chats = action.payload;\r\n    const newChats = [];\r\n\r\n    if (isArray(chats)) {\r\n      chats.forEach((chat) => {\r\n        const chatIndex = state.findIndex((u) => u.id === chat.id);\r\n        if (chatIndex !== -1) {\r\n          state[chatIndex] = chat;\r\n        } else {\r\n          newChats.push(chat);\r\n        }\r\n      });\r\n    }\r\n\r\n    return [...state, ...newChats];\r\n  }\r\n\r\n  if (action.type === \"UPDATE_CHATS\") {\r\n    const chat = action.payload;\r\n    const chatIndex = state.findIndex((u) => u.id === chat.id);\r\n\r\n    if (chatIndex !== -1) {\r\n      state[chatIndex] = chat;\r\n      return [...state];\r\n    } else {\r\n      return [chat, ...state];\r\n    }\r\n  }\r\n\r\n  if (action.type === \"DELETE_CHAT\") {\r\n    const chatId = action.payload;\r\n\r\n    const chatIndex = state.findIndex((u) => u.id === chatId);\r\n    if (chatIndex !== -1) {\r\n      state.splice(chatIndex, 1);\r\n    }\r\n    return [...state];\r\n  }\r\n\r\n  if (action.type === \"RESET\") {\r\n    return [];\r\n  }\r\n\r\n  if (action.type === \"CHANGE_CHAT\") {\r\n    const changedChats = state.map((chat) => {\r\n      if (chat.id === action.payload.chat.id) {\r\n        return action.payload.chat;\r\n      }\r\n      return chat;\r\n    });\r\n    return changedChats;\r\n  }\r\n};\r\n\r\nconst MainListItems = (props) => {\r\n  const { drawerClose } = props;\r\n  const { whatsApps } = useContext(WhatsAppsContext);\r\n  const { user } = useContext(AuthContext);\r\n  const [connectionWarning, setConnectionWarning] = useState(false);\r\n  const [openCampaignSubmenu, setOpenCampaignSubmenu] = useState(false);\r\n  const [showCampaigns, setShowCampaigns] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const [invisible, setInvisible] = useState(true);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const [searchParam] = useState(\"\");\r\n  const [chats, dispatch] = useReducer(reducer, []);\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: \"RESET\" });\r\n    setPageNumber(1);\r\n  }, [searchParam]);\r\n\r\n  useEffect(() => {\r\n    const delayDebounceFn = setTimeout(() => {\r\n      fetchChats();\r\n    }, 500);\r\n    return () => clearTimeout(delayDebounceFn);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [searchParam, pageNumber]);\r\n\r\n  useEffect(() => {\r\n    const companyId = localStorage.getItem(\"companyId\");\r\n    const socket = socketConnection({ companyId });\r\n\r\n    socket.on(`company-${companyId}-chat`, (data) => {\r\n      if (data.action === \"new-message\") {\r\n        dispatch({ type: \"CHANGE_CHAT\", payload: data });\r\n      }\r\n      if (data.action === \"update\") {\r\n        dispatch({ type: \"CHANGE_CHAT\", payload: data });\r\n      }\r\n    });\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let unreadsCount = 0;\r\n    if (chats.length > 0) {\r\n      for (let chat of chats) {\r\n        for (let chatUser of chat.users) {\r\n          if (chatUser.userId === user.id) {\r\n            unreadsCount += chatUser.unreads;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (unreadsCount > 0) {\r\n      setInvisible(false);\r\n    } else {\r\n      setInvisible(true);\r\n    }\r\n  }, [chats, user.id]);\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"cshow\")) {\r\n      setShowCampaigns(true);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const delayDebounceFn = setTimeout(() => {\r\n      if (whatsApps.length > 0) {\r\n        const offlineWhats = whatsApps.filter((whats) => {\r\n          return (\r\n            whats.status === \"qrcode\" ||\r\n            whats.status === \"PAIRING\" ||\r\n            whats.status === \"DISCONNECTED\" ||\r\n            whats.status === \"TIMEOUT\" ||\r\n            whats.status === \"OPENING\"\r\n          );\r\n        });\r\n        if (offlineWhats.length > 0) {\r\n          setConnectionWarning(true);\r\n        } else {\r\n          setConnectionWarning(false);\r\n        }\r\n      }\r\n    }, 2000);\r\n    return () => clearTimeout(delayDebounceFn);\r\n  }, [whatsApps]);\r\n\r\n  const fetchChats = async () => {\r\n    try {\r\n      const { data } = await api.get(\"/chats/\", {\r\n        params: { searchParam, pageNumber },\r\n      });\r\n      dispatch({ type: \"LOAD_CHATS\", payload: data.records });\r\n    } catch (err) {\r\n      toastError(err);\r\n    }\r\n  };\r\n\r\n  const handleToTypebot = () => {\r\n    window.open(\"https://painel.zapmatico.com/\", \"_blank\");\r\n    \r\n  }\r\n\r\n\r\n  return (\r\n    <div onClick={drawerClose}>\r\n      <Can\r\n        role={user.profile}\r\n        perform=\"dashboard:view\"\r\n        yes={() => (\r\n          <ListItemLink\r\n            to=\"/\"\r\n            primary=\"Dashboard\"\r\n            icon={<PieChartOutlinedIcon />}\r\n          />\r\n        )}\r\n      />\r\n\r\n      <ListItemLink\r\n        to=\"/tickets\"\r\n        primary={i18n.t(\"mainDrawer.listItems.tickets\")}\r\n        icon={<WhatsAppIcon />}\r\n      />\r\n\r\n      <ListItemLink\r\n        to=\"/Kanban\"\r\n        primary={i18n.t(\"Kanban\")}\r\n        icon={<ExploreOutlinedIcon />}\r\n      />\r\n\r\n      <ListItemLink\r\n        to=\"/tags\"\r\n        primary={i18n.t(\"mainDrawer.listItems.tags\")}\r\n        icon={<LocalOfferOutlinedIcon />}\r\n      />\r\n\r\n      <ListItemLink\r\n        to=\"/quick-messages\"\r\n        primary={i18n.t(\"mainDrawer.listItems.quickMessages\")}\r\n        icon={<OfflineBoltOutlinedIcon />}\r\n      />\r\n\r\n      <ListItemLink\r\n        to=\"/contacts\"\r\n        primary={i18n.t(\"mainDrawer.listItems.contacts\")}\r\n        icon={<LocalPhoneOutlinedIcon />}\r\n      />\r\n\r\n      <ListItemLink\r\n        to=\"/schedules\"\r\n        primary={i18n.t(\"mainDrawer.listItems.schedules\")}\r\n        icon={<EventAvailableOutlinedIcon />}\r\n      />\r\n\r\n      <ListItemLink\r\n              to=\"/connections\"\r\n              primary={i18n.t(\"mainDrawer.listItems.connections\")}\r\n              icon={\r\n                <Badge badgeContent={connectionWarning ? \"!\" : 0} color=\"error\">\r\n                  <ContactlessOutlinedIcon />\r\n                </Badge>\r\n              }\r\n      />\r\n\r\n\r\n      {/*      <ListItemLink\r\n        to=\"/chats\"\r\n        primary={i18n.t(\"mainDrawer.listItems.chats\")}\r\n        icon={\r\n          <Badge color=\"secondary\" variant=\"dot\" invisible={invisible}>\r\n            <FlipCameraAndroidOutlinedIcon />\r\n          </Badge>\r\n        }\r\n      /> */}\r\n\r\n      {/*      <ListItemLink\r\n        to=\"/helps\"\r\n        primary={i18n.t(\"mainDrawer.listItems.helps\")}\r\n        icon={<HelpOutlineOutlinedIcon />}\r\n    />  */}\r\n\r\n      <Can\r\n        role={user.profile}\r\n        perform=\"drawer-admin-items:view\"\r\n        yes={() => (\r\n          <>\r\n            <Divider />\r\n            <ListSubheader inset>\r\n              {i18n.t(\"mainDrawer.listItems.administration\")}\r\n            </ListSubheader>\r\n\r\n            {/* <li>\r\n              <ListItem button onClick={handleToTypebot} >\r\n                <ListItemIcon  ><TiFlowChildren size={25} /></ListItemIcon>\r\n                <ListItemText primary={'Typebot'} />\r\n              </ListItem>\r\n            </li>\r\n            */}\r\n\r\n            {showCampaigns && (\r\n              <>\r\n                <ListItem\r\n                  button\r\n                  onClick={() => setOpenCampaignSubmenu((prev) => !prev)}\r\n                >\r\n                  <ListItemIcon>\r\n                    <VolumeUpOutlinedIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primary={i18n.t(\"mainDrawer.listItems.campaigns\")}\r\n                  />\r\n                  {openCampaignSubmenu ? (\r\n                    <ExpandLessIcon />\r\n                  ) : (\r\n                    <ExpandMoreIcon />\r\n                  )}\r\n                </ListItem>\r\n                <Collapse\r\n                  style={{ paddingLeft: 15 }}\r\n                  in={openCampaignSubmenu}\r\n                  timeout=\"auto\"\r\n                  unmountOnExit\r\n                >\r\n                  <List component=\"div\" disablePadding>\r\n                    <ListItem onClick={() => history.push(\"/campaigns\")} button>\r\n                      <ListItemIcon>\r\n                        <ListIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Agendamento\" />\r\n                    </ListItem>\r\n                    <ListItem\r\n                      onClick={() => history.push(\"/contact-lists\")}\r\n                      button\r\n                    >\r\n                      <ListItemIcon>\r\n                        <PeopleIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Listas de Contatos\" />\r\n                    </ListItem>\r\n                    <ListItem\r\n                      onClick={() => history.push(\"/campaigns-config\")}\r\n                      button\r\n                    >\r\n                      <ListItemIcon>\r\n                        <SettingsOutlinedIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Configurações\" />\r\n                    </ListItem>\r\n                  </List>\r\n                </Collapse>\r\n              </>\r\n            )}\r\n            {user.super && (\r\n              <ListItemLink\r\n                to=\"/announcements\"\r\n                primary={i18n.t(\"mainDrawer.listItems.annoucements\")}\r\n                icon={<ErrorOutlineOutlinedIcon />}\r\n              />\r\n            )}\r\n            \r\n            <ListItemLink\r\n              to=\"/queues\"\r\n              primary={i18n.t(\"mainDrawer.listItems.queues\")}\r\n              icon={<WrapTextOutlinedIcon />}\r\n            />\r\n            <ListItemLink\r\n              to=\"/users\"\r\n              primary={i18n.t(\"mainDrawer.listItems.users\")}\r\n              icon={<PeopleAltOutlinedIcon />}\r\n            />\r\n            <ListItemLink\r\n              to=\"/messages-api\"\r\n              primary={i18n.t(\"mainDrawer.listItems.messagesAPI\")}\r\n              icon={<CodeRoundedIcon />}\r\n            />\r\n            {/* <ListItemLink\r\n              to=\"/financeiro\"\r\n              primary={i18n.t(\"mainDrawer.listItems.financeiro\")}\r\n              icon={<MonetizationOnOutlinedIcon />}\r\n            /> */}\r\n            <ListItemLink\r\n              to=\"/settings\"\r\n              primary={i18n.t(\"mainDrawer.listItems.settings\")}\r\n              icon={<SettingsOutlinedIcon />}\r\n            />\r\n            {/*             <ListItemLink\r\n              to=\"/subscription\"\r\n              primary=\"Assinatura\"\r\n              icon={<PaymentIcon />}\r\n              //className={classes.menuItem}\r\n            /> */}\r\n          </>\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainListItems;\r\n","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\nimport { CircularProgress, Button } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n\tbutton: {\n\t\tposition: \"relative\",\n\t},\n\n\tbuttonProgress: {\n\t\tcolor: green[500],\n\t\tposition: \"absolute\",\n\t\ttop: \"50%\",\n\t\tleft: \"50%\",\n\t\tmarginTop: -12,\n\t\tmarginLeft: -12,\n\t},\n}));\n\nconst ButtonWithSpinner = ({ loading, children, ...rest }) => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Button className={classes.button} disabled={loading} {...rest}>\n\t\t\t{children}\n\t\t\t{loading && (\n\t\t\t\t<CircularProgress size={24} className={classes.buttonProgress} />\n\t\t\t)}\n\t\t</Button>\n\t);\n};\n\nexport default ButtonWithSpinner;\n","import React from \"react\";\nimport Markdown from \"markdown-to-jsx\";\n\nconst elements = [\n\t\"a\",\n\t\"abbr\",\n\t\"address\",\n\t\"area\",\n\t\"article\",\n\t\"aside\",\n\t\"audio\",\n\t\"b\",\n\t\"base\",\n\t\"bdi\",\n\t\"bdo\",\n\t\"big\",\n\t\"blockquote\",\n\t\"body\",\n\t\"br\",\n\t\"button\",\n\t\"canvas\",\n\t\"caption\",\n\t\"cite\",\n\t\"code\",\n\t\"col\",\n\t\"colgroup\",\n\t\"data\",\n\t\"datalist\",\n\t\"dd\",\n\t\"del\",\n\t\"details\",\n\t\"dfn\",\n\t\"dialog\",\n\t\"div\",\n\t\"dl\",\n\t\"dt\",\n\t\"em\",\n\t\"embed\",\n\t\"fieldset\",\n\t\"figcaption\",\n\t\"figure\",\n\t\"footer\",\n\t\"form\",\n\t\"h1\",\n\t\"h2\",\n\t\"h3\",\n\t\"h4\",\n\t\"h5\",\n\t\"h6\",\n\t\"head\",\n\t\"header\",\n\t\"hgroup\",\n\t\"hr\",\n\t\"html\",\n\t\"i\",\n\t\"iframe\",\n\t\"img\",\n\t\"input\",\n\t\"ins\",\n\t\"kbd\",\n\t\"keygen\",\n\t\"label\",\n\t\"legend\",\n\t\"li\",\n\t\"link\",\n\t\"main\",\n\t\"map\",\n\t\"mark\",\n\t\"marquee\",\n\t\"menu\",\n\t\"menuitem\",\n\t\"meta\",\n\t\"meter\",\n\t\"nav\",\n\t\"noscript\",\n\t\"object\",\n\t\"ol\",\n\t\"optgroup\",\n\t\"option\",\n\t\"output\",\n\t\"p\",\n\t\"param\",\n\t\"picture\",\n\t\"pre\",\n\t\"progress\",\n\t\"q\",\n\t\"rp\",\n\t\"rt\",\n\t\"ruby\",\n\t\"s\",\n\t\"samp\",\n\t\"script\",\n\t\"section\",\n\t\"select\",\n\t\"small\",\n\t\"source\",\n\t\"span\",\n\t\"strong\",\n\t\"style\",\n\t\"sub\",\n\t\"summary\",\n\t\"sup\",\n\t\"table\",\n\t\"tbody\",\n\t\"td\",\n\t\"textarea\",\n\t\"tfoot\",\n\t\"th\",\n\t\"thead\",\n\t\"time\",\n\t\"title\",\n\t\"tr\",\n\t\"track\",\n\t\"u\",\n\t\"ul\",\n\t\"var\",\n\t\"video\",\n\t\"wbr\",\n\n\t// SVG\n\t\"circle\",\n\t\"clipPath\",\n\t\"defs\",\n\t\"ellipse\",\n\t\"foreignObject\",\n\t\"g\",\n\t\"image\",\n\t\"line\",\n\t\"linearGradient\",\n\t\"marker\",\n\t\"mask\",\n\t\"path\",\n\t\"pattern\",\n\t\"polygon\",\n\t\"polyline\",\n\t\"radialGradient\",\n\t\"rect\",\n\t\"stop\",\n\t\"svg\",\n\t\"text\",\n\t\"tspan\",\n];\n\nconst allowedElements = [\"a\", \"b\", \"strong\", \"em\", \"u\", \"code\", \"del\"];\n\nconst CustomLink = ({ children, ...props }) => (\n\t<a {...props} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t{children}\n\t</a>\n);\n\nconst MarkdownWrapper = ({ children }) => {\n\tconst boldRegex = /\\*(.*?)\\*/g;\n\tconst tildaRegex = /~(.*?)~/g;\n\n\tif (children && boldRegex.test(children)) {\n\t\tchildren = children.replace(boldRegex, \"**$1**\");\n\t}\n\tif (children && tildaRegex.test(children)) {\n\t\tchildren = children.replace(tildaRegex, \"~~$1~~\");\n\t}\n\n\tconst options = React.useMemo(() => {\n\t\tconst markdownOptions = {\n\t\t\tdisableParsingRawHTML: true,\n\t\t\tforceInline: true,\n\t\t\toverrides: {\n\t\t\t\ta: { component: CustomLink },\n\t\t\t},\n\t\t};\n\n\t\telements.forEach(element => {\n\t\t\tif (!allowedElements.includes(element)) {\n\t\t\t\tmarkdownOptions.overrides[element] = el => el.children || null;\n\t\t\t}\n\t\t});\n\n\t\treturn markdownOptions;\n\t}, []);\n\n\tif (!children) return null;\n\n\treturn <Markdown options={options}>{children}</Markdown>;\n};\n\nexport default MarkdownWrapper;\n","import React, { useState, useEffect, useRef, useContext } from \"react\";\n\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { parseISO, format, isSameDay } from \"date-fns\";\nimport clsx from \"clsx\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Badge from \"@material-ui/core/Badge\";\n\nimport { i18n } from \"../../translate/i18n\";\n\nimport api from \"../../services/api\";\nimport ButtonWithSpinner from \"../ButtonWithSpinner\";\nimport MarkdownWrapper from \"../MarkdownWrapper\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport toastError from \"../../errors/toastError\";\n\nconst useStyles = makeStyles((theme) => ({\n  ticket: {\n    position: \"relative\",\n  },\n\n  pendingTicket: {\n    cursor: \"unset\",\n  },\n\n  noTicketsDiv: {\n    display: \"flex\",\n    height: \"100px\",\n    margin: 40,\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n\n  noTicketsText: {\n    textAlign: \"center\",\n    color: \"rgb(104, 121, 146)\",\n    fontSize: \"14px\",\n    lineHeight: \"1.4\",\n  },\n\n  noTicketsTitle: {\n    textAlign: \"center\",\n    fontSize: \"16px\",\n    fontWeight: \"600\",\n    margin: \"0px\",\n  },\n\n  contactNameWrapper: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n\n  lastMessageTime: {\n    justifySelf: \"flex-end\",\n  },\n\n  closedBadge: {\n    alignSelf: \"center\",\n    justifySelf: \"flex-end\",\n    marginRight: 32,\n    marginLeft: \"auto\",\n  },\n\n  contactLastMessage: {\n    paddingRight: 20,\n  },\n\n  newMessagesCount: {\n    alignSelf: \"center\",\n    marginRight: 8,\n    marginLeft: \"auto\",\n  },\n\n  badgeStyle: {\n    color: \"white\",\n    backgroundColor: green[500],\n  },\n\n  acceptButton: {\n    position: \"absolute\",\n    left: \"50%\",\n  },\n\n  ticketQueueColor: {\n    flex: \"none\",\n    width: \"8px\",\n    height: \"100%\",\n    position: \"absolute\",\n    top: \"0%\",\n    left: \"0%\",\n  },\n}));\n\nconst TicketListItem = ({ ticket }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const { ticketId } = useParams();\n  const isMounted = useRef(true);\n  const { user } = useContext(AuthContext);\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  const handleAcepptTicket = async (ticket) => {\n    setLoading(true);\n    try {\n      await api.put(`/tickets/${ticket.id}`, {\n        status: \"open\",\n        userId: user?.id,\n      });\n    } catch (err) {\n      setLoading(false);\n      toastError(err);\n    }\n    if (isMounted.current) {\n      setLoading(false);\n    }\n    history.push(`/tickets/${ticket.uuid}`);\n  };\n\n  const handleSelectTicket = (ticket) => {\n    history.push(`/tickets/${ticket.uuid}`);\n  };\n\n  return (\n    <React.Fragment key={ticket.id}>\n      <ListItem\n        dense\n        button\n        onClick={(e) => {\n          if (ticket.status === \"pending\") return;\n          handleSelectTicket(ticket);\n        }}\n        selected={ticketId && +ticketId === ticket.id}\n        className={clsx(classes.ticket, {\n          [classes.pendingTicket]: ticket.status === \"pending\",\n        })}\n      >\n        <Tooltip\n          arrow\n          placement=\"right\"\n          title={ticket.queue?.name || \"Sem fila\"}\n        >\n          <span\n            style={{ backgroundColor: ticket.queue?.color || \"#7C7C7C\" }}\n            className={classes.ticketQueueColor}\n          ></span>\n        </Tooltip>\n        <ListItemAvatar>\n          <Avatar src={ticket?.contact?.profilePicUrl} />\n        </ListItemAvatar>\n        <ListItemText\n          disableTypography\n          primary={\n            <span className={classes.contactNameWrapper}>\n              <Typography\n                noWrap\n                component=\"span\"\n                variant=\"body2\"\n                color=\"textPrimary\"\n              >\n                {ticket.contact.name}\n              </Typography>\n              {ticket.status === \"closed\" && (\n                <Badge\n                  className={classes.closedBadge}\n                  badgeContent={\"closed\"}\n                  color=\"primary\"\n                />\n              )}\n              {ticket.lastMessage && (\n                <Typography\n                  className={classes.lastMessageTime}\n                  component=\"span\"\n                  variant=\"body2\"\n                  color=\"textSecondary\"\n                >\n                  {isSameDay(parseISO(ticket.updatedAt), new Date()) ? (\n                    <>{format(parseISO(ticket.updatedAt), \"HH:mm\")}</>\n                  ) : (\n                    <>{format(parseISO(ticket.updatedAt), \"dd/MM/yyyy\")}</>\n                  )}\n                </Typography>\n              )}\n            </span>\n          }\n          secondary={\n            <span className={classes.contactNameWrapper}>\n              <Typography\n                className={classes.contactLastMessage}\n                noWrap\n                component=\"span\"\n                variant=\"body2\"\n                color=\"textSecondary\"\n              >\n                {ticket.lastMessage ? (\n                  <MarkdownWrapper>{ticket.lastMessage}</MarkdownWrapper>\n                ) : (\n                  <br />\n                )}\n              </Typography>\n\n              <Badge\n                className={classes.newMessagesCount}\n                badgeContent={ticket.unreadMessages}\n                classes={{\n                  badge: classes.badgeStyle,\n                }}\n              />\n            </span>\n          }\n        />\n        {ticket.status === \"pending\" && (\n          <ButtonWithSpinner\n            color=\"primary\"\n            variant=\"contained\"\n            className={classes.acceptButton}\n            size=\"small\"\n            loading={loading}\n            onClick={(e) => handleAcepptTicket(ticket)}\n          >\n            {i18n.t(\"ticketsList.buttons.accept\")}\n          </ButtonWithSpinner>\n        )}\n      </ListItem>\n      <Divider variant=\"inset\" component=\"li\" />\n    </React.Fragment>\n  );\n};\n\nexport default TicketListItem;\n","import { useState, useEffect } from \"react\";\nimport toastError from \"../../errors/toastError\";\n\nimport api from \"../../services/api\";\n\nconst useTickets = ({\n  searchParam,\n  tags,\n  users,\n  pageNumber,\n  status,\n  date,\n  updatedAt,\n  showAll,\n  queueIds,\n  withUnreadMessages,\n}) => {\n  const [loading, setLoading] = useState(true);\n  const [hasMore, setHasMore] = useState(false);\n  const [tickets, setTickets] = useState([]);\n\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      const fetchTickets = async () => {\n        try {\n          const { data } = await api.get(\"/tickets\", {\n            params: {\n              searchParam,\n              pageNumber,\n              tags,\n              users,\n              status,\n              date,\n              updatedAt,\n              showAll,\n              queueIds,\n              withUnreadMessages,\n            },\n          });\n          setTickets(data.tickets);\n          setHasMore(data.hasMore);\n          setLoading(false);\n        } catch (err) {\n          setLoading(false);\n          toastError(err);\n        }\n      };\n      fetchTickets();\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n  }, [\n    searchParam,\n    tags,\n    users,\n    pageNumber,\n    status,\n    date,\n    updatedAt,\n    showAll,\n    queueIds,\n    withUnreadMessages,\n  ]);\n\n  return { tickets, loading, hasMore };\n};\n\nexport default useTickets;\n","import React, { useState, useRef, useEffect, useContext } from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { format } from \"date-fns\";\nimport useSound from \"use-sound\";\n\nimport Popover from \"@material-ui/core/Popover\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Badge from \"@material-ui/core/Badge\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\n\nimport TicketListItem from \"../TicketListItem\";\nimport { i18n } from \"../../translate/i18n\";\nimport useTickets from \"../../hooks/useTickets\";\nimport alertSound from \"../../assets/sound.mp3\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { socketConnection } from \"../../services/socket\";\n\nconst useStyles = makeStyles((theme) => ({\n  tabContainer: {\n    overflowY: \"auto\",\n    maxHeight: 350,\n    ...theme.scrollbarStyles,\n  },\n  popoverPaper: {\n    width: \"100%\",\n    maxWidth: 350,\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(1),\n    [theme.breakpoints.down(\"sm\")]: {\n      maxWidth: 270,\n    },\n  },\n  noShadow: {\n    boxShadow: \"none !important\",\n  },\n  icons: {\n    color: \"#fff\",\n  },\n  customBadge: {\n    backgroundColor: \"#f44336\",\n    color: \"#fff\",\n  },\n}));\n\nconst NotificationsPopOver = ({ volume }) => {\n  const classes = useStyles();\n\n  const history = useHistory();\n  const { user } = useContext(AuthContext);\n  const ticketIdUrl = +history.location.pathname.split(\"/\")[2];\n  const ticketIdRef = useRef(ticketIdUrl);\n  const anchorEl = useRef();\n  const [isOpen, setIsOpen] = useState(false);\n  const [notifications, setNotifications] = useState([]);\n  const { profile, queues } = user;\n\n  const [, setDesktopNotifications] = useState([]);\n\n  const { tickets } = useTickets({ withUnreadMessages: \"true\" });\n  const [play] = useSound(alertSound, { volume, });\n  const soundAlertRef = useRef();\n\n  const historyRef = useRef(history);\n\n  useEffect(() => {\n    soundAlertRef.current = play;\n\n    if (!(\"Notification\" in window)) {\n      console.log(\"This browser doesn't support notifications\");\n    } else {\n      Notification.requestPermission();\n    }\n  }, [play]);\n\n  useEffect(() => {\n    const queueIds = queues.map((q) => q.id);\n    const filteredTickets = tickets.filter(\n      (t) => queueIds.indexOf(t.queueId) > -1\n    );\n\n    if (profile === \"user\") {\n      setNotifications(filteredTickets);\n    } else {\n      setNotifications(tickets);\n    }\n  }, [tickets, queues, profile]);\n\n  useEffect(() => {\n    ticketIdRef.current = ticketIdUrl;\n  }, [ticketIdUrl]);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketConnection({ companyId });\n\n    const queueIds = queues.map((q) => q.id);\n\n    socket.on(\"connect\", () => socket.emit(\"joinNotification\"));\n\n    socket.on(`company-${companyId}-ticket`, (data) => {\n      if (data.action === \"updateUnread\" || data.action === \"delete\") {\n        setNotifications((prevState) => {\n          const ticketIndex = prevState.findIndex(\n            (t) => t.id === data.ticketId\n          );\n          if (ticketIndex !== -1) {\n            prevState.splice(ticketIndex, 1);\n            return [...prevState];\n          }\n          return prevState;\n        });\n\n        setDesktopNotifications((prevState) => {\n          const notfiticationIndex = prevState.findIndex(\n            (n) => n.tag === String(data.ticketId)\n          );\n          if (notfiticationIndex !== -1) {\n            prevState[notfiticationIndex].close();\n            prevState.splice(notfiticationIndex, 1);\n            return [...prevState];\n          }\n          return prevState;\n        });\n      }\n    });\n\n    socket.on(`company-${companyId}-appMessage`, (data) => {\n      if (\n        data.action === \"create\" &&\n        !data.message.read &&\n        (data.ticket.userId === user?.id || !data.ticket.userId)\n      ) {\n        if (\n          profile === \"user\" &&\n          (queueIds.indexOf(data.ticket.queue?.id) === -1 ||\n            data.ticket.queue === null)\n        ) {\n          return;\n        }\n\n        setNotifications((prevState) => {\n          const ticketIndex = prevState.findIndex(\n            (t) => t.id === data.ticket.id\n          );\n          if (ticketIndex !== -1) {\n            prevState[ticketIndex] = data.ticket;\n            return [...prevState];\n          }\n          return [data.ticket, ...prevState];\n        });\n\n        const shouldNotNotificate =\n          (data.message.ticketId === ticketIdRef.current &&\n            document.visibilityState === \"visible\") ||\n          (data.ticket.userId && data.ticket.userId !== user?.id) ||\n          data.ticket.isGroup || user.queues.map(q => q.id).indexOf(data.ticket.queueId) === -1 ||\n          data.ticket.isBot;\n\n        if (shouldNotNotificate) return;\n\n        handleNotifications(data);\n      }\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, [user, profile, queues]);\n\n  const handleNotifications = (data) => {\n    const { message, contact, ticket } = data;\n\n    const options = {\n      body: `${message.body} - ${format(new Date(), \"HH:mm\")}`,\n      icon: contact.profilePicUrl,\n      tag: ticket.id,\n      renotify: true,\n    };\n\n    const notification = new Notification(\n      `${i18n.t(\"tickets.notification.message\")} ${contact.name}`,\n      options\n    );\n\n    notification.onclick = (e) => {\n      e.preventDefault();\n      window.focus();\n      historyRef.current.push(`/tickets/${ticket.uuid}`);\n    };\n\n    setDesktopNotifications((prevState) => {\n      const notfiticationIndex = prevState.findIndex(\n        (n) => n.tag === notification.tag\n      );\n      if (notfiticationIndex !== -1) {\n        prevState[notfiticationIndex] = notification;\n        return [...prevState];\n      }\n      return [notification, ...prevState];\n    });\n\n    soundAlertRef.current();\n  };\n\n  const handleClick = () => {\n    setIsOpen((prevState) => !prevState);\n  };\n\n  const handleClickAway = () => {\n    setIsOpen(false);\n  };\n\n  const NotificationTicket = ({ children }) => {\n    return <div onClick={handleClickAway}>{children}</div>;\n  };\n\n  return (\n    <>\n      <IconButton\n        className={classes.icons}\n        onClick={handleClick}\n        ref={anchorEl}\n        aria-label=\"Open Notifications\"\n        variant=\"contained\"\n      >\n        <Badge\n          overlap=\"rectangular\"\n          badgeContent={notifications.length}\n          classes={{ badge: classes.customBadge }}\n        >\n          <ChatIcon />\n        </Badge>\n      </IconButton>\n      <Popover\n        disableScrollLock\n        open={isOpen}\n        anchorEl={anchorEl.current}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"right\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\",\n        }}\n        classes={{ paper: classes.popoverPaper }}\n        onClose={handleClickAway}\n      >\n        <List dense className={classes.tabContainer}>\n          {notifications.length === 0 ? (\n            <ListItem>\n              <ListItemText>{i18n.t(\"notifications.noTickets\")}</ListItemText>\n            </ListItem>\n          ) : (\n            notifications.map((ticket) => (\n              <NotificationTicket key={ticket.id}>\n                <TicketListItem ticket={ticket} />\n              </NotificationTicket>\n            ))\n          )}\n        </List>\n      </Popover>\n    </>\n  );\n};\n\nexport default NotificationsPopOver;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Chip from \"@material-ui/core/Chip\";\nimport toastError from \"../../errors/toastError\";\nimport api from \"../../services/api\";\nimport { i18n } from \"../../translate/i18n\";\n\nconst useStyles = makeStyles(theme => ({\n\tchips: {\n\t\tdisplay: \"flex\",\n\t\tflexWrap: \"wrap\",\n\t},\n\tchip: {\n\t\tmargin: 2,\n\t},\n}));\n\nconst QueueSelect = ({ selectedQueueIds, onChange, multiple = true, title = i18n.t(\"queueSelect.inputLabel\") }) => {\n\tconst classes = useStyles();\n\tconst [queues, setQueues] = useState([]);\n\n\tuseEffect(() => {\n\n\t\tfetchQueues();\n\n\t}, []);\n\n\tconst fetchQueues = async () => {\n\t\ttry {\n\t\t\tconst { data } = await api.get(\"/queue\");\n\t\t\tsetQueues(data);\n\t\t} catch (err) {\n\t\t\ttoastError(err);\n\t\t}\n\t}\n\n\tconst handleChange = e => {\n\t\tonChange(e.target.value);\n\t};\n\n\treturn (\n\t\t<div >\n\t\t\t<FormControl fullWidth margin=\"dense\" variant=\"outlined\">\n\t\t\t\t<InputLabel shrink={selectedQueueIds ? true : false} >{title}</InputLabel>\n\t\t\t\t<Select\n\t\t\t\t\tlabel={title}\n\t\t\t\t\tmultiple={multiple}\n\t\t\t\t\tlabelWidth={60}\n\t\t\t\t\tvalue={selectedQueueIds}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tMenuProps={{\n\t\t\t\t\t\tanchorOrigin: {\n\t\t\t\t\t\t\tvertical: \"bottom\",\n\t\t\t\t\t\t\thorizontal: \"left\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttransformOrigin: {\n\t\t\t\t\t\t\tvertical: \"top\",\n\t\t\t\t\t\t\thorizontal: \"left\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\tgetContentAnchorEl: null,\n\t\t\t\t\t}}\n\n\t\t\t\t\trenderValue={selected => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div className={classes.chips}>\n\t\t\t\t\t\t\t\t{selected?.length > 0 && multiple ? (\n\t\t\t\t\t\t\t\t\tselected.map(id => {\n\t\t\t\t\t\t\t\t\t\tconst queue = queues.find(q => q.id === id);\n\t\t\t\t\t\t\t\t\t\treturn queue ? (\n\t\t\t\t\t\t\t\t\t\t\t<Chip\n\t\t\t\t\t\t\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: queue.color }}\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\t\tlabel={queue.name}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.chip}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t) : null;\n\t\t\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t\t) :\n\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t<Chip\n\t\t\t\t\t\t\t\t\t\t\tkey={selected}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: queues.find(q => q.id === selected)?.color }}\n\t\t\t\t\t\t\t\t\t\t\tlabel={queues.find(q => q.id === selected)?.name}\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.chip}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{!multiple && <MenuItem value={null}>Nenhum</MenuItem>}\n\t\t\t\t\t{queues.map(queue => (\n\t\t\t\t\t\t<MenuItem key={queue.id} value={queue.id}>\n\t\t\t\t\t\t\t{queue.name}\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t))}\n\t\t\t\t</Select>\n\t\t\t</FormControl>\n\t\t</div>\n\t);\n};\n\nexport default QueueSelect;\n","import React, { useState, useEffect, useContext } from \"react\";\n\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field } from \"formik\";\nimport { toast } from \"react-toastify\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nimport { i18n } from \"../../translate/i18n\";\n\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\nimport QueueSelect from \"../QueueSelect\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { Can } from \"../Can\";\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t\tdisplay: \"flex\",\n\t\tflexWrap: \"wrap\",\n\t},\n\tmultFieldLine: {\n\t\tdisplay: \"flex\",\n\t\t\"& > *:not(:last-child)\": {\n\t\t\tmarginRight: theme.spacing(1),\n\t\t},\n\t},\n\n\tbtnWrapper: {\n\t\tposition: \"relative\",\n\t},\n\n\tbuttonProgress: {\n\t\tcolor: green[500],\n\t\tposition: \"absolute\",\n\t\ttop: \"50%\",\n\t\tleft: \"50%\",\n\t\tmarginTop: -12,\n\t\tmarginLeft: -12,\n\t},\n\tformControl: {\n\t\tmargin: theme.spacing(1),\n\t\tminWidth: 120,\n\t},\n}));\n\nconst UserSchema = Yup.object().shape({\n\tname: Yup.string()\n\t\t.min(2, \"Too Short!\")\n\t\t.max(50, \"Too Long!\")\n\t\t.required(\"Required\"),\n\tpassword: Yup.string().min(5, \"Too Short!\").max(50, \"Too Long!\"),\n\temail: Yup.string().email(\"Invalid email\").required(\"Required\"),\n});\n\nconst UserModal = ({ open, onClose, userId }) => {\n\tconst classes = useStyles();\n\n\tconst initialState = {\n\t\tname: \"\",\n\t\temail: \"\",\n\t\tpassword: \"\",\n\t\tprofile: \"user\",\n\t};\n\n\tconst { user: loggedInUser } = useContext(AuthContext);\n\n\tconst [user, setUser] = useState(initialState);\n\tconst [selectedQueueIds, setSelectedQueueIds] = useState([]);\n\n\tuseEffect(() => {\n\t\tconst fetchUser = async () => {\n\t\t\tif (!userId) return;\n\t\t\ttry {\n\t\t\t\tconst { data } = await api.get(`/users/${userId}`);\n\t\t\t\tsetUser(prevState => {\n\t\t\t\t\treturn { ...prevState, ...data };\n\t\t\t\t});\n\t\t\t\tconst userQueueIds = data.queues?.map(queue => queue.id);\n\t\t\t\tsetSelectedQueueIds(userQueueIds);\n\t\t\t} catch (err) {\n\t\t\t\ttoastError(err);\n\t\t\t}\n\t\t};\n\n\t\tfetchUser();\n\t}, [userId, open]);\n\n\tconst handleClose = () => {\n\t\tonClose();\n\t\tsetUser(initialState);\n\t};\n\n\tconst handleSaveUser = async values => {\n\t\tconst userData = { ...values, queueIds: selectedQueueIds };\n\t\ttry {\n\t\t\tif (userId) {\n\t\t\t\tawait api.put(`/users/${userId}`, userData);\n\t\t\t} else {\n\t\t\t\tawait api.post(\"/users\", userData);\n\t\t\t}\n\t\t\ttoast.success(i18n.t(\"userModal.success\"));\n\t\t} catch (err) {\n\t\t\ttoastError(err);\n\t\t}\n\t\thandleClose();\n\t};\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Dialog\n\t\t\t\topen={open}\n\t\t\t\tonClose={handleClose}\n\t\t\t\tmaxWidth=\"xs\"\n\t\t\t\tfullWidth\n\t\t\t\tscroll=\"paper\"\n\t\t\t>\n\t\t\t\t<DialogTitle id=\"form-dialog-title\">\n\t\t\t\t\t{userId\n\t\t\t\t\t\t? `${i18n.t(\"userModal.title.edit\")}`\n\t\t\t\t\t\t: `${i18n.t(\"userModal.title.add\")}`}\n\t\t\t\t</DialogTitle>\n\t\t\t\t<Formik\n\t\t\t\t\tinitialValues={user}\n\t\t\t\t\tenableReinitialize={true}\n\t\t\t\t\tvalidationSchema={UserSchema}\n\t\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\thandleSaveUser(values);\n\t\t\t\t\t\t\tactions.setSubmitting(false);\n\t\t\t\t\t\t}, 400);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{({ touched, errors, isSubmitting }) => (\n\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t<DialogContent dividers>\n\t\t\t\t\t\t\t\t<div className={classes.multFieldLine}>\n\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\tas={TextField}\n\t\t\t\t\t\t\t\t\t\tlabel={i18n.t(\"userModal.form.name\")}\n\t\t\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\t\terror={touched.name && Boolean(errors.name)}\n\t\t\t\t\t\t\t\t\t\thelperText={touched.name && errors.name}\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\tas={TextField}\n\t\t\t\t\t\t\t\t\t\tlabel={i18n.t(\"userModal.form.password\")}\n\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\t\terror={touched.password && Boolean(errors.password)}\n\t\t\t\t\t\t\t\t\t\thelperText={touched.password && errors.password}\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className={classes.multFieldLine}>\n\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\tas={TextField}\n\t\t\t\t\t\t\t\t\t\tlabel={i18n.t(\"userModal.form.email\")}\n\t\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\t\terror={touched.email && Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\thelperText={touched.email && errors.email}\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tclassName={classes.formControl}\n\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Can\n\t\t\t\t\t\t\t\t\t\t\trole={loggedInUser.profile}\n\t\t\t\t\t\t\t\t\t\t\tperform=\"user-modal:editProfile\"\n\t\t\t\t\t\t\t\t\t\t\tyes={() => (\n\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<InputLabel id=\"profile-selection-input-label\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{i18n.t(\"userModal.form.profile\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</InputLabel>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tas={Select}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={i18n.t(\"userModal.form.profile\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"profile\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabelId=\"profile-selection-label\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"profile-selection\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"admin\">Admin</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value=\"user\">User</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<Can\n\t\t\t\t\t\t\t\t\trole={loggedInUser.profile}\n\t\t\t\t\t\t\t\t\tperform=\"user-modal:editQueues\"\n\t\t\t\t\t\t\t\t\tyes={() => (\n\t\t\t\t\t\t\t\t\t\t<QueueSelect\n\t\t\t\t\t\t\t\t\t\t\tselectedQueueIds={selectedQueueIds}\n\t\t\t\t\t\t\t\t\t\t\tonChange={values => setSelectedQueueIds(values)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tonClick={handleClose}\n\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{i18n.t(\"userModal.buttons.cancel\")}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tclassName={classes.btnWrapper}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{userId\n\t\t\t\t\t\t\t\t\t\t? `${i18n.t(\"userModal.buttons.okEdit\")}`\n\t\t\t\t\t\t\t\t\t\t: `${i18n.t(\"userModal.buttons.okAdd\")}`}\n\t\t\t\t\t\t\t\t\t{isSubmitting && (\n\t\t\t\t\t\t\t\t\t\t<CircularProgress\n\t\t\t\t\t\t\t\t\t\t\tsize={24}\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.buttonProgress}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t)}\n\t\t\t\t</Formik>\n\t\t\t</Dialog>\n\t\t</div>\n\t);\n};\n\nexport default UserModal;\n","import React from \"react\";\n\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n\tbackdrop: {\n\t\tzIndex: theme.zIndex.drawer + 1,\n\t\tcolor: \"#fff\",\n\t},\n}));\n\nconst BackdropLoading = () => {\n\tconst classes = useStyles();\n\treturn (\n\t\t<Backdrop className={classes.backdrop} open={true}>\n\t\t\t<CircularProgress color=\"inherit\" />\n\t\t</Backdrop>\n\t);\n};\n\nexport default BackdropLoading;\n","import moment from \"moment\";\n\nexport function useDate() {\n  function dateToClient(strDate) {\n    if (moment(strDate).isValid()) {\n      return moment(strDate).format(\"DD/MM/YYYY\");\n    }\n    return strDate;\n  }\n\n  function datetimeToClient(strDate) {\n    if (moment(strDate).isValid()) {\n      return moment(strDate).format(\"DD/MM/YYYY HH:mm\");\n    }\n    return strDate;\n  }\n\n  function dateToDatabase(strDate) {\n    if (moment(strDate, \"DD/MM/YYYY\").isValid()) {\n      return moment(strDate).format(\"YYYY-MM-DD HH:mm:ss\");\n    }\n    return strDate;\n  }\n\n  return {\n    dateToClient,\n    datetimeToClient,\n    dateToDatabase,\n  };\n}\n","import React, { useEffect, useReducer, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport toastError from \"../../errors/toastError\";\nimport Popover from \"@material-ui/core/Popover\";\nimport AnnouncementIcon from \"@material-ui/icons/Announcement\";\nimport {\n  Avatar,\n  Badge,\n  IconButton,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Dialog,\n  Paper,\n  Typography,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  DialogContentText,\n} from \"@material-ui/core\";\nimport api from \"../../services/api\";\nimport { isArray } from \"lodash\";\nimport moment from \"moment\";\nimport { socketConnection } from \"../../services/socket\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainPaper: {\n    flex: 1,\n    maxHeight: 300,\n    maxWidth: 500,\n    padding: theme.spacing(1),\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n}));\n\nfunction AnnouncementDialog({ announcement, open, handleClose }) {\n  const getMediaPath = (filename) => {\n    return `${process.env.REACT_APP_BACKEND_URL}public/${filename}`;\n  };\n  return (\n    <Dialog\n      open={open}\n      onClose={() => handleClose()}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{announcement.title}</DialogTitle>\n      <DialogContent>\n        {announcement.mediaPath && (\n          <div\n            style={{\n              border: \"1px solid #f1f1f1\",\n              margin: \"0 auto 20px\",\n              textAlign: \"center\",\n              width: \"90%\",\n              height: 300,\n              backgroundImage: `url(${getMediaPath(announcement.mediaPath)})`,\n              backgroundRepeat: \"no-repeat\",\n              backgroundSize: \"contain\",\n              backgroundPosition: \"center\",\n            }}\n          ></div>\n        )}\n        <DialogContentText id=\"alert-dialog-description\">\n          {announcement.text}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => handleClose()} color=\"primary\" autoFocus>\n          Fechar\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_ANNOUNCEMENTS\") {\n    const announcements = action.payload;\n    const newAnnouncements = [];\n\n    if (isArray(announcements)) {\n      announcements.forEach((announcement) => {\n        const announcementIndex = state.findIndex(\n          (u) => u.id === announcement.id\n        );\n        if (announcementIndex !== -1) {\n          state[announcementIndex] = announcement;\n        } else {\n          newAnnouncements.push(announcement);\n        }\n      });\n    }\n\n    return [...state, ...newAnnouncements];\n  }\n\n  if (action.type === \"UPDATE_ANNOUNCEMENTS\") {\n    const announcement = action.payload;\n    const announcementIndex = state.findIndex((u) => u.id === announcement.id);\n\n    if (announcementIndex !== -1) {\n      state[announcementIndex] = announcement;\n      return [...state];\n    } else {\n      return [announcement, ...state];\n    }\n  }\n\n  if (action.type === \"DELETE_ANNOUNCEMENT\") {\n    const announcementId = action.payload;\n\n    const announcementIndex = state.findIndex((u) => u.id === announcementId);\n    if (announcementIndex !== -1) {\n      state.splice(announcementIndex, 1);\n    }\n    return [...state];\n  }\n\n  if (action.type === \"RESET\") {\n    return [];\n  }\n};\n\nexport default function AnnouncementsPopover() {\n  const classes = useStyles();\n\n  const [loading, setLoading] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [hasMore, setHasMore] = useState(false);\n  const [searchParam] = useState(\"\");\n  const [announcements, dispatch] = useReducer(reducer, []);\n  const [invisible, setInvisible] = useState(false);\n  const [announcement, setAnnouncement] = useState({});\n  const [showAnnouncementDialog, setShowAnnouncementDialog] = useState(false);\n\n  useEffect(() => {\n    dispatch({ type: \"RESET\" });\n    setPageNumber(1);\n  }, [searchParam]);\n\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      fetchAnnouncements();\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchParam, pageNumber]);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketConnection({ companyId });\n\n    socket.on(`company-announcement`, (data) => {\n      if (data.action === \"update\" || data.action === \"create\") {\n        dispatch({ type: \"UPDATE_ANNOUNCEMENTS\", payload: data.record });\n        setInvisible(false);\n      }\n      if (data.action === \"delete\") {\n        dispatch({ type: \"DELETE_ANNOUNCEMENT\", payload: +data.id });\n      }\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  const fetchAnnouncements = async () => {\n    try {\n      const { data } = await api.get(\"/announcements/\", {\n        params: { searchParam, pageNumber },\n      });\n      dispatch({ type: \"LOAD_ANNOUNCEMENTS\", payload: data.records });\n      setHasMore(data.hasMore);\n      setLoading(false);\n    } catch (err) {\n      toastError(err);\n    }\n  };\n\n  const loadMore = () => {\n    setPageNumber((prevState) => prevState + 1);\n  };\n\n  const handleScroll = (e) => {\n    if (!hasMore || loading) return;\n    const { scrollTop, scrollHeight, clientHeight } = e.currentTarget;\n    if (scrollHeight - (scrollTop + 100) < clientHeight) {\n      loadMore();\n    }\n  };\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n    setInvisible(true);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const borderPriority = (priority) => {\n    if (priority === 1) {\n      return \"4px solid #b81111\";\n    }\n    if (priority === 2) {\n      return \"4px solid orange\";\n    }\n    if (priority === 3) {\n      return \"4px solid grey\";\n    }\n  };\n\n  const getMediaPath = (filename) => {\n    return `${process.env.REACT_APP_BACKEND_URL}public/${filename}`;\n  };\n\n  const handleShowAnnouncementDialog = (record) => {\n    setAnnouncement(record);\n    setShowAnnouncementDialog(true);\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  return (\n    <div>\n      <AnnouncementDialog\n        announcement={announcement}\n        open={showAnnouncementDialog}\n        handleClose={() => setShowAnnouncementDialog(false)}\n      />\n      <IconButton\n        variant=\"contained\"\n        aria-describedby={id}\n        onClick={handleClick}\n        style={{ color: \"white\" }}\n      >\n        <Badge\n          color=\"secondary\"\n          variant=\"dot\"\n          invisible={invisible || announcements.length < 1}\n        >\n          <AnnouncementIcon />\n        </Badge>\n      </IconButton>\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n      >\n        <Paper\n          variant=\"outlined\"\n          onScroll={handleScroll}\n          className={classes.mainPaper}\n        >\n          <List\n            component=\"nav\"\n            aria-label=\"main mailbox folders\"\n            style={{ minWidth: 300 }}\n          >\n            {isArray(announcements) &&\n              announcements.map((item, key) => (\n                <ListItem\n                  key={key}\n                  style={{\n                    background: key % 2 === 0 ? \"#ededed\" : \"white\",\n                    border: \"1px solid #eee\",\n                    borderLeft: borderPriority(item.priority),\n                    cursor: \"pointer\",\n                  }}\n                  onClick={() => handleShowAnnouncementDialog(item)}\n                >\n                  {item.mediaPath && (\n                    <ListItemAvatar>\n                      <Avatar\n                        alt={item.mediaName}\n                        src={getMediaPath(item.mediaPath)}\n                      />\n                    </ListItemAvatar>\n                  )}\n                  <ListItemText\n                    primary={item.title}\n                    secondary={\n                      <>\n                        <Typography component=\"span\" style={{ fontSize: 12 }}>\n                          {moment(item.createdAt).format(\"DD/MM/YYYY\")}\n                        </Typography>\n                        <span style={{ marginTop: 5, display: \"block\" }}></span>\n                        <Typography component=\"span\" variant=\"body2\">\n                          {item.text}\n                        </Typography>\n                      </>\n                    }\n                  />\n                </ListItem>\n              ))}\n            {isArray(announcements) && announcements.length === 0 && (\n              <ListItemText primary=\"Nenhum registro\" />\n            )}\n          </List>\n        </Paper>\n      </Popover>\n    </div>\n  );\n}\n","import React, {\n  useContext,\n  useEffect,\n  useReducer,\n  useRef,\n  useState,\n} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport toastError from \"../../errors/toastError\";\nimport Popover from \"@material-ui/core/Popover\";\nimport ForumIcon from \"@material-ui/icons/Forum\";\nimport {\n  Badge,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n  Typography,\n} from \"@material-ui/core\";\nimport api from \"../../services/api\";\nimport { isArray } from \"lodash\";\nimport { socketConnection } from \"../../services/socket\";\nimport { useDate } from \"../../hooks/useDate\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\n\nimport notifySound from \"../../assets/chat_notify.mp3\";\nimport useSound from \"use-sound\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainPaper: {\n    flex: 1,\n    maxHeight: 300,\n    maxWidth: 500,\n    padding: theme.spacing(1),\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n}));\n\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_CHATS\") {\n    const chats = action.payload;\n    const newChats = [];\n\n    if (isArray(chats)) {\n      chats.forEach((chat) => {\n        const chatIndex = state.findIndex((u) => u.id === chat.id);\n        if (chatIndex !== -1) {\n          state[chatIndex] = chat;\n        } else {\n          newChats.push(chat);\n        }\n      });\n    }\n\n    return [...state, ...newChats];\n  }\n\n  if (action.type === \"UPDATE_CHATS\") {\n    const chat = action.payload;\n    const chatIndex = state.findIndex((u) => u.id === chat.id);\n\n    if (chatIndex !== -1) {\n      state[chatIndex] = chat;\n      return [...state];\n    } else {\n      return [chat, ...state];\n    }\n  }\n\n  if (action.type === \"DELETE_CHAT\") {\n    const chatId = action.payload;\n\n    const chatIndex = state.findIndex((u) => u.id === chatId);\n    if (chatIndex !== -1) {\n      state.splice(chatIndex, 1);\n    }\n    return [...state];\n  }\n\n  if (action.type === \"RESET\") {\n    return [];\n  }\n\n  if (action.type === \"CHANGE_CHAT\") {\n    const changedChats = state.map((chat) => {\n      if (chat.id === action.payload.chat.id) {\n        return action.payload.chat;\n      }\n      return chat;\n    });\n    return changedChats;\n  }\n};\n\nexport default function ChatPopover() {\n  const classes = useStyles();\n\n  const { user } = useContext(AuthContext);\n\n  const [loading, setLoading] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [hasMore, setHasMore] = useState(false);\n  const [searchParam] = useState(\"\");\n  const [chats, dispatch] = useReducer(reducer, []);\n  const [invisible, setInvisible] = useState(true);\n  const { datetimeToClient } = useDate();\n  const [play] = useSound(notifySound);\n  const soundAlertRef = useRef();\n\n  useEffect(() => {\n    soundAlertRef.current = play;\n\n    if (!(\"Notification\" in window)) {\n      console.log(\"This browser doesn't support notifications\");\n    } else {\n      Notification.requestPermission();\n    }\n  }, [play]);\n\n  useEffect(() => {\n    dispatch({ type: \"RESET\" });\n    setPageNumber(1);\n  }, [searchParam]);\n\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      fetchChats();\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchParam, pageNumber]);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketConnection({ companyId });\n\n    socket.on(`company-${companyId}-chat`, (data) => {\n      if (data.action === \"new-message\") {\n        dispatch({ type: \"CHANGE_CHAT\", payload: data });\n        if (data.newMessage.senderId !== user.id) {\n          console.log(data);\n          soundAlertRef.current();\n        }\n      }\n      if (data.action === \"update\") {\n        dispatch({ type: \"CHANGE_CHAT\", payload: data });\n      }\n    });\n    return () => {\n      socket.disconnect();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    let unreadsCount = 0;\n    if (chats.length > 0) {\n      for (let chat of chats) {\n        for (let chatUser of chat.users) {\n          if (chatUser.userId === user.id) {\n            unreadsCount += chatUser.unreads;\n          }\n        }\n      }\n    }\n    if (unreadsCount > 0) {\n      setInvisible(false);\n    } else {\n      setInvisible(true);\n    }\n  }, [chats, user.id]);\n\n  const fetchChats = async () => {\n    try {\n      const { data } = await api.get(\"/chats/\", {\n        params: { searchParam, pageNumber },\n      });\n      dispatch({ type: \"LOAD_CHATS\", payload: data.records });\n      setHasMore(data.hasMore);\n      setLoading(false);\n    } catch (err) {\n      toastError(err);\n    }\n  };\n\n  const loadMore = () => {\n    setPageNumber((prevState) => prevState + 1);\n  };\n\n  const handleScroll = (e) => {\n    if (!hasMore || loading) return;\n    const { scrollTop, scrollHeight, clientHeight } = e.currentTarget;\n    if (scrollHeight - (scrollTop + 100) < clientHeight) {\n      loadMore();\n    }\n  };\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n    setInvisible(true);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const goToMessages = (chat) => {\n    window.location.href = `/chats/${chat.uuid}`;\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  return (\n    <div>\n      <IconButton\n        aria-describedby={id}\n        variant=\"contained\"\n        color={invisible ? \"default\" : \"inherit\"}\n        onClick={handleClick}\n        style={{ color: \"white\" }}\n      >\n        <Badge color=\"secondary\" variant=\"dot\" invisible={invisible}>\n          <ForumIcon />\n        </Badge>\n      </IconButton>\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n      >\n        <Paper\n          variant=\"outlined\"\n          onScroll={handleScroll}\n          className={classes.mainPaper}\n        >\n          <List\n            component=\"nav\"\n            aria-label=\"main mailbox folders\"\n            style={{ minWidth: 300 }}\n          >\n            {isArray(chats) &&\n              chats.map((item, key) => (\n                <ListItem\n                  key={key}\n                  style={{\n                    background: key % 2 === 0 ? \"#ededed\" : \"white\",\n                    border: \"1px solid #eee\",\n                    cursor: \"pointer\",\n                  }}\n                  onClick={() => goToMessages(item)}\n                  button\n                >\n                  <ListItemText\n                    primary={item.lastMessage}\n                    secondary={\n                      <>\n                        <Typography component=\"span\" style={{ fontSize: 12 }}>\n                          {datetimeToClient(item.updatedAt)}\n                        </Typography>\n                        <span style={{ marginTop: 5, display: \"block\" }}></span>\n                      </>\n                    }\n                  />\n                </ListItem>\n              ))}\n            {isArray(chats) && chats.length === 0 && (\n              <ListItemText primary=\"Nenhum registro\" />\n            )}\n          </List>\n        </Paper>\n      </Popover>\n    </div>\n  );\n}\n","import React, { useState, useContext, useEffect } from \"react\";\nimport clsx from \"clsx\";\n\nimport {\n  makeStyles,\n  Drawer,\n  AppBar,\n  Toolbar,\n  List,\n  Typography,\n  Divider,\n  MenuItem,\n  IconButton,\n  Menu,\n  useTheme,\n  useMediaQuery,\n} from \"@material-ui/core\";\n\n\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\n\n\n\n\nimport MainListItems from \"./MainListItems\";\nimport NotificationsPopOver from \"../components/NotificationsPopOver\";\nimport UserModal from \"../components/UserModal\";\nimport { AuthContext } from \"../context/Auth/AuthContext\";\nimport BackdropLoading from \"../components/BackdropLoading\";\nimport { i18n } from \"../translate/i18n\";\nimport toastError from \"../errors/toastError\";\nimport { useDate } from \"../hooks/useDate\";\nimport AnnouncementsPopover from \"../components/AnnouncementsPopover\";\n\nimport logo from \"../assets/logo1.png\";\nimport { socketConnection } from \"../services/socket\";\nimport ChatPopover from \"../pages/Chat/ChatPopover\";\n\n// DARK THEMA\nimport ColorModeContext from \"../layout/themeContext\";\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\n\nconst drawerWidth = 300;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    height: \"100vh\",\n    background: 'red',\n    [theme.breakpoints.down(\"sm\")]: {\n      height: \"100vh\",\n    },\n    backgroundColor: theme.palette.fancyBackground,\n    '& .MuiButton-outlinedPrimary': {\n      color: theme.mode === 'light' ? theme.palette.primary.main : '#FFF',\n      border: theme.mode === 'light' ? `1px solid ${theme.palette.primary.main}` : '1px solid rgba(255, 255, 255, 0.5)',\n    },\n    '& .MuiTab-textColorPrimary.Mui-selected': {\n      color: theme.mode === 'light' ? theme.palette.primary.main : '#FFF',\n    }\n  },\n\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n    color: \"white\",\n    background: theme.palette.barraSuperior,\n\n  },\n\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    minHeight: \"48px\",\n    background: theme.palette.barraSuperior,\n    [theme.breakpoints.down(\"sm\")]: {\n      height: \"48px\"\n    }\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: \"none\",\n  },\n  title: {\n    flexGrow: 1,\n    fontSize: 14,\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: {\n    minHeight: \"56px\",\n  },\n  content: {\n    flex: 1,\n    overflow: \"auto\",\n    ...theme.scrollbarStyles,\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  containerWithScroll: {\n    flex: 1,\n    padding: theme.spacing(1),\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n}));\n\nconst LoggedInLayout = ({ children }) => {\n  const classes = useStyles();\n  const [userModalOpen, setUserModalOpen] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [menuOpen, setMenuOpen] = useState(false);\n  const { handleLogout, loading } = useContext(AuthContext);\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const [drawerVariant, setDrawerVariant] = useState(\"permanent\");\n  const { user } = useContext(AuthContext);\n  const { dateToClient } = useDate();\n\n  const theme = useTheme();\n  const { colorMode } = useContext(ColorModeContext);\n  const greaterThenSm = useMediaQuery(theme.breakpoints.up(\"sm\"));\n\n\n\n\n  useEffect(() => {\n\n    if (document.body.offsetWidth > 600) {\n      setDrawerOpen(true);\n    }\n\n  }, []);\n\n  useEffect(() => {\n    if (document.body.offsetWidth < 600) {\n      setDrawerVariant(\"temporary\");\n    } else {\n      setDrawerVariant(\"permanent\");\n    }\n  }, [drawerOpen]);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const userId = localStorage.getItem(\"userId\");\n\n    const socket = socketConnection({ companyId });\n\n    socket.on(`company-${companyId}-auth`, (data) => {\n      if (data.user.id === +userId) {\n        toastError(\"Sua conta foi acessada em outro computador.\");\n        setTimeout(() => {\n          localStorage.clear();\n          window.location.reload();\n        }, 1000);\n      }\n    });\n\n    socket.emit(\"userStatus\");\n    const interval = setInterval(() => {\n      socket.emit(\"userStatus\");\n    }, 1000 * 60 * 5);\n\n    return () => {\n      socket.disconnect();\n      clearInterval(interval);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n    setMenuOpen(true);\n  };\n\n  const handleCloseMenu = () => {\n    setAnchorEl(null);\n    setMenuOpen(false);\n  };\n\n  const handleOpenUserModal = () => {\n    setUserModalOpen(true);\n    handleCloseMenu();\n  };\n\n  const handleClickLogout = () => {\n    handleCloseMenu();\n    handleLogout();\n  };\n\n  const toggleColorMode = () => {\n    colorMode.toggleColorMode();\n  }\n\n  const drawerClose = () => {\n    if (document.body.offsetWidth < 600) {\n      setDrawerOpen(false);\n    }\n  };\n\n  if (loading) {\n    return <BackdropLoading />;\n  }\n\n  return (\n    <div className={classes.root}>\n      <Drawer\n        variant={drawerVariant}\n        className={drawerOpen ? classes.drawerPaper : classes.drawerPaperClose}\n        classes={{\n          paper: clsx(\n            classes.drawerPaper,\n            !drawerOpen && classes.drawerPaperClose\n          ),\n        }}\n        open={drawerOpen}\n      >\n        <div className={classes.toolbarIcon}>\n          <img src={logo} style={{ margin: \"0 auto\", height: \"48px\", width: \"50%\" }} alt=\"logo\" />\n          <IconButton onClick={() => setDrawerOpen(!drawerOpen)} style={{ color: \"white\" }}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List className={classes.containerWithScroll}>\n          <MainListItems drawerClose={drawerClose} />\n        </List>\n        <Divider />\n      </Drawer>\n      <UserModal\n        open={userModalOpen}\n        onClose={() => setUserModalOpen(false)}\n        userId={user?.id}\n      />\n      <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, drawerOpen && classes.appBarShift)}\n        color=\"primary\"\n      >\n        <Toolbar variant=\"dense\" className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            variant=\"contained\"\n            aria-label=\"open drawer\"\n            onClick={() => setDrawerOpen(!drawerOpen)}\n            className={clsx(\n              classes.menuButton,\n              drawerOpen && classes.menuButtonHidden\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          // style={console.log('dueDate', user?.company?.dueDate)}\n          >\n            {greaterThenSm && user?.profile === \"admin\" && user?.company?.dueDate ? (\n              <>\n                Olá <b>{user.name}</b>, seja bem-vindo a <b>{user?.company?.name}</b>! (Ativo até {dateToClient(user?.company?.dueDate)})\n              </>\n            ) : (\n              <>\n                Olá <b>{user.name}</b>, seja bem-vindo a <b>{user?.company?.name}</b>!\n              </>\n            )}\n          </Typography>\n\n          <IconButton edge=\"start\" onClick={toggleColorMode}>\n            {theme.mode === 'dark' ? <Brightness7Icon style={{ color: \"white\" }} /> : <Brightness4Icon style={{ color: \"white\" }} />}\n          </IconButton>\n\n          \n\n\n          {user.id && <NotificationsPopOver />}\n\n          <AnnouncementsPopover />\n\n          <ChatPopover />\n\n          <div>\n            <IconButton\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleMenu}\n              variant=\"contained\"\n              style={{ color: \"white\" }}\n            >\n              <AccountCircle />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorEl}\n              getContentAnchorEl={null}\n              anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"right\",\n              }}\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              open={menuOpen}\n              onClose={handleCloseMenu}\n            >\n              <MenuItem onClick={handleOpenUserModal}>\n                {i18n.t(\"mainDrawer.appBar.user.profile\")}\n              </MenuItem>\n              <MenuItem onClick={handleClickLogout}>\n                {i18n.t(\"mainDrawer.appBar.user.logout\")}\n              </MenuItem>\n            </Menu>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <main id=\"mainLayout\" className={classes.content}>\n        <div className={classes.appBarSpacer} />\n\n        {children ? children : null}\n      </main>\n    </div>\n  );\n};\n\nexport default LoggedInLayout;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport {\n\tBarChart,\n\tCartesianGrid,\n\tBar,\n\tXAxis,\n\tYAxis,\n\tLabel,\n\tResponsiveContainer,\n} from \"recharts\";\nimport { startOfHour, parseISO, format } from \"date-fns\";\n\nimport { i18n } from \"../../translate/i18n\";\n\nimport Title from \"./Title\";\nimport useTickets from \"../../hooks/useTickets\";\n\nconst Chart = () => {\n\tconst theme = useTheme();\n\n\tconst date = useRef(new Date().toISOString());\n\tconst { tickets } = useTickets({ date: date.current });\n\n\tconst [chartData, setChartData] = useState([\n\t\t{ time: \"01:00\", amount: 0 },\n\t\t{ time: \"02:00\", amount: 0 },\n\t\t{ time: \"03:00\", amount: 0 },\n\t\t{ time: \"04:00\", amount: 0 },\n\t\t{ time: \"05:00\", amount: 0 },\n\t\t{ time: \"06:00\", amount: 0 },\n\t\t{ time: \"07:00\", amount: 0 },\n\t\t{ time: \"08:00\", amount: 0 },\n\t\t{ time: \"09:00\", amount: 0 },\n\t\t{ time: \"10:00\", amount: 0 },\n\t\t{ time: \"11:00\", amount: 0 },\n\t\t{ time: \"12:00\", amount: 0 },\n\t\t{ time: \"13:00\", amount: 0 },\n\t\t{ time: \"14:00\", amount: 0 },\n\t\t{ time: \"15:00\", amount: 0 },\n\t\t{ time: \"16:00\", amount: 0 },\n\t\t{ time: \"17:00\", amount: 0 },\n\t\t{ time: \"18:00\", amount: 0 },\n\t\t{ time: \"19:00\", amount: 0 },\n\t\t{ time: \"20:00\", amount: 0 },\n\t\t{ time: \"21:00\", amount: 0 },\n\t\t{ time: \"22:00\", amount: 0 },\n\t\t{ time: \"23:00\", amount: 0 },\n\t\t{ time: \"00:00\", amount: 0 },\n\t]);\n\n\tuseEffect(() => {\n\t\tsetChartData(prevState => {\n\t\t\tlet aux = [...prevState];\n\n\t\t\taux.forEach(a => {\n\t\t\t\ttickets.forEach(ticket => {\n\t\t\t\t\tformat(startOfHour(parseISO(ticket.createdAt)), \"HH:mm\") === a.time &&\n\t\t\t\t\t\ta.amount++;\n\t\t\t\t});\n\t\t\t});\n\n\t\t\treturn aux;\n\t\t});\n\t}, [tickets]);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Title>{`${i18n.t(\"dashboard.charts.perDay.title\")}${\n\t\t\t\ttickets.length\n\t\t\t}`}</Title>\n\t\t\t<ResponsiveContainer>\n\t\t\t\t<BarChart\n\t\t\t\t\tdata={chartData}\n\t\t\t\t\tbarSize={40}\n\t\t\t\t\twidth={730}\n\t\t\t\t\theight={250}\n\t\t\t\t\tmargin={{\n\t\t\t\t\t\ttop: 16,\n\t\t\t\t\t\tright: 16,\n\t\t\t\t\t\tbottom: 0,\n\t\t\t\t\t\tleft: 24,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\n\t\t\t\t\t<XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n\t\t\t\t\t<YAxis\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tallowDecimals={false}\n\t\t\t\t\t\tstroke={theme.palette.text.secondary}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Label\n\t\t\t\t\t\t\tangle={270}\n\t\t\t\t\t\t\tposition=\"left\"\n\t\t\t\t\t\t\tstyle={{ textAnchor: \"middle\", fill: theme.palette.text.primary }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tTickets\n\t\t\t\t\t\t</Label>\n\t\t\t\t\t</YAxis>\n\t\t\t\t\t<Bar dataKey=\"amount\" fill={theme.palette.primary.main} />\n\t\t\t\t</BarChart>\n\t\t\t</ResponsiveContainer>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default Chart;\n","import React from \"react\";\n\nimport { Avatar, Card, CardHeader, Typography } from \"@material-ui/core\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { grey } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles(theme => ({\n\tcardAvatar: {\n\t\tfontSize: '55px',\n\t\tcolor: grey[500],\n\t\tbackgroundColor: '#ffffff',\n\t\twidth: theme.spacing(7),\n\t\theight: theme.spacing(7)\n\t},\n\tcardTitle: {\n\t\tfontSize: '18px',\n\t\tcolor: theme.palette.text.primary\n\t},\n\tcardSubtitle: {\n\t\tcolor: grey[600],\n\t\tfontSize: '14px'\n\t}\n}));\n\nexport default function CardCounter(props) {\n    const { icon, title, value, loading } = props\n\tconst classes = useStyles();\n    return ( !loading ? \n        <Card>\n            <CardHeader\n                avatar={\n                    <Avatar className={classes.cardAvatar}>\n                        {icon}\n                    </Avatar>\n                }\n                title={\n                    <Typography variant=\"h6\" component=\"h2\" className={classes.cardTitle}>\n                        { title }\n                    </Typography>\n                }\n                subheader={\n                    <Typography variant=\"subtitle1\" component=\"p\" className={classes.cardSubtitle}>\n                        { value }\n                    </Typography>\n                }\n            />\n        </Card>\n        : <Skeleton variant=\"rect\" height={80} />\n    )\n    \n}","import React from \"react\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Skeleton from \"@material-ui/lab/Skeleton\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green, red } from '@material-ui/core/colors';\n\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport moment from 'moment';\n\nimport Rating from '@material-ui/lab/Rating';\n\nconst useStyles = makeStyles(theme => ({\n\ton: {\n\t\tcolor: green[600],\n\t\tfontSize: '20px'\n\t},\n\toff: {\n\t\tcolor: red[600],\n\t\tfontSize: '20px'\n\t},\n    pointer: {\n        cursor: \"pointer\"\n    }\n}));\n\nexport function RatingBox ({ rating }) {\n    const ratingTrunc = rating === null ? 0 : Math.trunc(rating);\n    return <Rating\n        defaultValue={ratingTrunc}\n        max={3}\n        readOnly\n    />\n}\n\nexport default function TableAttendantsStatus(props) {\n    const { loading, attendants } = props\n\tconst classes = useStyles();\n\n    function renderList () {\n        return attendants.map((a, k) => (\n            <TableRow key={k}>\n                <TableCell>{a.name}</TableCell>\n                <TableCell align=\"center\" title=\"1 - Insatisfeito, 2 - Satisfeito, 3 - Muito Satisfeito\" className={classes.pointer}>\n                    <RatingBox rating={a.rating} />\n                </TableCell>\n                <TableCell align=\"center\">{formatTime(a.avgSupportTime, 2)}</TableCell>\n                <TableCell align=\"center\">\n                    { a.online ?\n                        <CheckCircleIcon className={classes.on} />\n                        : <ErrorIcon className={classes.off} />\n                    }\n                </TableCell>\n            </TableRow>\n        ))\n    }\n\n\tfunction formatTime(minutes){\n\t\treturn moment().startOf('day').add(minutes, 'minutes').format('HH[h] mm[m]');\n\t}\n\n    return ( !loading ?\n        <TableContainer component={Paper}>\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Nome</TableCell>\n                        <TableCell align=\"center\">Avaliações</TableCell>\n                        <TableCell align=\"center\">T.M. de Atendimento</TableCell>\n                        <TableCell align=\"center\">Status (Atual)</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    { renderList() }\n                    {/* <TableRow>\n                        <TableCell>Nome 4</TableCell>\n                        <TableCell align=\"center\">10</TableCell>\n                        <TableCell align=\"center\">10 minutos</TableCell>\n                        <TableCell align=\"center\">\n                            <CheckCircleIcon className={classes.off} />\n                        </TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>Nome 5</TableCell>\n                        <TableCell align=\"center\">10</TableCell>\n                        <TableCell align=\"center\">10 minutos</TableCell>\n                        <TableCell align=\"center\">\n                            <CheckCircleIcon className={classes.on} />\n                        </TableCell>\n                    </TableRow> */}\n                </TableBody>\n            </Table>\n        </TableContainer>\n        : <Skeleton variant=\"rect\" height={150} />\n    )\n}","import api from \"../../services/api\";\n\nconst useCompanies = () => {\n\n    const save = async (data) => {\n        const { data: responseData } = await api.request({\n            url: '/companies',\n            method: 'POST',\n            data\n        });\n        return responseData;\n    }\n\n    const findAll = async (id) => {\n        const { data } = await api.request({\n            url: `/companies`,\n            method: 'GET'\n        });\n        return data;\n    }\n\n    const list = async (id) => {\n        const { data } = await api.request({\n            url: `/companies/list`,\n            method: 'GET'\n        });\n        return data;\n    }\n\n    const find = async (id) => {\n        const { data } = await api.request({\n            url: `/companies/${id}`,\n            method: 'GET'\n        });\n        return data;\n    }\n\n    const finding = async (id) => {\n        const { data } = await api.request({\n            url: `/companies/${id}`,\n            method: 'GET'\n        });\n        return data;\n    }\n\n\n    const update = async (data) => {\n        const { data: responseData } = await api.request({\n            url: `/companies/${data.id}`,\n            method: 'PUT',\n            data\n        });\n        return responseData;\n    }\n\n    const remove = async (id) => {\n        const { data } = await api.request({\n            url: `/companies/${id}`,\n            method: 'DELETE'\n        });\n        return data;\n    }\n\n    const updateSchedules = async (data) => {\n        const { data: responseData } = await api.request({\n            url: `/companies/${data.id}/schedules`,\n            method: 'PUT',\n            data\n        });\n        return responseData;\n    }\n\n    return {\n        save,\n        update,\n        remove,\n        list,\n        find,\n        finding,\n        findAll,\n        updateSchedules\n    }\n}\n\nexport default useCompanies;","import React, { useState, useEffect } from \"react\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Typography from \"@material-ui/core/Typography\";\n\n// ICONS\nimport SpeedIcon from \"@material-ui/icons/Speed\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport TodayIcon from '@material-ui/icons/Today';\nimport CallIcon from \"@material-ui/icons/Call\";\nimport RecordVoiceOverIcon from \"@material-ui/icons/RecordVoiceOver\";\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport ForumIcon from \"@material-ui/icons/Forum\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport SendIcon from '@material-ui/icons/Send';\nimport MessageIcon from '@material-ui/icons/Message';\nimport AccessAlarmIcon from '@material-ui/icons/AccessAlarm';\nimport TimerIcon from '@material-ui/icons/Timer';\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { grey, blue } from \"@material-ui/core/colors\";\nimport { toast } from \"react-toastify\";\n\nimport Chart from \"./Chart\";\nimport ButtonWithSpinner from \"../../components/ButtonWithSpinner\";\n\nimport CardCounter from \"../../components/Dashboard/CardCounter\";\nimport TableAttendantsStatus from \"../../components/Dashboard/TableAttendantsStatus\";\nimport { isArray } from \"lodash\";\n\nimport useDashboard from \"../../hooks/useDashboard\";\nimport useCompanies from \"../../hooks/useCompanies\";\n\nimport { isEmpty } from \"lodash\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  fixedHeightPaper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: 240,\n    overflowY: \"auto\",\n    ...theme.scrollbarStyles,\n  },\n  cardAvatar: {\n    fontSize: \"55px\",\n    color: grey[500],\n    backgroundColor: \"#ffffff\",\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n  },\n  cardTitle: {\n    fontSize: \"18px\",\n    color: blue[700],\n  },\n  cardSubtitle: {\n    color: grey[600],\n    fontSize: \"14px\",\n  },\n  alignRight: {\n    textAlign: \"right\",\n  },\n  fullWidth: {\n    width: \"100%\",\n  },\n  selectContainer: {\n    width: \"100%\",\n    textAlign: \"left\",\n  },\n  card1: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    height: \"100%\",\n    backgroundColor: \"#0094bb\",\n    color: \"#eee\",\n  },\n  card2: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    height: \"100%\",\n    backgroundColor: \"#748e9d\",\n    color: \"#eee\",\n  },\n  card3: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    height: \"100%\",\n    backgroundColor: \"#7f78e6\",\n    color: \"#eee\",\n  },\n  card4: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    height: \"100%\",\n    backgroundColor: \"#cc991b\",\n    color: \"#eee\",\n  },\n  card5: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    height: \"100%\",\n    backgroundColor: \"#434243\",\n    color: \"#eee\",\n  },\n  card6: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    height: \"100%\",\n    backgroundColor: \"#b87d77\",\n    color: \"#eee\",\n  },\n  card7: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    height: \"100%\",\n    backgroundColor: \"#7bc780\",\n    color: \"#eee\",\n  },\n  card8: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    height: \"100%\",\n    backgroundColor: \"#b05c38\",\n    color: \"#eee\",\n  },\n  card9: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    height: \"100%\",\n    backgroundColor: \"#bd3c58\",\n    color: \"#eee\",\n  },\n}));\n\nconst Dashboard = () => {\n  const classes = useStyles();\n  const [counters, setCounters] = useState({});\n  const [attendants, setAttendants] = useState([]);\n  const [filterType, setFilterType] = useState(1);\n  const [period, setPeriod] = useState(0);\n  const [companyDueDate, setCompanyDueDate] = useState();\n  const [dateFrom, setDateFrom] = useState(\n    moment(\"1\", \"D\").format(\"YYYY-MM-DD\")\n  );\n  const [dateTo, setDateTo] = useState(moment().format(\"YYYY-MM-DD\"));\n  const [loading, setLoading] = useState(false);\n  const { find } = useDashboard();\n  const { finding } = useCompanies();\n  useEffect(() => {\n    async function firstLoad() {\n      await fetchData();\n    }\n    setTimeout(() => {\n      firstLoad();\n    }, 1000);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  async function handleChangePeriod(value) {\n    setPeriod(value);\n  }\n\n  async function handleChangeFilterType(value) {\n    setFilterType(value);\n    if (value === 1) {\n      setPeriod(0);\n    } else {\n      setDateFrom(\"\");\n      setDateTo(\"\");\n    }\n  }\n\n  async function fetchData() {\n    setLoading(true);\n\n    let params = {};\n\n    if (period > 0) {\n      params = {\n        days: period,\n      };\n    }\n\n    if (!isEmpty(dateFrom) && moment(dateFrom).isValid()) {\n      params = {\n        ...params,\n        date_from: moment(dateFrom).format(\"YYYY-MM-DD\"),\n      };\n    }\n\n    if (!isEmpty(dateTo) && moment(dateTo).isValid()) {\n      params = {\n        ...params,\n        date_to: moment(dateTo).format(\"YYYY-MM-DD\"),\n      };\n    }\n\n    if (Object.keys(params).length === 0) {\n      toast.error(\"Parametrize o filtro\");\n      setLoading(false);\n      return;\n    }\n\n    const data = await find(params);\n\n\n\n    setCounters(data.counters);\n    if (isArray(data.attendants)) {\n      setAttendants(data.attendants);\n    } else {\n      setAttendants([]);\n    }\n\n    setLoading(false);\n  }\n\n  useEffect(() => {\n    async function fetchData() {\n      await loadCompanies();\n    }\n    fetchData();\n  }, [])\n  //let companyDueDate = localStorage.getItem(\"companyDueDate\");\n  //const companyDueDate = localStorage.getItem(\"companyDueDate\").toString();\n  const companyId = localStorage.getItem(\"companyId\");\n  const loadCompanies = async () => {\n    setLoading(true);\n    try {\n      const companiesList = await finding(companyId);\n      setCompanyDueDate(moment(companiesList.dueDate).format(\"DD/MM/yyyy\"));\n    } catch (e) {\n      console.log(\"🚀 Console Log : e\", e);\n      // toast.error(\"Não foi possível carregar a lista de registros\");\n    }\n    setLoading(false);\n  };\n\n  function formatTime(minutes) {\n    return moment()\n      .startOf(\"day\")\n      .add(minutes, \"minutes\")\n      .format(\"HH[h] mm[m]\");\n  }\n\n  function renderFilters() {\n    if (filterType === 1) {\n      return (\n        <>\n          <Grid item xs={12} sm={6} md={4}>\n            <TextField\n              label=\"Data Inicial\"\n              type=\"date\"\n              value={dateFrom}\n              onChange={(e) => setDateFrom(e.target.value)}\n              className={classes.fullWidth}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6} md={4}>\n            <TextField\n              label=\"Data Final\"\n              type=\"date\"\n              value={dateTo}\n              onChange={(e) => setDateTo(e.target.value)}\n              className={classes.fullWidth}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n        </>\n      );\n    } else {\n      return (\n        <Grid item xs={12} sm={6} md={4}>\n          <FormControl className={classes.selectContainer}>\n            <InputLabel id=\"period-selector-label\">Período</InputLabel>\n            <Select\n              labelId=\"period-selector-label\"\n              id=\"period-selector\"\n              value={period}\n              onChange={(e) => handleChangePeriod(e.target.value)}\n            >\n              <MenuItem value={0}>Nenhum selecionado</MenuItem>\n              <MenuItem value={3}>Últimos 3 dias</MenuItem>\n              <MenuItem value={7}>Últimos 7 dias</MenuItem>\n              <MenuItem value={15}>Últimos 15 dias</MenuItem>\n              <MenuItem value={30}>Últimos 30 dias</MenuItem>\n              <MenuItem value={60}>Últimos 60 dias</MenuItem>\n              <MenuItem value={90}>Últimos 90 dias</MenuItem>\n            </Select>\n            <FormHelperText>Selecione o período desejado</FormHelperText>\n          </FormControl>\n        </Grid>\n      );\n    }\n  }\n\n  return (\n    <div>\n      <Container maxWidth=\"lg\" className={classes.container}>\n        <Grid container spacing={3} justifyContent=\"flex-end\">\n          \n          {/* GRID DO VENCIMENTO */}\n          {/* <Grid item xs={12} sm={6} md={3}>\n            <CardCounter\n              icon={<TodayIcon fontSize=\"inherit\" />}\n              title=\"Data Vencimento\"\n              value={companyDueDate}\n              loading={loading}\n            />\n          </Grid> */}\n\n          {/* DASHBOARD ATENDIMENTOS HOJE */}\n          <Grid item xs={12}>\n            <Paper className={classes.fixedHeightPaper}>\n              <Chart />\n            </Paper>\n          </Grid>\n\n          {/* FILTROS */}\n          <Grid item xs={12} sm={6} md={4}>\n            <FormControl className={classes.selectContainer}>\n              <InputLabel id=\"period-selector-label\">Tipo de Filtro</InputLabel>\n              <Select\n                labelId=\"period-selector-label\"\n                value={filterType}\n                onChange={(e) => handleChangeFilterType(e.target.value)}\n              >\n                <MenuItem value={1}>Filtro por Data</MenuItem>\n                <MenuItem value={2}>Filtro por Período</MenuItem>\n              </Select>\n              <FormHelperText>Selecione o período desejado</FormHelperText>\n            </FormControl>\n          </Grid>\n\n          {renderFilters()}\n\n          {/* BOTAO FILTRAR */}\n          <Grid item xs={12} className={classes.alignRight}>\n            <ButtonWithSpinner\n              loading={loading}\n              onClick={() => fetchData()}\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              Filtrar\n            </ButtonWithSpinner>\n          </Grid>\n\n          {/* ATENDIMENTOS PENDENTES */}\n          <Grid item xs={12} sm={6} md={4}>\n            <Paper\n              className={classes.card1}\n              style={{ overflow: \"hidden\" }}\n              elevation={4}\n            >\n              <Grid container spacing={3}>\n                <Grid item xs={8}>\n                  <Typography\n                    component=\"h3\"\n                    variant=\"h6\"\n                    paragraph\n                  >\n                    Atd. Pendentes\n                  </Typography>\n                  <Grid item>\n                    <Typography\n                      component=\"h1\"\n                      variant=\"h4\"\n                    >\n                      {counters.supportPending}\n                    </Typography>\n                  </Grid>\n                </Grid>\n                <Grid item xs={2}>\n                  <CallIcon\n                    style={{\n                      fontSize: 100,\n                      color: \"#0b708c\",\n                    }}\n                  />\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n\n          {/* ATENDIMENTOS ACONTECENDO */}\n          <Grid item xs={12} sm={6} md={4}>\n            <Paper\n              className={classes.card2}\n              style={{ overflow: \"hidden\" }}\n              elevation={6}\n            >\n              <Grid container spacing={3}>\n                <Grid item xs={8}>\n                  <Typography\n                    component=\"h3\"\n                    variant=\"h6\"\n                    paragraph\n                  >\n                    Atd. Acontecendo\n                  </Typography>\n                  <Grid item>\n                    <Typography\n                      component=\"h1\"\n                      variant=\"h4\"\n                    >\n                      {counters.supportHappening}\n                    </Typography>\n                  </Grid>\n                </Grid>\n                <Grid item xs={4}>\n                  <HourglassEmptyIcon\n                    style={{\n                      fontSize: 100,\n                      color: \"#47606e\",\n                    }}\n                  />\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n\n          {/* ATENDIMENTOS REALIZADOS */}\n          <Grid item xs={12} sm={6} md={4}>\n            <Paper\n              className={classes.card3}\n              style={{ overflow: \"hidden\" }}\n              elevation={6}\n            >\n              <Grid container spacing={3}>\n                <Grid item xs={8}>\n                  <Typography\n                    component=\"h3\"\n                    variant=\"h6\"\n                    paragraph\n                  >\n                    Finalizados\n                  </Typography>\n                  <Grid item>\n                    <Typography\n                      component=\"h1\"\n                      variant=\"h4\"\n                    >\n                      {counters.supportFinished}\n                    </Typography>\n                  </Grid>\n                </Grid>\n                <Grid item xs={4}>\n                  <CheckCircleIcon\n                    style={{\n                      fontSize: 100,\n                      color: \"#5852ab\",\n                    }}\n                  />\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n\n          {/* NOVOS CONTATOS */}\n          <Grid item xs={12} sm={6} md={4}>\n            <Paper\n              className={classes.card4}\n              style={{ overflow: \"hidden\" }}\n              elevation={6}\n            >\n              <Grid container spacing={3}>\n                <Grid item xs={8}>\n                  <Typography\n                    component=\"h3\"\n                    variant=\"h6\"\n                    paragraph\n                  >\n                    Novos Contatos\n                  </Typography>\n                  <Grid item>\n                    <Typography\n                      component=\"h1\"\n                      variant=\"h4\"\n                    >\n                      {counters.leads}\n                    </Typography>\n                  </Grid>\n                </Grid>\n                <Grid item xs={4}>\n                  <GroupAddIcon\n                    style={{\n                      fontSize: 100,\n                      color: \"#8c6b19\",\n                    }}\n                  />\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n\n          {/* T.M. DE ATENDIMENTO */}\n          <Grid item xs={12} sm={6} md={4}>\n            <Paper\n              className={classes.card8}\n              style={{ overflow: \"hidden\" }}\n              elevation={6}\n            >\n              <Grid container spacing={3}>\n                <Grid item xs={8}>\n                  <Typography\n                    component=\"h3\"\n                    variant=\"h6\"\n                    paragraph\n                  >\n                    T.M. de Atendimento\n                  </Typography>\n                  <Grid item>\n                    <Typography\n                      component=\"h1\"\n                      variant=\"h4\"\n                    >\n                      {formatTime(counters.avgSupportTime)}\n                    </Typography>\n                  </Grid>\n                </Grid>\n                <Grid item xs={4}>\n                  <AccessAlarmIcon\n                    style={{\n                      fontSize: 100,\n                      color: \"#7a3f26\",\n                    }}\n                  />\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n\n          {/* T.M. DE ESPERA */}\n          <Grid item xs={12} sm={6} md={4}>\n            <Paper\n              className={classes.card9}\n              style={{ overflow: \"hidden\" }}\n              elevation={6}\n            >\n              <Grid container spacing={3}>\n                <Grid item xs={8}>\n                  <Typography\n                    component=\"h3\"\n                    variant=\"h6\"\n                    paragraph\n                  >\n                    T.M. de Espera\n                  </Typography>\n                  <Grid item>\n                    <Typography\n                      component=\"h1\"\n                      variant=\"h4\"\n                    >\n                      {formatTime(counters.avgWaitTime)}\n                    </Typography>\n                  </Grid>\n                </Grid>\n                <Grid item xs={4}>\n                  <TimerIcon\n                    style={{\n                      fontSize: 100,\n                      color: \"#8a2c40\",\n                    }}\n                  />\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n\n          {/* USUARIOS ONLINE */}\n          <Grid item xs={12}>\n            {attendants.length ? (\n              <TableAttendantsStatus\n                attendants={attendants}\n                loading={loading}\n              />\n            ) : null}\n          </Grid>\n\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React, { useState, useEffect, useRef } from \"react\";\n\nimport * as Yup from \"yup\";\nimport { Formik, FieldArray, Form, Field } from \"formik\";\nimport { toast } from \"react-toastify\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport { i18n } from \"../../translate/i18n\";\n\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t\tdisplay: \"flex\",\n\t\tflexWrap: \"wrap\",\n\t},\n\ttextField: {\n\t\tmarginRight: theme.spacing(1),\n\t\tflex: 1,\n\t},\n\n\textraAttr: {\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"center\",\n\t\talignItems: \"center\",\n\t},\n\n\tbtnWrapper: {\n\t\tposition: \"relative\",\n\t},\n\n\tbuttonProgress: {\n\t\tcolor: green[500],\n\t\tposition: \"absolute\",\n\t\ttop: \"50%\",\n\t\tleft: \"50%\",\n\t\tmarginTop: -12,\n\t\tmarginLeft: -12,\n\t},\n}));\n\nconst ContactSchema = Yup.object().shape({\n\tname: Yup.string()\n\t\t.min(2, \"Too Short!\")\n\t\t.max(50, \"Too Long!\")\n\t\t.required(\"Required\"),\n\tnumber: Yup.string().min(8, \"Too Short!\").max(50, \"Too Long!\"),\n\temail: Yup.string().email(\"Invalid email\"),\n});\n\nconst ContactModal = ({ open, onClose, contactId, initialValues, onSave }) => {\n\tconst classes = useStyles();\n\tconst isMounted = useRef(true);\n\n\tconst initialState = {\n\t\tname: \"\",\n\t\tnumber: \"\",\n\t\temail: \"\",\n\t};\n\n\tconst [contact, setContact] = useState(initialState);\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tisMounted.current = false;\n\t\t};\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconst fetchContact = async () => {\n\t\t\tif (initialValues) {\n\t\t\t\tsetContact(prevState => {\n\t\t\t\t\treturn { ...prevState, ...initialValues };\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (!contactId) return;\n\n\t\t\ttry {\n\t\t\t\tconst { data } = await api.get(`/contacts/${contactId}`);\n\t\t\t\tif (isMounted.current) {\n\t\t\t\t\tsetContact(data);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\ttoastError(err);\n\t\t\t}\n\t\t};\n\n\t\tfetchContact();\n\t}, [contactId, open, initialValues]);\n\n\tconst handleClose = () => {\n\t\tonClose();\n\t\tsetContact(initialState);\n\t};\n\n\tconst handleSaveContact = async values => {\n\t\ttry {\n\t\t\tif (contactId) {\n\t\t\t\tawait api.put(`/contacts/${contactId}`, values);\n\t\t\t\thandleClose();\n\t\t\t} else {\n\t\t\t\tconst { data } = await api.post(\"/contacts\", values);\n\t\t\t\tif (onSave) {\n\t\t\t\t\tonSave(data);\n\t\t\t\t}\n\t\t\t\thandleClose();\n\t\t\t}\n\t\t\ttoast.success(i18n.t(\"contactModal.success\"));\n\t\t} catch (err) {\n\t\t\ttoastError(err);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Dialog open={open} onClose={handleClose} maxWidth=\"lg\" scroll=\"paper\">\n\t\t\t\t<DialogTitle id=\"form-dialog-title\">\n\t\t\t\t\t{contactId\n\t\t\t\t\t\t? `${i18n.t(\"contactModal.title.edit\")}`\n\t\t\t\t\t\t: `${i18n.t(\"contactModal.title.add\")}`}\n\t\t\t\t</DialogTitle>\n\t\t\t\t<Formik\n\t\t\t\t\tinitialValues={contact}\n\t\t\t\t\tenableReinitialize={true}\n\t\t\t\t\tvalidationSchema={ContactSchema}\n\t\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\thandleSaveContact(values);\n\t\t\t\t\t\t\tactions.setSubmitting(false);\n\t\t\t\t\t\t}, 400);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{({ values, errors, touched, isSubmitting }) => (\n\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t<DialogContent dividers>\n\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\" gutterBottom>\n\t\t\t\t\t\t\t\t\t{i18n.t(\"contactModal.form.mainInfo\")}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\tas={TextField}\n\t\t\t\t\t\t\t\t\tlabel={i18n.t(\"contactModal.form.name\")}\n\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\t\terror={touched.name && Boolean(errors.name)}\n\t\t\t\t\t\t\t\t\thelperText={touched.name && errors.name}\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\tclassName={classes.textField}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\tas={TextField}\n\t\t\t\t\t\t\t\t\tlabel={i18n.t(\"contactModal.form.number\")}\n\t\t\t\t\t\t\t\t\tname=\"number\"\n\t\t\t\t\t\t\t\t\terror={touched.number && Boolean(errors.number)}\n\t\t\t\t\t\t\t\t\thelperText={touched.number && errors.number}\n\t\t\t\t\t\t\t\t\tplaceholder=\"5513912344321\"\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\tas={TextField}\n\t\t\t\t\t\t\t\t\t\tlabel={i18n.t(\"contactModal.form.email\")}\n\t\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\t\terror={touched.email && Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\thelperText={touched.email && errors.email}\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Email address\"\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\tstyle={{ marginBottom: 8, marginTop: 12 }}\n\t\t\t\t\t\t\t\t\tvariant=\"subtitle1\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{i18n.t(\"contactModal.form.extraInfo\")}\n\t\t\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t\t\t<FieldArray name=\"extraInfo\">\n\t\t\t\t\t\t\t\t\t{({ push, remove }) => (\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t{values.extraInfo &&\n\t\t\t\t\t\t\t\t\t\t\t\tvalues.extraInfo.length > 0 &&\n\t\t\t\t\t\t\t\t\t\t\t\tvalues.extraInfo.map((info, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.extraAttr}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={`${index}-info`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tas={TextField}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={i18n.t(\"contactModal.form.extraName\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={`extraInfo[${index}].name`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.textField}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tas={TextField}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={i18n.t(\"contactModal.form.extraValue\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={`extraInfo[${index}].value`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.textField}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => remove(index)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlineIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.extraAttr}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ flex: 1, marginTop: 8 }}\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => push({ name: \"\", value: \"\" })}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{`+ ${i18n.t(\"contactModal.buttons.addExtraInfo\")}`}\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</FieldArray>\n\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tonClick={handleClose}\n\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{i18n.t(\"contactModal.buttons.cancel\")}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tclassName={classes.btnWrapper}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{contactId\n\t\t\t\t\t\t\t\t\t\t? `${i18n.t(\"contactModal.buttons.okEdit\")}`\n\t\t\t\t\t\t\t\t\t\t: `${i18n.t(\"contactModal.buttons.okAdd\")}`}\n\t\t\t\t\t\t\t\t\t{isSubmitting && (\n\t\t\t\t\t\t\t\t\t\t<CircularProgress\n\t\t\t\t\t\t\t\t\t\t\tsize={24}\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.buttonProgress}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t)}\n\t\t\t\t</Formik>\n\t\t\t</Dialog>\n\t\t</div>\n\t);\n};\n\nexport default ContactModal;\n","import React, { useState, useEffect, useContext } from \"react\";\n\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\n\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Autocomplete, {\n\tcreateFilterOptions,\n} from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport { i18n } from \"../../translate/i18n\";\nimport api from \"../../services/api\";\nimport ButtonWithSpinner from \"../ButtonWithSpinner\";\nimport ContactModal from \"../ContactModal\";\nimport toastError from \"../../errors/toastError\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { Grid, ListItemText, MenuItem, Select } from \"@material-ui/core\";\nimport { toast } from \"react-toastify\";\n\nconst filter = createFilterOptions({\n\ttrim: true,\n});\n\nconst NewTicketModal = ({ modalOpen, onClose, initialContact }) => {\n\n\tconst [options, setOptions] = useState([]);\n\tconst [loading, setLoading] = useState(false);\n\tconst [searchParam, setSearchParam] = useState(\"\");\n\tconst [selectedContact, setSelectedContact] = useState(null);\n\tconst [selectedQueue, setSelectedQueue] = useState(\"\");\n\tconst [newContact, setNewContact] = useState({});\n\tconst [contactModalOpen, setContactModalOpen] = useState(false);\n\tconst { user } = useContext(AuthContext);\n\n\tuseEffect(() => {\n\t\tif (initialContact?.id !== undefined) {\n\t\t\tsetOptions([initialContact]);\n\t\t\tsetSelectedContact(initialContact);\n\t\t}\n\t}, [initialContact]);\n\n\tuseEffect(() => {\n\t\tif (!modalOpen || searchParam.length < 3) {\n\t\t\tsetLoading(false);\n\t\t\treturn;\n\t\t}\n\t\tsetLoading(true);\n\t\tconst delayDebounceFn = setTimeout(() => {\n\t\t\tconst fetchContacts = async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst { data } = await api.get(\"contacts\", {\n\t\t\t\t\t\tparams: { searchParam },\n\t\t\t\t\t});\n\t\t\t\t\tsetOptions(data.contacts);\n\t\t\t\t\tsetLoading(false);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tsetLoading(false);\n\t\t\t\t\ttoastError(err);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchContacts();\n\t\t}, 500);\n\t\treturn () => clearTimeout(delayDebounceFn);\n\t}, [searchParam, modalOpen]);\n\n\tconst handleClose = () => {\n\t\tonClose();\n\t\tsetSearchParam(\"\");\n\t\tsetSelectedContact(null);\n\t};\n\n\tconst handleSaveTicket = async contactId => {\n\t\tif (!contactId) return;\n\t\tif (selectedQueue === \"\" && user.profile !== 'admin') {\n\t\t\ttoast.error(\"Selecione uma fila\");\n\t\t\treturn;\n\t\t}\n\t\tsetLoading(true);\n\t\ttry {\n\t\t\tconst queueId = selectedQueue !== \"\" ? selectedQueue : null;\n\t\t\tconst { data: ticket } = await api.post(\"/tickets\", {\n\t\t\t\tcontactId: contactId,\n\t\t\t\tqueueId,\n\t\t\t\tuserId: user.id,\n\t\t\t\tstatus: \"open\",\n\t\t\t});\n\t\t\tonClose(ticket);\n\t\t} catch (err) {\n\t\t\ttoastError(err);\n\t\t}\n\t\tsetLoading(false);\n\t};\n\n\tconst handleSelectOption = (e, newValue) => {\n\t\tif (newValue?.number) {\n\t\t\tsetSelectedContact(newValue);\n\t\t} else if (newValue?.name) {\n\t\t\tsetNewContact({ name: newValue.name });\n\t\t\tsetContactModalOpen(true);\n\t\t}\n\t};\n\n\tconst handleCloseContactModal = () => {\n\t\tsetContactModalOpen(false);\n\t};\n\n\tconst handleAddNewContactTicket = contact => {\n\t\thandleSaveTicket(contact.id);\n\t};\n\n\tconst createAddContactOption = (filterOptions, params) => {\n\t\tconst filtered = filter(filterOptions, params);\n\n\t\tif (params.inputValue !== \"\" && !loading && searchParam.length >= 3) {\n\t\t\tfiltered.push({\n\t\t\t\tname: `${params.inputValue}`,\n\t\t\t});\n\t\t}\n\n\t\treturn filtered;\n\t};\n\n\tconst renderOption = option => {\n\t\tif (option.number) {\n\t\t\treturn `${option.name} - ${option.number}`;\n\t\t} else {\n\t\t\treturn `${i18n.t(\"newTicketModal.add\")} ${option.name}`;\n\t\t}\n\t};\n\n\tconst renderOptionLabel = option => {\n\t\tif (option.number) {\n\t\t\treturn `${option.name} - ${option.number}`;\n\t\t} else {\n\t\t\treturn `${option.name}`;\n\t\t}\n\t};\n\n\tconst renderContactAutocomplete = () => {\n\t\tif (initialContact === undefined || initialContact.id === undefined) {\n\t\t\treturn (\n\t\t\t\t<Grid xs={12} item>\n\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\toptions={options}\n\t\t\t\t\t\tloading={loading}\n\t\t\t\t\t\tclearOnBlur\n\t\t\t\t\t\tautoHighlight\n\t\t\t\t\t\tfreeSolo\n\t\t\t\t\t\tclearOnEscape\n\t\t\t\t\t\tgetOptionLabel={renderOptionLabel}\n\t\t\t\t\t\trenderOption={renderOption}\n\t\t\t\t\t\tfilterOptions={createAddContactOption}\n\t\t\t\t\t\tonChange={(e, newValue) => handleSelectOption(e, newValue)}\n\t\t\t\t\t\trenderInput={params => (\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t{...params}\n\t\t\t\t\t\t\t\tlabel={i18n.t(\"newTicketModal.fieldLabel\")}\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\tonChange={e => setSearchParam(e.target.value)}\n\t\t\t\t\t\t\t\tonKeyPress={e => {\n\t\t\t\t\t\t\t\t\tif (loading || !selectedContact) return;\n\t\t\t\t\t\t\t\t\telse if (e.key === \"Enter\") {\n\t\t\t\t\t\t\t\t\t\thandleSaveTicket(selectedContact.id);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\t\t...params.InputProps,\n\t\t\t\t\t\t\t\t\tendAdornment: (\n\t\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t{loading ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<CircularProgress color=\"inherit\" size={20} />\n\t\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t\t\t{params.InputProps.endAdornment}\n\t\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t)\n\t\t}\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<ContactModal\n\t\t\t\topen={contactModalOpen}\n\t\t\t\tinitialValues={newContact}\n\t\t\t\tonClose={handleCloseContactModal}\n\t\t\t\tonSave={handleAddNewContactTicket}\n\t\t\t></ContactModal>\n\t\t\t<Dialog open={modalOpen} onClose={handleClose}>\n\t\t\t\t<DialogTitle id=\"form-dialog-title\">\n\t\t\t\t\t{i18n.t(\"newTicketModal.title\")}\n\t\t\t\t</DialogTitle>\n\t\t\t\t<DialogContent dividers>\n\t\t\t\t\t<Grid style={{ width: 300 }} container spacing={2}>\n\t\t\t\t\t\t{renderContactAutocomplete()}\n\t\t\t\t\t\t<Grid xs={12} item>\n\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tdisplayEmpty\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tvalue={selectedQueue}\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tsetSelectedQueue(e.target.value)\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tMenuProps={{\n\t\t\t\t\t\t\t\t\tanchorOrigin: {\n\t\t\t\t\t\t\t\t\t\tvertical: \"bottom\",\n\t\t\t\t\t\t\t\t\t\thorizontal: \"left\",\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\ttransformOrigin: {\n\t\t\t\t\t\t\t\t\t\tvertical: \"top\",\n\t\t\t\t\t\t\t\t\t\thorizontal: \"left\",\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tgetContentAnchorEl: null,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\trenderValue={() => {\n\t\t\t\t\t\t\t\t\tif (selectedQueue === \"\") {\n\t\t\t\t\t\t\t\t\t\treturn \"Selecione uma fila\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tconst queue = user.queues.find(q => q.id === selectedQueue)\n\t\t\t\t\t\t\t\t\treturn queue.name\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{user.queues?.length > 0 &&\n\t\t\t\t\t\t\t\t\tuser.queues.map((queue, key) => (\n\t\t\t\t\t\t\t\t\t\t<MenuItem dense key={key} value={queue.id}>\n\t\t\t\t\t\t\t\t\t\t\t<ListItemText primary={queue.name} />\n\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</DialogContent>\n\t\t\t\t<DialogActions>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={handleClose}\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{i18n.t(\"newTicketModal.buttons.cancel\")}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<ButtonWithSpinner\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tdisabled={!selectedContact}\n\t\t\t\t\t\tonClick={() => handleSaveTicket(selectedContact.id)}\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tloading={loading}\n\t\t\t\t\t>\n\t\t\t\t\t\t{i18n.t(\"newTicketModal.buttons.ok\")}\n\t\t\t\t\t</ButtonWithSpinner>\n\t\t\t\t</DialogActions>\n\t\t\t</Dialog>\n\t\t</>\n\t);\n};\n\nexport default NewTicketModal;\n","import React, { useState, useEffect, createContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst TicketsContext = createContext();\n\nconst TicketsContextProvider = ({ children }) => {\n\tconst [currentTicket, setCurrentTicket] = useState({ id: null, code: null });\n    const history = useHistory();\n\n    useEffect(() => {\n        if (currentTicket.id !== null) {\n            history.push(`/tickets/${currentTicket.uuid}`);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentTicket])\n\n\treturn (\n\t\t<TicketsContext.Provider\n\t\t\tvalue={{ currentTicket, setCurrentTicket }}\n\t\t>\n\t\t\t{children}\n\t\t</TicketsContext.Provider>\n\t);\n};\n\nexport { TicketsContext, TicketsContextProvider };\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport toastError from \"../../errors/toastError\";\nimport api from \"../../services/api\";\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\n\nimport { Button, Divider, } from \"@material-ui/core\";\n\nconst VcardPreview = ({ contact, number }) => {\n  const history = useHistory();\n  const { user } = useContext(AuthContext);\n\n  const companyId = localStorage.getItem(\"companyId\");\n\n  const [selectedContact, setContact] = useState({\n    id: 0,\n    name: \"\",\n    number: 0,\n    profilePicUrl: \"\"\n  });\n\n  useEffect(() => {\n    const delayDebounceFn = setTimeout(() => {\n      const fetchContacts = async () => {\n        try {\n          let contactObj = {\n            name: contact,\n            number,\n            email: \"\"\n          }\n          const { data } = await api.post(\"/contacts/findOrCreate\", contactObj);\n          setContact(data)\n\n        } catch (err) {\n          console.log(err)\n          toastError(err);\n        }\n      };\n      fetchContacts();\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n  }, [contact, number]);\n\n  const handleNewChat = async () => {\n    try {\n      const { data: ticket } = await api.post(\"/tickets\", {\n        contactId: selectedContact.id,\n        userId: user.id,\n        status: \"open\",\n        companyId: companyId\n      });\n      history.push(`/tickets/${ticket.uuid}`);\n    } catch (err) {\n      toastError(err);\n    }\n  }\n\n  return (\n    <>\n      <div style={{\n        minWidth: \"250px\",\n        maxWidth: \"350px\",\n        marginTop: '8px',\n        backgroundColor: '#ffffff',\n        boxShadow: \"0 1px 1px #b3b3b3\",\n        borderRadius: \"4px\"\n      }}>\n        <Box\n        // backgroundColor=\"#ffffff\"\n        >\n          <Box\n            display=\"flex\"\n            padding={1}\n            justifyContent=\"space-around\"\n            alignItems=\"center\"\n          >\n            <Avatar src={selectedContact?.profilePicUrl} />\n\n            <Typography\n              style={{ marginTop: \"12px\", marginLeft: \"10px\", fontWeight: 'bolder' }}\n\n            >\n              {selectedContact?.name}\n            </Typography>\n          </Box>\n          <Box\n            display=\"flex\"\n            padding={1}\n            justifyContent=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Divider />\n            <Button\n              fullWidth\n              color=\"primary\"\n              variant='outlined'\n              onClick={handleNewChat}\n              disabled={!selectedContact?.number}\n            >\n              Conversar\n            </Button>\n          </Box>\n        </Box>\n      </div>\n    </>\n  );\n\n};\n\nexport default VcardPreview;","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport ModalImage from \"react-modal-image\";\nimport api from \"../../services/api\";\n\nconst useStyles = makeStyles(theme => ({\n\tmessageMedia: {\n\t\tobjectFit: \"cover\",\n\t\twidth: 250,\n\t\theight: 200,\n\t\tborderTopLeftRadius: 8,\n\t\tborderTopRightRadius: 8,\n\t\tborderBottomLeftRadius: 8,\n\t\tborderBottomRightRadius: 8,\n\t},\n}));\n\nconst ModalImageCors = ({ imageUrl }) => {\n\tconst classes = useStyles();\n\tconst [fetching, setFetching] = useState(true);\n\tconst [blobUrl, setBlobUrl] = useState(\"\");\n\n\tuseEffect(() => {\n\t\tif (!imageUrl) return;\n\t\tconst fetchImage = async () => {\n\t\t\tconst { data, headers } = await api.get(imageUrl, {\n\t\t\t\tresponseType: \"blob\",\n\t\t\t});\n\t\t\tconst url = window.URL.createObjectURL(\n\t\t\t\tnew Blob([data], { type: headers[\"content-type\"] })\n\t\t\t);\n\t\t\tsetBlobUrl(url);\n\t\t\tsetFetching(false);\n\t\t};\n\t\tfetchImage();\n\t}, [imageUrl]);\n\n\treturn (\n\t\t<ModalImage\n\t\t\tclassName={classes.messageMedia}\n\t\t\tsmallSrcSet={fetching ? imageUrl : blobUrl}\n\t\t\tmedium={fetching ? imageUrl : blobUrl}\n\t\t\tlarge={fetching ? imageUrl : blobUrl}\n\t\t\talt=\"image\"\n\t\t/>\n\t);\n};\n\nexport default ModalImageCors;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { i18n } from \"../../translate/i18n\";\n\nconst ConfirmationModal = ({ title, children, open, onClose, onConfirm }) => {\n\treturn (\n\t\t<Dialog\n\t\t\topen={open}\n\t\t\tonClose={() => onClose(false)}\n\t\t\taria-labelledby=\"confirm-dialog\"\n\t\t>\n\t\t\t<DialogTitle id=\"confirm-dialog\">{title}</DialogTitle>\n\t\t\t<DialogContent dividers>\n\t\t\t\t<Typography>{children}</Typography>\n\t\t\t</DialogContent>\n\t\t\t<DialogActions>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tonClick={() => onClose(false)}\n\t\t\t\t\tcolor=\"default\"\n\t\t\t\t>\n\t\t\t\t\t{i18n.t(\"confirmationModal.buttons.cancel\")}\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tonClose(false);\n\t\t\t\t\t\tonConfirm();\n\t\t\t\t\t}}\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t>\n\t\t\t\t\t{i18n.t(\"confirmationModal.buttons.confirm\")}\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t);\n};\n\nexport default ConfirmationModal;\n","import React, { useState, createContext } from \"react\";\n\nconst ReplyMessageContext = createContext();\n\nconst ReplyMessageProvider = ({ children }) => {\n\tconst [replyingMessage, setReplyingMessage] = useState(null);\n\tconst [medias, setMedias] = useState([]);\n\n\treturn (\n\t\t<ReplyMessageContext.Provider\n\t\t\tvalue={{ replyingMessage, setReplyingMessage, medias, setMedias }}\n\t\t>\n\t\t\t{children}\n\t\t</ReplyMessageContext.Provider>\n\t);\n};\n\nexport { ReplyMessageContext, ReplyMessageProvider };\n","import React, { useState, useContext } from \"react\";\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nimport { i18n } from \"../../translate/i18n\";\nimport api from \"../../services/api\";\nimport ConfirmationModal from \"../ConfirmationModal\";\nimport { Menu } from \"@material-ui/core\";\nimport { ReplyMessageContext } from \"../../context/ReplyingMessage/ReplyingMessageContext\";\nimport toastError from \"../../errors/toastError\";\n\nconst MessageOptionsMenu = ({ message, menuOpen, handleClose, anchorEl }) => {\n\tconst { setReplyingMessage } = useContext(ReplyMessageContext);\n\tconst [confirmationOpen, setConfirmationOpen] = useState(false);\n\n\tconst handleDeleteMessage = async () => {\n\t\ttry {\n\t\t\tawait api.delete(`/messages/${message.id}`);\n\t\t} catch (err) {\n\t\t\ttoastError(err);\n\t\t}\n\t};\n\n\tconst hanldeReplyMessage = () => {\n\t\tsetReplyingMessage(message);\n\t\thandleClose();\n\t};\n\n\tconst handleOpenConfirmationModal = e => {\n\t\tsetConfirmationOpen(true);\n\t\thandleClose();\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<ConfirmationModal\n\t\t\t\ttitle={i18n.t(\"messageOptionsMenu.confirmationModal.title\")}\n\t\t\t\topen={confirmationOpen}\n\t\t\t\tonClose={setConfirmationOpen}\n\t\t\t\tonConfirm={handleDeleteMessage}\n\t\t\t>\n\t\t\t\t{i18n.t(\"messageOptionsMenu.confirmationModal.message\")}\n\t\t\t</ConfirmationModal>\n\t\t\t<Menu\n\t\t\t\tanchorEl={anchorEl}\n\t\t\t\tgetContentAnchorEl={null}\n\t\t\t\tanchorOrigin={{\n\t\t\t\t\tvertical: \"bottom\",\n\t\t\t\t\thorizontal: \"right\",\n\t\t\t\t}}\n\t\t\t\ttransformOrigin={{\n\t\t\t\t\tvertical: \"top\",\n\t\t\t\t\thorizontal: \"right\",\n\t\t\t\t}}\n\t\t\t\topen={menuOpen}\n\t\t\t\tonClose={handleClose}\n\t\t\t>\n\t\t\t\t{message.fromMe && (\n\t\t\t\t\t<MenuItem onClick={handleOpenConfirmationModal}>\n\t\t\t\t\t\t{i18n.t(\"messageOptionsMenu.delete\")}\n\t\t\t\t\t</MenuItem>\n\t\t\t\t)}\n\t\t\t\t<MenuItem onClick={hanldeReplyMessage}>\n\t\t\t\t\t{i18n.t(\"messageOptionsMenu.reply\")}\n\t\t\t\t</MenuItem>\n\t\t\t</Menu>\n\t\t</>\n\t);\n};\n\nexport default MessageOptionsMenu;\n","import React, { useState, useEffect, useReducer, useRef, useContext } from \"react\";\n\nimport { isSameDay, parseISO, format } from \"date-fns\";\nimport clsx from \"clsx\";\n\nimport { green } from \"@material-ui/core/colors\";\nimport {\n  Button,\n  CircularProgress,\n  Divider,\n  IconButton,\n  makeStyles,\n} from \"@material-ui/core\";\n\nimport {\n  AccessTime,\n  Block,\n  Done,\n  DoneAll,\n  ExpandMore,\n  GetApp,\n  Facebook,\n  Instagram,\n} from \"@material-ui/icons\";\nimport VcardPreview from \"../VcardPreview\";\n\nimport MarkdownWrapper from \"../MarkdownWrapper\";\nimport ModalImageCors from \"../ModalImageCors\";\nimport MessageOptionsMenu from \"../MessageOptionsMenu\";\nimport whatsBackground from \"../../assets/wa-background.png\";\nimport whatsBackgroundDark from \"../../assets/wa-background-dark.png\";\n\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\nimport { socketConnection } from \"../../services/socket\";\nimport { ReplyMessageContext } from \"../../context/ReplyingMessage/ReplyingMessageContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  messagesListWrapper: {\n    overflow: \"hidden\",\n    position: \"relative\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    width: \"100%\",\n    minWidth: 300,\n    minHeight: 200,\n  },\n\n  messagesList: {\n    backgroundImage: theme.mode === 'light' ? `url(${whatsBackground})` : `url(${whatsBackgroundDark})`,\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    padding: \"20px 20px 20px 20px\",\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n\n  circleLoading: {\n    color: green[500],\n    position: \"absolute\",\n    opacity: \"70%\",\n    top: 0,\n    left: \"50%\",\n    marginTop: 12,\n  },\n\n  messageLeft: {\n    marginRight: 20,\n    marginTop: 2,\n    minWidth: 100,\n    maxWidth: 600,\n    height: \"auto\",\n    display: \"block\",\n    position: \"relative\",\n    \"&:hover #messageActionsButton\": {\n      display: \"flex\",\n      position: \"absolute\",\n      top: 0,\n      right: 0,\n    },\n\n    whiteSpace: \"pre-wrap\",\n    backgroundColor: \"#ffffff\",\n    color: \"#303030\",\n    alignSelf: \"flex-start\",\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 8,\n    borderBottomLeftRadius: 8,\n    borderBottomRightRadius: 8,\n    paddingLeft: 5,\n    paddingRight: 5,\n    paddingTop: 5,\n    paddingBottom: 0,\n    boxShadow: \"0 1px 1px #b3b3b3\",\n  },\n\n  quotedContainerLeft: {\n    margin: \"-3px -80px 6px -6px\",\n    overflow: \"hidden\",\n    backgroundColor: \"#f0f0f0\",\n    borderRadius: \"7.5px\",\n    display: \"flex\",\n    position: \"relative\",\n  },\n\n  quotedMsg: {\n    padding: 10,\n    maxWidth: 300,\n    height: \"auto\",\n    display: \"block\",\n    whiteSpace: \"pre-wrap\",\n    overflow: \"hidden\",\n  },\n\n  quotedSideColorLeft: {\n    flex: \"none\",\n    width: \"4px\",\n    backgroundColor: \"#6bcbef\",\n  },\n\n  messageRight: {\n    marginLeft: 20,\n    marginTop: 2,\n    minWidth: 100,\n    maxWidth: 600,\n    height: \"auto\",\n    display: \"block\",\n    position: \"relative\",\n    \"&:hover #messageActionsButton\": {\n      display: \"flex\",\n      position: \"absolute\",\n      top: 0,\n      right: 0,\n    },\n\n    whiteSpace: \"pre-wrap\",\n    backgroundColor: \"#dcf8c6\",\n    color: \"#303030\",\n    alignSelf: \"flex-end\",\n    borderTopLeftRadius: 8,\n    borderTopRightRadius: 8,\n    borderBottomLeftRadius: 8,\n    borderBottomRightRadius: 0,\n    paddingLeft: 5,\n    paddingRight: 5,\n    paddingTop: 5,\n    paddingBottom: 0,\n    boxShadow: \"0 1px 1px #b3b3b3\",\n  },\n\n  quotedContainerRight: {\n    margin: \"-3px -80px 6px -6px\",\n    overflowY: \"hidden\",\n    backgroundColor: \"#cfe9ba\",\n    borderRadius: \"7.5px\",\n    display: \"flex\",\n    position: \"relative\",\n  },\n\n  quotedMsgRight: {\n    padding: 10,\n    maxWidth: 300,\n    height: \"auto\",\n    whiteSpace: \"pre-wrap\",\n  },\n\n  quotedSideColorRight: {\n    flex: \"none\",\n    width: \"4px\",\n    backgroundColor: \"#35cd96\",\n  },\n\n  messageActionsButton: {\n    display: \"none\",\n    position: \"relative\",\n    color: \"#999\",\n    zIndex: 1,\n    backgroundColor: \"inherit\",\n    opacity: \"90%\",\n    \"&:hover, &.Mui-focusVisible\": { backgroundColor: \"inherit\" },\n  },\n\n  messageContactName: {\n    display: \"flex\",\n    color: \"#6bcbef\",\n    fontWeight: 500,\n  },\n\n  textContentItem: {\n    overflowWrap: \"break-word\",\n    padding: \"3px 80px 6px 6px\",\n  },\n\n  textContentItemDeleted: {\n    fontStyle: \"italic\",\n    color: \"rgba(0, 0, 0, 0.36)\",\n    overflowWrap: \"break-word\",\n    padding: \"3px 80px 6px 6px\",\n  },\n\n  messageMedia: {\n    objectFit: \"cover\",\n    width: 250,\n    height: 200,\n    borderTopLeftRadius: 8,\n    borderTopRightRadius: 8,\n    borderBottomLeftRadius: 8,\n    borderBottomRightRadius: 8,\n  },\n\n  timestamp: {\n    fontSize: 11,\n    position: \"absolute\",\n    bottom: 0,\n    right: 5,\n    color: \"#999\",\n  },\n\n  dailyTimestamp: {\n    alignItems: \"center\",\n    textAlign: \"center\",\n    alignSelf: \"center\",\n    width: \"110px\",\n    backgroundColor: \"#e1f3fb\",\n    margin: \"10px\",\n    borderRadius: \"10px\",\n    boxShadow: \"0 1px 1px #b3b3b3\",\n  },\n\n  dailyTimestampText: {\n    color: \"#808888\",\n    padding: 8,\n    alignSelf: \"center\",\n    marginLeft: \"0px\",\n  },\n\n  ackIcons: {\n    fontSize: 18,\n    verticalAlign: \"middle\",\n    marginLeft: 4,\n  },\n\n  deletedIcon: {\n    fontSize: 18,\n    verticalAlign: \"middle\",\n    marginRight: 4,\n  },\n\n  ackDoneAllIcon: {\n    color: green[500],\n    fontSize: 18,\n    verticalAlign: \"middle\",\n    marginLeft: 4,\n  },\n\n  downloadMedia: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"inherit\",\n    padding: 10,\n  },\n}));\n\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_MESSAGES\") {\n    const messages = action.payload;\n    const newMessages = [];\n\n    messages.forEach((message) => {\n      const messageIndex = state.findIndex((m) => m.id === message.id);\n      if (messageIndex !== -1) {\n        state[messageIndex] = message;\n      } else {\n        newMessages.push(message);\n      }\n    });\n\n    return [...newMessages, ...state];\n  }\n\n  if (action.type === \"ADD_MESSAGE\") {\n    const newMessage = action.payload;\n    const messageIndex = state.findIndex((m) => m.id === newMessage.id);\n\n    if (messageIndex !== -1) {\n      state[messageIndex] = newMessage;\n    } else {\n      state.push(newMessage);\n    }\n\n    return [...state];\n  }\n\n  if (action.type === \"UPDATE_MESSAGE\") {\n    const messageToUpdate = action.payload;\n    const messageIndex = state.findIndex((m) => m.id === messageToUpdate.id);\n\n    if (messageIndex !== -1) {\n      state[messageIndex] = messageToUpdate;\n    }\n\n    return [...state];\n  }\n\n  if (action.type === \"RESET\") {\n    return [];\n  }\n};\n\nconst MessagesList = ({ ticket, ticketId, isGroup }) => {\n  const classes = useStyles();\n\n  const { setMedias } = useContext(ReplyMessageContext);\n\n  const [messagesList, dispatch] = useReducer(reducer, []);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [hasMore, setHasMore] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const lastMessageRef = useRef();\n\n  const [selectedMessage, setSelectedMessage] = useState({});\n  const [anchorEl, setAnchorEl] = useState(null);\n  const messageOptionsMenuOpen = Boolean(anchorEl);\n  const currentTicketId = useRef(ticketId);\n\n  const isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n\n  useEffect(() => {\n    dispatch({ type: \"RESET\" });\n    setPageNumber(1);\n\n    currentTicketId.current = ticketId;\n  }, [ticketId]);\n\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      const fetchMessages = async () => {\n        if (ticketId === undefined) return;\n        try {\n          const { data } = await api.get(\"/messages/\" + ticketId, {\n            params: { pageNumber },\n          });\n\n          if (currentTicketId.current === ticketId) {\n            dispatch({ type: \"LOAD_MESSAGES\", payload: data.messages });\n            setHasMore(data.hasMore);\n            setLoading(false);\n          }\n\n          if (pageNumber === 1 && data.messages.length > 1) {\n            scrollToBottom();\n          }\n        } catch (err) {\n          setLoading(false);\n          toastError(err);\n        }\n      };\n      fetchMessages();\n    }, 500);\n    return () => {\n      clearTimeout(delayDebounceFn);\n    };\n  }, [pageNumber, ticketId]);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketConnection({ companyId });\n\n    socket.on(\"connect\", () => socket.emit(\"joinChatBox\", `${ticket.id}`));\n\n    socket.on(`company-${companyId}-appMessage`, (data) => {\n      if (data.action === \"create\") {\n        dispatch({ type: \"ADD_MESSAGE\", payload: data.message });\n        scrollToBottom();\n      }\n\n      if (data.action === \"update\") {\n        dispatch({ type: \"UPDATE_MESSAGE\", payload: data.message });\n      }\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, [ticketId, ticket]);\n\n  const loadMore = () => {\n    setPageNumber((prevPageNumber) => prevPageNumber + 1);\n  };\n\n  const scrollToBottom = () => {\n    if (lastMessageRef.current) {\n      lastMessageRef.current.scrollIntoView({});\n    }\n  };\n\n  const handleScroll = (e) => {\n    if (!hasMore) return;\n    const { scrollTop } = e.currentTarget;\n\n    if (scrollTop === 0) {\n      document.getElementById(\"messagesList\").scrollTop = 1;\n    }\n\n    if (loading) {\n      return;\n    }\n\n    if (scrollTop < 50) {\n      loadMore();\n    }\n  };\n\n  const handleOpenMessageOptionsMenu = (e, message) => {\n    setAnchorEl(e.currentTarget);\n    setSelectedMessage(message);\n  };\n\n  const handleCloseMessageOptionsMenu = (e) => {\n    setAnchorEl(null);\n  };\n\n  const extrairNomeENumero = (vcard) => {\n    const nomeMatch = vcard.match(/FN:(.*?)\\n/);\n    const nome = nomeMatch ? nomeMatch[1] : '';\n\n    const numeroMatch = vcard.match(/waid=(\\d+)/);\n    const numero = numeroMatch ? numeroMatch[1].replace(/\\D/g, '') : '';\n    if (nome && numero) {\n      return { nome, numero };\n    } else {\n      return null;\n    }\n  }\n\n  const checkMessageMedia = (message) => {\n\n    if (message.mediaType === \"image\") {\n      return <ModalImageCors imageUrl={message.mediaUrl} />;\n    }\n\n    if (message.mediaType === \"contactMessage\") {\n\n      const vcardPreviewInfo = extrairNomeENumero(message.body)\n\n      return <VcardPreview key={message.id} contact={vcardPreviewInfo?.nome} number={vcardPreviewInfo?.numero} />\n    }\n\n    if (message.mediaType === \"contactsArrayMessage\") {\n\n      const contactsArray = JSON.parse(message.body);\n\n      return contactsArray.map((contact, index) => {\n\n        const vcardPreviewInfo = extrairNomeENumero(contact)\n\n\n        return <VcardPreview key={index} contact={vcardPreviewInfo?.nome} number={vcardPreviewInfo?.numero} />\n      })\n\n    }\n\n    if (message.mediaType === \"audio\") {\n      // return (\n      //   <audio controls>\n      //     <source src={message.mediaUrl} type=\"audio/mp3\"></source>\n      //   </audio>\n      // );\n\n      if (isIOS) {\n        message.mediaUrl = message.mediaUrl.replace(\"ogg\", \"mp3\");\n\n        return (\n          <audio controls>\n            <source src={message.mediaUrl} type=\"audio/mp3\"></source>\n          </audio>\n        );\n      } else {\n        return (\n          <audio controls>\n            <source src={message.mediaUrl} type=\"audio/ogg\"></source>\n          </audio>\n        );\n      }\n    }\n\n    if (message.mediaType === \"video\") {\n      return (\n        <video\n          className={classes.messageMedia}\n          src={message.mediaUrl}\n          controls\n        />\n      );\n    } else {\n      return (\n        <>\n          <div className={classes.downloadMedia}>\n            <Button\n              startIcon={<GetApp />}\n              color=\"primary\"\n              variant=\"outlined\"\n              target=\"_blank\"\n              href={message.mediaUrl}\n            >\n              Download\n            </Button>\n          </div>\n          <Divider />\n        </>\n      );\n    }\n  };\n\n  const renderMessageAck = (message) => {\n    if (message.ack === 0) {\n      return <AccessTime fontSize=\"small\" className={classes.ackIcons} />;\n    }\n    if (message.ack === 1) {\n      return <Done fontSize=\"small\" className={classes.ackIcons} />;\n    }\n    if (message.ack === 2) {\n      return <DoneAll fontSize=\"small\" className={classes.ackIcons} />;\n    }\n    if (message.ack === 3 || message.ack === 4) {\n      return <DoneAll fontSize=\"small\" className={classes.ackDoneAllIcon} />;\n    }\n  };\n\n  const renderDailyTimestamps = (message, index) => {\n    if (index === 0) {\n      return (\n        <span\n          className={classes.dailyTimestamp}\n          key={`timestamp-${message.id}`}\n        >\n          <div className={classes.dailyTimestampText}>\n            {format(parseISO(messagesList[index].createdAt), \"dd/MM/yyyy\")}\n          </div>\n        </span>\n      );\n    }\n    if (index < messagesList.length - 1) {\n      let messageDay = parseISO(messagesList[index].createdAt);\n      let previousMessageDay = parseISO(messagesList[index - 1].createdAt);\n\n      if (!isSameDay(messageDay, previousMessageDay)) {\n        return (\n          <span\n            className={classes.dailyTimestamp}\n            key={`timestamp-${message.id}`}\n          >\n            <div className={classes.dailyTimestampText}>\n              {format(parseISO(messagesList[index].createdAt), \"dd/MM/yyyy\")}\n            </div>\n          </span>\n        );\n      }\n    }\n    if (index === messagesList.length - 1) {\n      return (\n        <div\n          key={`ref-${message.createdAt}`}\n          ref={lastMessageRef}\n          style={{ float: \"left\", clear: \"both\" }}\n        />\n      );\n    }\n  };\n\n  const renderMessageDivider = (message, index) => {\n    if (index < messagesList.length && index > 0) {\n      let messageUser = messagesList[index].fromMe;\n      let previousMessageUser = messagesList[index - 1].fromMe;\n\n      if (messageUser !== previousMessageUser) {\n        return (\n          <span style={{ marginTop: 16 }} key={`divider-${message.id}`}></span>\n        );\n      }\n    }\n  };\n\n  const renderQuotedMessage = (message) => {\n    return (\n      <div\n        className={clsx(classes.quotedContainerLeft, {\n          [classes.quotedContainerRight]: message.fromMe,\n        })}\n      >\n        <span\n          className={clsx(classes.quotedSideColorLeft, {\n            [classes.quotedSideColorRight]: message.quotedMsg?.fromMe,\n          })}\n        ></span>\n        <div className={classes.quotedMsg}>\n          {!message.quotedMsg?.fromMe && (\n            <span className={classes.messageContactName}>\n              {message.quotedMsg?.contact?.name}\n            </span>\n          )}\n          {message.quotedMsg?.body}\n        </div>\n      </div>\n    );\n  };\n\n  const renderMessages = () => {\n    if (messagesList.length > 0) {\n      const viewMessagesList = messagesList.map((message, index) => {\n        if (!message.fromMe) {\n          return (\n            <React.Fragment key={message.id}>\n              {renderDailyTimestamps(message, index)}\n              {renderMessageDivider(message, index)}\n              <div\n                className={classes.messageLeft}\n                title={message.queueId && message.queue?.name}\n              >\n                <IconButton\n                  variant=\"contained\"\n                  size=\"small\"\n                  id=\"messageActionsButton\"\n                  disabled={message.isDeleted}\n                  className={classes.messageActionsButton}\n                  onClick={(e) => handleOpenMessageOptionsMenu(e, message)}\n                >\n                  <ExpandMore />\n                </IconButton>\n                {isGroup && (\n                  <span className={classes.messageContactName}>\n                    {message.contact?.name}\n                  </span>\n                )}\n                {(message.mediaUrl || message.mediaType === 'contactMessage' || message.mediaType === 'contactsArrayMessage') && checkMessageMedia(message)}\n\n                {/* {message.mediaUrl && checkMessageMedia(message)} */}\n                <div className={classes.textContentItem}>\n                  {message.quotedMsg && renderQuotedMessage(message)}\n                  <MarkdownWrapper>{(message.mediaType === 'contactMessage' || message.mediaType === 'contactsArrayMessage') ? ' ' : message.body}</MarkdownWrapper>\n                  {/* <MarkdownWrapper>{message.body}</MarkdownWrapper> */}\n                  <span className={classes.timestamp}>\n                    {format(parseISO(message.createdAt), \"HH:mm\")}\n                  </span>\n                </div>\n              </div>\n            </React.Fragment>\n          );\n        } else {\n          return (\n            <React.Fragment key={message.id}>\n              {renderDailyTimestamps(message, index)}\n              {renderMessageDivider(message, index)}\n              <div\n                className={classes.messageRight}\n                title={message.queueId && message.queue?.name}\n              >\n                <IconButton\n                  variant=\"contained\"\n                  size=\"small\"\n                  id=\"messageActionsButton\"\n                  disabled={message.isDeleted}\n                  className={classes.messageActionsButton}\n                  onClick={(e) => handleOpenMessageOptionsMenu(e, message)}\n                >\n                  <ExpandMore />\n                </IconButton>\n                {(message.mediaUrl || message.mediaType === 'contactMessage' || message.mediaType === 'contactsArrayMessage') && checkMessageMedia(message)}\n\n                {/* {message.mediaUrl && checkMessageMedia(message)} */}\n                <div\n                  className={clsx(classes.textContentItem, {\n                    [classes.textContentItemDeleted]: message.isDeleted,\n                  })}\n                >\n                  {message.isDeleted && (\n                    <Block\n                      color=\"disabled\"\n                      fontSize=\"small\"\n                      className={classes.deletedIcon}\n                    />\n                  )}\n                  {message.quotedMsg && renderQuotedMessage(message)}\n                  <MarkdownWrapper>{(message.mediaType === 'contactMessage' || message.mediaType === 'contactsArrayMessage') ? ' ' : message.body}</MarkdownWrapper>\n                  {/* <MarkdownWrapper>{message.body}</MarkdownWrapper> */}\n                  <span className={classes.timestamp}>\n                    {format(parseISO(message.createdAt), \"HH:mm\")}\n                    {renderMessageAck(message)}\n                  </span>\n                </div>\n              </div>\n            </React.Fragment>\n          );\n        }\n      });\n      return viewMessagesList;\n    } else {\n      return <div>Say hello to your new contact!</div>;\n    }\n  };\n\n  const handleDrop = (event) => {\n    event.preventDefault();\n\n    const droppedFiles = Array.from(event.dataTransfer.files);\n    setMedias(droppedFiles);\n    event.dataTransfer.clearData();\n  };\n\n  const handleDragOver = (event) => {\n    event.preventDefault();\n\n    event.dataTransfer.dropEffect = 'copy';\n  };\n\n  const handleInputPaste = (e) => {\n\n    if (e.clipboardData.files[0]) {\n      setMedias([e.clipboardData.files[0]]);\n    }\n  };\n\n  return (\n    <div className={classes.messagesListWrapper}>\n      <MessageOptionsMenu\n        message={selectedMessage}\n        anchorEl={anchorEl}\n        menuOpen={messageOptionsMenuOpen}\n        handleClose={handleCloseMessageOptionsMenu}\n      />\n      <div\n        id=\"messagesList\"\n        className={classes.messagesList}\n        onScroll={handleScroll}\n        onDrop={handleDrop}\n        onDragOver={handleDragOver}\n        onPaste={handleInputPaste}\n      >\n        {messagesList.length > 0 ? renderMessages() : []}\n      </div>\n\n      {loading && (\n        <div>\n          <CircularProgress className={classes.circleLoading} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MessagesList;","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Avatar, Card, CardHeader } from \"@material-ui/core\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\n\nconst useStyles = makeStyles(theme => ({\n\tticketHeader: {\n\t\tdisplay: \"flex\",\n\t\tbackground: theme.palette.total,\n\t\tflex: \"none\",\n\t\tborderBottom: \"1px solid rgba(0, 0, 0, 0.12)\",\n\t},\n}));\n\nconst TicketHeaderSkeleton = () => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Card square className={classes.ticketHeader}>\n\t\t\t<CardHeader\n\t\t\t\ttitleTypographyProps={{ noWrap: true }}\n\t\t\t\tsubheaderTypographyProps={{ noWrap: true }}\n\t\t\t\tavatar={\n\t\t\t\t\t<Skeleton animation=\"wave\" variant=\"circle\">\n\t\t\t\t\t\t<Avatar alt=\"contact_image\" />\n\t\t\t\t\t</Skeleton>\n\t\t\t\t}\n\t\t\t\ttitle={<Skeleton animation=\"wave\" width={80} />}\n\t\t\t\tsubheader={<Skeleton animation=\"wave\" width={140} />}\n\t\t\t/>\n\t\t</Card>\n\t);\n};\n\nexport default TicketHeaderSkeleton;\n","import React from \"react\";\n\nimport { Card } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TicketHeaderSkeleton from \"../TicketHeaderSkeleton\";\n\nconst useStyles = makeStyles(theme => ({\n\tticketHeader: {\n\t\tdisplay: \"flex\",\n\t\tbackground: theme.palette.total,\n\t\tflex: \"none\",\n\t\tborderBottom: \"1px solid rgba(0, 0, 0, 0.12)\",\n\t},\n}));\n\nconst TicketHeader = ({ loading, children }) => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<>\n\t\t\t{loading ? (\n\t\t\t\t<TicketHeaderSkeleton />\n\t\t\t) : (\n\t\t\t\t<Card square className={classes.ticketHeader}>\n\t\t\t\t\t{children}\n\t\t\t\t</Card>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default TicketHeader;\n","import React, { useState, useEffect } from \"react\";\n\nimport { Avatar, CardHeader } from \"@material-ui/core\";\n\nimport { i18n } from \"../../translate/i18n\";\n\nconst TicketInfo = ({ contact, ticket, onClick }) => {\n\tconst { user } = ticket\n\tconst [userName, setUserName] = useState('')\n\tconst [contactName, setContactName] = useState('')\n\n\tuseEffect(() => {\n\t\tif (contact) {\n\t\t\tsetContactName(contact.name);\n\t\t\tif(document.body.offsetWidth < 600) {\n\t\t\t\tif (contact.name.length > 10) {\n\t\t\t\t\tconst truncadName = contact.name.substring(0, 10) + '...';\n\t\t\t\t\tsetContactName(truncadName);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (user && contact) {\n\t\t\tsetUserName(`${i18n.t(\"messagesList.header.assignedTo\")} ${user.name}`);\n\n\t\t\tif(document.body.offsetWidth < 600) {\n\t\t\t\tsetUserName(`${user.name}`);\n\t\t\t}\n\t\t}\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [])\n\n\treturn (\n\t\t<CardHeader\n\t\t\tonClick={onClick}\n\t\t\tstyle={{ cursor: \"pointer\" }}\n\t\t\ttitleTypographyProps={{ noWrap: true }}\n\t\t\tsubheaderTypographyProps={{ noWrap: true }}\n\t\t\tavatar={<Avatar src={contact.profilePicUrl} alt=\"contact_image\" />}\n\t\t\ttitle={`${contactName} #${ticket.id}`}\n\t\t\tsubheader={ticket.user && `${userName}`}\n\t\t/>\n\t);\n};\n\nexport default TicketInfo;\n","import React, { useContext, useEffect, useState } from \"react\";\n\nimport { toast } from \"react-toastify\";\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\n\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport MessagesList from \"../MessagesList\";\nimport { ReplyMessageProvider } from \"../../context/ReplyingMessage/ReplyingMessageContext\";\nimport TicketHeader from \"../TicketHeader\";\nimport TicketInfo from \"../TicketInfo\";\nimport { socketConnection } from \"../../services/socket\";\n\nconst drawerWidth = 320;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    height: \"100%\",\n    position: \"relative\",\n    overflow: \"hidden\",\n  },\n\n  mainWrapper: {\n    flex: 1,\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    overflow: \"hidden\",\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0,\n    borderLeft: \"0\",\n    marginRight: -drawerWidth,\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n\n  mainWrapperShift: {\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginRight: 0,\n  },\n}));\n\nexport default function TicketMessagesDialog({ open, handleClose, ticketId }) {\n  const history = useHistory();\n  const classes = useStyles();\n\n  const { user } = useContext(AuthContext);\n\n  const [, setDrawerOpen] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [contact, setContact] = useState({});\n  const [ticket, setTicket] = useState({});\n\n  useEffect(() => {\n    let delayDebounceFn = null;\n    if (open) {\n      setLoading(true);\n      delayDebounceFn = setTimeout(() => {\n        const fetchTicket = async () => {\n          try {\n            const { data } = await api.get(\"/tickets/\" + ticketId);\n            const { queueId } = data;\n            const { queues, profile } = user;\n\n            const queueAllowed = queues.find((q) => q.id === queueId);\n            if (queueAllowed === undefined && profile !== \"admin\") {\n              toast.error(\"Acesso não permitido\");\n              history.push(\"/tickets\");\n              return;\n            }\n\n            setContact(data.contact);\n            setTicket(data);\n            setLoading(false);\n          } catch (err) {\n            setLoading(false);\n            toastError(err);\n          }\n        };\n        fetchTicket();\n      }, 500);\n    }\n    return () => {\n      if (delayDebounceFn !== null) {\n        clearTimeout(delayDebounceFn);\n      }\n    };\n  }, [ticketId, user, history, open]);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    let socket = null;\n\n    if (open) {\n      socket = socketConnection({ companyId });\n      socket.on(\"connect\", () => socket.emit(\"joinChatBox\", `${ticket.id}`));\n\n      socket.on(`company-${companyId}-ticket`, (data) => {\n        if (data.action === \"update\") {\n          setTicket(data.ticket);\n        }\n\n        if (data.action === \"delete\") {\n          toast.success(\"Ticket deleted sucessfully.\");\n          history.push(\"/tickets\");\n        }\n      });\n\n      socket.on(`company-${companyId}-contact`, (data) => {\n        if (data.action === \"update\") {\n          setContact((prevState) => {\n            if (prevState.id === data.contact?.id) {\n              return { ...prevState, ...data.contact };\n            }\n            return prevState;\n          });\n        }\n      });\n    }\n\n    return () => {\n      if (socket !== null) {\n        socket.disconnect();\n      }\n    };\n  }, [ticketId, ticket, history, open]);\n\n  const handleDrawerOpen = () => {\n    setDrawerOpen(true);\n  };\n\n  const renderTicketInfo = () => {\n    if (ticket.user !== undefined) {\n      return (\n        <TicketInfo\n          contact={contact}\n          ticket={ticket}\n          onClick={handleDrawerOpen}\n        />\n      );\n    }\n  };\n\n  const renderMessagesList = () => {\n    return (\n      <Box className={classes.root}>\n        <MessagesList\n          ticket={ticket}\n          ticketId={ticket.id}\n          isGroup={ticket.isGroup}\n        ></MessagesList>\n      </Box>\n    );\n  };\n\n  return (\n    <Dialog maxWidth=\"md\" onClose={handleClose} open={open}>\n      <TicketHeader loading={loading}>{renderTicketInfo()}</TicketHeader>\n      <ReplyMessageProvider>{renderMessagesList()}</ReplyMessageProvider>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Fechar\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","function getRGB(c) {\n  return parseInt(c, 16) || c\n}\n\nfunction getsRGB(c) {\n  return getRGB(c) / 255 <= 0.03928\n    ? getRGB(c) / 255 / 12.92\n    : Math.pow((getRGB(c) / 255 + 0.055) / 1.055, 2.4)\n}\n\nfunction getLuminance(hexColor) {\n  return (\n    0.2126 * getsRGB(hexColor.substr(1, 2)) +\n    0.7152 * getsRGB(hexColor.substr(3, 2)) +\n    0.0722 * getsRGB(hexColor.substr(-2))\n  )\n}\n\nfunction getContrast(f, b) {\n  const L1 = getLuminance(f)\n  const L2 = getLuminance(b)\n  return (Math.max(L1, L2) + 0.05) / (Math.min(L1, L2) + 0.05)\n}\n\nfunction getTextColor(bgColor) {\n  const whiteContrast = getContrast(bgColor, '#ffffff')\n  const blackContrast = getContrast(bgColor, '#000000')\n\n  return whiteContrast > blackContrast ? '#ffffff' : '#000000'\n}\n\nconst contrastColor = (color) => {\n    return getTextColor(color);\n}\n\nexport default contrastColor;","import { makeStyles } from \"@material-ui/styles\";\nimport React from \"react\";\n\nconst useStyles = makeStyles(theme => ({\n    tag: {\n        padding: \"1px 5px\",\n        borderRadius: \"3px\",\n        fontSize: \"0.8em\",\n        fontWeight: \"bold\",\n        color: \"#FFF\",\n        marginRight: \"5px\",\n        whiteSpace: \"nowrap\"\n    }\n}));\n\nconst ContactTag = ({ tag }) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.tag} style={{ backgroundColor: tag.color, marginTop: \"2px\" }}>\n            {tag.name.toUpperCase()}\n        </div>\n    )\n}\n\nexport default ContactTag;","import React, { useState, useEffect, useRef, useContext } from \"react\";\n\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { parseISO, format, isSameDay } from \"date-fns\";\nimport clsx from \"clsx\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green, grey, red, blue } from \"@material-ui/core/colors\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Box from \"@material-ui/core/Box\";\n\nimport { i18n } from \"../../translate/i18n\";\n\nimport api from \"../../services/api\";\nimport ButtonWithSpinner from \"../ButtonWithSpinner\";\nimport MarkdownWrapper from \"../MarkdownWrapper\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { TicketsContext } from \"../../context/Tickets/TicketsContext\";\nimport toastError from \"../../errors/toastError\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport RoomIcon from '@material-ui/icons/Room';\nimport WhatsAppIcon from \"@material-ui/icons/WhatsApp\";\nimport AndroidIcon from \"@material-ui/icons/Android\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport TicketMessagesDialog from \"../TicketMessagesDialog\";\nimport DoneIcon from '@material-ui/icons/Done';\nimport ClearOutlinedIcon from '@material-ui/icons/ClearOutlined';\nimport contrastColor from \"../../helpers/contrastColor\";\nimport ContactTag from \"../ContactTag\";\n\nconst useStyles = makeStyles((theme) => ({\n  ticket: {\n    position: \"relative\",\n  },\n\n  pendingTicket: {\n    cursor: \"unset\",\n  },\n  queueTag: {\n    background: \"#FCFCFC\",\n    color: \"#000\",\n    marginRight: 1,\n    padding: 1,\n    fontWeight: 'bold',\n    paddingLeft: 5,\n    paddingRight: 5,\n    borderRadius: 3,\n    fontSize: \"0.8em\",\n    whiteSpace: \"nowrap\"\n  },\n  noTicketsDiv: {\n    display: \"flex\",\n    height: \"100px\",\n    margin: 40,\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  newMessagesCount: {\n    position: \"absolute\",\n    alignSelf: \"center\",\n    marginRight: 8,\n    marginLeft: \"auto\",\n    top: \"10px\",\n    left: \"20px\",\n    borderRadius: 0,\n  },\n  noTicketsText: {\n    textAlign: \"center\",\n    color: \"rgb(104, 121, 146)\",\n    fontSize: \"14px\",\n    lineHeight: \"1.4\",\n  },\n  connectionTag: {\n    background: \"green\",\n    color: \"#FFF\",\n    marginRight: 1,\n    padding: 1,\n    fontWeight: 'bold',\n    paddingLeft: 5,\n    paddingRight: 5,\n    borderRadius: 3,\n    fontSize: \"0.8em\",\n    whiteSpace: \"nowrap\"\n  },\n  noTicketsTitle: {\n    textAlign: \"center\",\n    fontSize: \"16px\",\n    fontWeight: \"600\",\n    margin: \"0px\",\n  },\n\n  contactNameWrapper: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginLeft: \"5px\",\n  },\n\n  lastMessageTime: {\n    justifySelf: \"flex-end\",\n    textAlign: \"right\",\n    position: \"relative\",\n    top: -21\n  },\n\n  closedBadge: {\n    alignSelf: \"center\",\n    justifySelf: \"flex-end\",\n    marginRight: 32,\n    marginLeft: \"auto\",\n  },\n\n  contactLastMessage: {\n    paddingRight: \"0%\",\n    marginLeft: \"5px\",\n  },\n\n\n  badgeStyle: {\n    color: \"white\",\n    backgroundColor: green[500],\n  },\n\n  acceptButton: {\n    position: \"absolute\",\n    right: \"108px\",\n  },\n\n\n  acceptButton: {\n    position: \"absolute\",\n    left: \"50%\",\n  },\n\n\n  ticketQueueColor: {\n    flex: \"none\",\n    width: \"8px\",\n    height: \"100%\",\n    position: \"absolute\",\n    top: \"0%\",\n    left: \"0%\",\n  },\n\n  ticketInfo: {\n    position: \"relative\",\n    top: -13\n  },\n  secondaryContentSecond: {\n    display: 'flex',\n    // marginTop: 5,\n    //marginLeft: \"5px\",\n    alignItems: \"flex-start\",\n    flexWrap: \"wrap\",\n    flexDirection: \"row\",\n    alignContent: \"flex-start\",\n  },\n  ticketInfo1: {\n    position: \"relative\",\n    top: 13,\n    right: 0\n  },\n  Radiusdot: {\n    \"& .MuiBadge-badge\": {\n      borderRadius: 2,\n      position: \"inherit\",\n      height: 16,\n      margin: 2,\n      padding: 3\n    },\n    \"& .MuiBadge-anchorOriginTopRightRectangle\": {\n      transform: \"scale(1) translate(0%, -40%)\",\n    },\n\n  }\n}));\n\nconst TicketListItemCustom = ({ ticket }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const [ticketUser, setTicketUser] = useState(null);\n  const [ticketQueueName, setTicketQueueName] = useState(null);\n  const [ticketQueueColor, setTicketQueueColor] = useState(null);\n  // const [tag, setTag] = useState([]);\n  const [whatsAppName, setWhatsAppName] = useState(null);\n\n  const [openTicketMessageDialog, setOpenTicketMessageDialog] = useState(false);\n  const { ticketId } = useParams();\n  const isMounted = useRef(true);\n  const { setCurrentTicket } = useContext(TicketsContext);\n  const { user } = useContext(AuthContext);\n  const { profile } = user;\n\n  useEffect(() => {\n    if (ticket.userId && ticket.user) {\n      setTicketUser(ticket.user?.name?.toUpperCase());\n    }\n    setTicketQueueName(ticket.queue?.name?.toUpperCase());\n    setTicketQueueColor(ticket.queue?.color);\n\n    if (ticket.whatsappId && ticket.whatsapp) {\n      setWhatsAppName(ticket.whatsapp.name?.toUpperCase());\n    }\n\n    // setTag(ticket?.tags);\n\n    return () => {\n      isMounted.current = false;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleCloseTicket = async (id) => {\n    // setTag(ticket?.tags);\n    setLoading(true);\n    try {\n      await api.put(`/tickets/${id}`, {\n        status: \"closed\",\n        userId: user?.id,\n        queueId: ticket?.queue?.id\n      });\n    } catch (err) {\n      setLoading(false);\n      toastError(err);\n    }\n    if (isMounted.current) {\n      setLoading(false);\n    }\n    history.push(`/tickets/`);\n  };\n\n  const handleReopenTicket = async (id) => {\n    setLoading(true);\n    try {\n      await api.put(`/tickets/${id}`, {\n        status: \"open\",\n        userId: user?.id,\n        queueId: ticket?.queue?.id\n      });\n    } catch (err) {\n      setLoading(false);\n      toastError(err);\n    }\n    if (isMounted.current) {\n      setLoading(false);\n    }\n    history.push(`/tickets/`);\n  };\n\n  const handleAcepptTicket = async (id) => {\n    setLoading(true);\n    try {\n      await api.put(`/tickets/${id}`, {\n        status: \"open\",\n        userId: user?.id,\n      });\n    } catch (err) {\n      setLoading(false);\n      toastError(err);\n    }\n    if (isMounted.current) {\n      setLoading(false);\n    }\n    history.push(`/tickets/${ticket.uuid}`);\n  };\n\n  const handleSelectTicket = (ticket) => {\n    const code = uuidv4();\n    const { id, uuid } = ticket;\n    setCurrentTicket({ id, uuid, code });\n  };\n\n\n  const renderTicketInfo = () => {\n    if (ticketUser) {\n\n      return (\n        <>\n          {ticket.chatbot && (\n            <Tooltip title=\"Chatbot\">\n              <AndroidIcon\n                fontSize=\"small\"\n                style={{ color: grey[700], marginRight: 5 }}\n              />\n            </Tooltip>\n          )}\n\n          {/* </span> */}\n        </>\n      );\n    } else {\n      return (\n        <>\n          {ticket.chatbot && (\n            <Tooltip title=\"Chatbot\">\n              <AndroidIcon\n                fontSize=\"small\"\n                style={{ color: grey[700], marginRight: 5 }}\n              />\n            </Tooltip>\n          )}\n        </>\n      );\n    }\n  };\n\n  return (\n    <React.Fragment key={ticket.id}>\n      <TicketMessagesDialog\n        open={openTicketMessageDialog}\n\n        handleClose={() => setOpenTicketMessageDialog(false)}\n        ticketId={ticket.id}\n      ></TicketMessagesDialog>\n      <ListItem dense button\n        onClick={(e) => {\n          if (ticket.status === \"pending\") return;\n          handleSelectTicket(ticket);\n        }}\n        selected={ticketId && +ticketId === ticket.id}\n        className={clsx(classes.ticket, {\n          [classes.pendingTicket]: ticket.status === \"pending\",\n        })}\n      >\n        <Tooltip arrow placement=\"right\" title={ticket.queue?.name?.toUpperCase() || \"SEM FILA\"} >\n          <span style={{ backgroundColor: ticket.queue?.color || \"#7C7C7C\" }} className={classes.ticketQueueColor}></span>\n        </Tooltip>\n        <ListItemAvatar>\n          {ticket.status !== \"pending\" ?\n            <Avatar\n              style={{\n                marginTop: \"-20px\",\n                marginLeft: \"-3px\",\n                width: \"55px\",\n                height: \"55px\",\n                borderRadius: \"10%\",\n              }}\n              src={ticket?.contact?.profilePicUrl}\n            />\n            :\n            <Avatar\n              style={{\n                marginTop: \"-30px\",\n                marginLeft: \"0px\",\n                width: \"50px\",\n                height: \"50px\",\n                borderRadius: \"10%\",\n              }}\n              src={ticket?.contact?.profilePicUrl}\n            />\n          }\n        </ListItemAvatar>\n        <ListItemText\n          disableTypography\n\n          primary={\n            <span className={classes.contactNameWrapper}>\n              <Typography\n                noWrap\n                component=\"span\"\n                variant=\"body2\"\n                color=\"textPrimary\"\n              >\n                {ticket.contact.name}\n                {profile === \"admin\" && (\n                  <Tooltip title=\"Espiar Conversa\">\n                    <VisibilityIcon\n                      onClick={() => setOpenTicketMessageDialog(true)}\n                      fontSize=\"small\"\n                      style={{\n                        color: blue[700],\n                        cursor: \"pointer\",\n                        marginLeft: 10,\n                        verticalAlign: \"middle\"\n                      }}\n                    />\n                  </Tooltip>\n                )}\n              </Typography>\n              <ListItemSecondaryAction>\n                <Box className={classes.ticketInfo1}>{renderTicketInfo()}</Box>\n              </ListItemSecondaryAction>\n            </span>\n\n          }\n          secondary={\n            <span className={classes.contactNameWrapper}>\n\n              <Typography\n                className={classes.contactLastMessage}\n                noWrap\n                component=\"span\"\n                variant=\"body2\"\n                color=\"textSecondary\"\n              > {ticket.lastMessage.includes('data:image/png;base64') ? <MarkdownWrapper> Localização</MarkdownWrapper> : <MarkdownWrapper>{ticket.lastMessage}</MarkdownWrapper>}\n                <span className={classes.secondaryContentSecond} >\n                  {ticket?.whatsapp?.name ? <Badge className={classes.connectionTag}>{ticket?.whatsapp?.name?.toUpperCase()}</Badge> : <br></br>}\n                  {ticketUser ? <Badge style={{ backgroundColor: \"#000000\" }} className={classes.connectionTag}>{ticketUser}</Badge> : <br></br>}\n                  <Badge style={{ backgroundColor: ticket.queue?.color || \"#7c7c7c\" }} className={classes.connectionTag}>{ticket.queue?.name?.toUpperCase() || \"SEM FILA\"}</Badge>\n                </span>\n                <span style={{ paddingTop: \"2px\" }} className={classes.secondaryContentSecond} >\n                  {ticket?.tags?.map((tag) => {\n                    return (\n                      <ContactTag tag={tag} key={`ticket-contact-tag-${ticket.id}-${tag.id}`} />\n                    );\n                  })}\n                </span>\n              </Typography>\n\n              <Badge\n                className={classes.newMessagesCount}\n                badgeContent={ticket.unreadMessages}\n                classes={{\n                  badge: classes.badgeStyle,\n                }}\n              />\n            </span>\n          }\n\n        />\n        <ListItemSecondaryAction>\n          {ticket.lastMessage && (\n            <>\n\n              <Typography\n                className={classes.lastMessageTime}\n                component=\"span\"\n                variant=\"body2\"\n                color=\"textSecondary\"\n              >\n\n                {isSameDay(parseISO(ticket.updatedAt), new Date()) ? (\n                  <>{format(parseISO(ticket.updatedAt), \"HH:mm\")}</>\n                ) : (\n                  <>{format(parseISO(ticket.updatedAt), \"dd/MM/yyyy\")}</>\n                )}\n              </Typography>\n\n              <br />\n\n            </>\n          )}\n\n        </ListItemSecondaryAction>\n        <span className={classes.secondaryContentSecond} >\n          {ticket.status === \"pending\" && (\n            <ButtonWithSpinner\n              //color=\"primary\"\n              style={{ backgroundColor: 'green', color: 'white', padding: '0px', bottom: '17px', borderRadius: '0px', left: '8px', fontSize: '0.6rem' }}\n              variant=\"contained\"\n              className={classes.acceptButton}\n              size=\"small\"\n              loading={loading}\n              onClick={e => handleAcepptTicket(ticket.id)}\n            >\n              {i18n.t(\"ticketsList.buttons.accept\")}\n            </ButtonWithSpinner>\n\n          )}\n          {(ticket.status !== \"closed\") && (\n            <ButtonWithSpinner\n              //color=\"primary\"\n              style={{ backgroundColor: 'red', color: 'white', padding: '0px', bottom: '0px', borderRadius: '0px', left: '8px', fontSize: '0.6rem' }}\n              variant=\"contained\"\n              className={classes.acceptButton}\n              size=\"small\"\n              loading={loading}\n              onClick={e => handleCloseTicket(ticket.id)}\n            >\n              {i18n.t(\"ticketsList.buttons.closed\")}\n            </ButtonWithSpinner>\n\n          )}\n          {(ticket.status === \"closed\") && (\n            <ButtonWithSpinner\n              //color=\"primary\"\n              style={{ backgroundColor: 'red', color: 'white', padding: '0px', bottom: '0px', borderRadius: '0px', left: '8px', fontSize: '0.6rem' }}\n              variant=\"contained\"\n              className={classes.acceptButton}\n              size=\"small\"\n              loading={loading}\n              onClick={e => handleReopenTicket(ticket.id)}\n            >\n              {i18n.t(\"ticketsList.buttons.reopen\")}\n            </ButtonWithSpinner>\n\n          )}\n        </span>\n      </ListItem>\n\n      <Divider variant=\"inset\" component=\"li\" />\n    </React.Fragment>\n  );\n};\n\nexport default TicketListItemCustom;","import React from \"react\";\n\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\n\nconst TicketsSkeleton = () => {\n\treturn (\n\t\t<>\n\t\t\t<ListItem dense>\n\t\t\t\t<ListItemAvatar>\n\t\t\t\t\t<Skeleton animation=\"wave\" variant=\"circle\" width={40} height={40} />\n\t\t\t\t</ListItemAvatar>\n\t\t\t\t<ListItemText\n\t\t\t\t\tprimary={<Skeleton animation=\"wave\" height={20} width={60} />}\n\t\t\t\t\tsecondary={<Skeleton animation=\"wave\" height={20} width={90} />}\n\t\t\t\t/>\n\t\t\t</ListItem>\n\t\t\t<Divider variant=\"inset\" />\n\t\t\t<ListItem dense>\n\t\t\t\t<ListItemAvatar>\n\t\t\t\t\t<Skeleton animation=\"wave\" variant=\"circle\" width={40} height={40} />\n\t\t\t\t</ListItemAvatar>\n\t\t\t\t<ListItemText\n\t\t\t\t\tprimary={<Skeleton animation=\"wave\" height={20} width={70} />}\n\t\t\t\t\tsecondary={<Skeleton animation=\"wave\" height={20} width={120} />}\n\t\t\t\t/>\n\t\t\t</ListItem>\n\t\t\t<Divider variant=\"inset\" />\n\t\t\t<ListItem dense>\n\t\t\t\t<ListItemAvatar>\n\t\t\t\t\t<Skeleton animation=\"wave\" variant=\"circle\" width={40} height={40} />\n\t\t\t\t</ListItemAvatar>\n\t\t\t\t<ListItemText\n\t\t\t\t\tprimary={<Skeleton animation=\"wave\" height={20} width={60} />}\n\t\t\t\t\tsecondary={<Skeleton animation=\"wave\" height={20} width={90} />}\n\t\t\t\t/>\n\t\t\t</ListItem>\n\t\t\t<Divider variant=\"inset\" />\n\t\t</>\n\t);\n};\n\nexport default TicketsSkeleton;\n","import React, { useState, useEffect, useReducer, useContext } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport TicketListItem from \"../TicketListItemCustom\";\nimport TicketsListSkeleton from \"../TicketsListSkeleton\";\n\nimport useTickets from \"../../hooks/useTickets\";\nimport { i18n } from \"../../translate/i18n\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { socketConnection } from \"../../services/socket\";\n\nconst useStyles = makeStyles((theme) => ({\n  ticketsListWrapper: {\n    position: \"relative\",\n    display: \"flex\",\n    height: \"100%\",\n    flexDirection: \"column\",\n    overflow: \"hidden\",\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n  },\n\n  ticketsList: {\n    flex: 1,\n    maxHeight: \"100%\",\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n    borderTop: \"2px solid rgba(0, 0, 0, 0.12)\",\n  },\n\n  ticketsListHeader: {\n    color: \"rgb(67, 83, 105)\",\n    zIndex: 2,\n    backgroundColor: \"white\",\n    borderBottom: \"1px solid rgba(0, 0, 0, 0.12)\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n\n  ticketsCount: {\n    fontWeight: \"normal\",\n    color: \"rgb(104, 121, 146)\",\n    marginLeft: \"8px\",\n    fontSize: \"14px\",\n  },\n\n  noTicketsText: {\n    textAlign: \"center\",\n    color: \"rgb(104, 121, 146)\",\n    fontSize: \"14px\",\n    lineHeight: \"1.4\",\n  },\n\n  noTicketsTitle: {\n    textAlign: \"center\",\n    fontSize: \"16px\",\n    fontWeight: \"600\",\n    margin: \"0px\",\n  },\n\n  noTicketsDiv: {\n    display: \"flex\",\n    height: \"100px\",\n    margin: 40,\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_TICKETS\") {\n    const newTickets = action.payload;\n\n    newTickets.forEach((ticket) => {\n      const ticketIndex = state.findIndex((t) => t.id === ticket.id);\n      if (ticketIndex !== -1) {\n        state[ticketIndex] = ticket;\n        if (ticket.unreadMessages > 0) {\n          state.unshift(state.splice(ticketIndex, 1)[0]);\n        }\n      } else {\n        state.push(ticket);\n      }\n    });\n\n    return [...state];\n  }\n\n  if (action.type === \"RESET_UNREAD\") {\n    const ticketId = action.payload;\n\n    const ticketIndex = state.findIndex((t) => t.id === ticketId);\n    if (ticketIndex !== -1) {\n      state[ticketIndex].unreadMessages = 0;\n    }\n\n    return [...state];\n  }\n\n  if (action.type === \"UPDATE_TICKET\") {\n    const ticket = action.payload;\n\n    const ticketIndex = state.findIndex((t) => t.id === ticket.id);\n    if (ticketIndex !== -1) {\n      state[ticketIndex] = ticket;\n    } else {\n      state.unshift(ticket);\n    }\n\n    return [...state];\n  }\n\n  if (action.type === \"UPDATE_TICKET_TAGS\") {\n    const ticket = action.payload;\n\n    const ticketIndex = state.findIndex(t => t.id === ticket.id);\n    if (ticketIndex !== -1) {\n      state[ticketIndex].tags = ticket.tags;\n    }\n\n    return [...state];\n  }\n\n\n  if (action.type === \"UPDATE_TICKET_UNREAD_MESSAGES\") {\n    const ticket = action.payload;\n\n    const ticketIndex = state.findIndex((t) => t.id === ticket.id);\n    if (ticketIndex !== -1) {\n      state[ticketIndex] = ticket;\n      state.unshift(state.splice(ticketIndex, 1)[0]);\n    } else {\n      state.unshift(ticket);\n    }\n\n    return [...state];\n  }\n\n  if (action.type === \"UPDATE_TICKET_CONTACT\") {\n    const contact = action.payload;\n    const ticketIndex = state.findIndex((t) => t.contactId === contact.id);\n    if (ticketIndex !== -1) {\n      state[ticketIndex].contact = contact;\n    }\n    return [...state];\n  }\n\n  if (action.type === \"DELETE_TICKET\") {\n    const ticketId = action.payload;\n    const ticketIndex = state.findIndex((t) => t.id === ticketId);\n    if (ticketIndex !== -1) {\n      state.splice(ticketIndex, 1);\n    }\n\n    return [...state];\n  }\n\n  if (action.type === \"RESET\") {\n    return [];\n  }\n};\n\nconst TicketsListCustom = (props) => {\n  const {\n    status,\n    searchParam,\n    tags,\n    users,\n    showAll,\n    selectedQueueIds,\n    updateCount,\n    style,\n  } = props;\n  const classes = useStyles();\n  const [pageNumber, setPageNumber] = useState(1);\n  const [ticketsList, dispatch] = useReducer(reducer, []);\n  const { user } = useContext(AuthContext);\n  const { profile, queues } = user;\n\n  useEffect(() => {\n    dispatch({ type: \"RESET\" });\n    setPageNumber(1);\n  }, [status, searchParam, dispatch, showAll, tags, users, selectedQueueIds]);\n\n  const { tickets, hasMore, loading } = useTickets({\n    pageNumber,\n    searchParam,\n    status,\n    showAll,\n    tags: JSON.stringify(tags),\n    users: JSON.stringify(users),\n    queueIds: JSON.stringify(selectedQueueIds),\n  });\n\n  useEffect(() => {\n    const queueIds = queues.map((q) => q.id);\n    const filteredTickets = tickets.filter(\n      (t) => queueIds.indexOf(t.queueId) > -1\n    );\n\n    if (profile === \"user\") {\n      dispatch({ type: \"LOAD_TICKETS\", payload: filteredTickets });\n    } else {\n      dispatch({ type: \"LOAD_TICKETS\", payload: tickets });\n    }\n  }, [tickets, status, searchParam, queues, profile]);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketConnection({ companyId });\n\n    const shouldUpdateTicket = (ticket) =>\n      (!ticket.userId || ticket.userId === user?.id || showAll) &&\n      (!ticket.queueId || selectedQueueIds.indexOf(ticket.queueId) > -1);\n\n    const notBelongsToUserQueues = (ticket) =>\n      ticket.queueId && selectedQueueIds.indexOf(ticket.queueId) === -1;\n\n    socket.on(\"connect\", () => {\n      if (status) {\n        socket.emit(\"joinTickets\", status);\n      } else {\n        socket.emit(\"joinNotification\");\n      }\n    });\n\n    socket.on(`company-${companyId}-ticket`, (data) => {\n\n      if (data.action === \"updateUnread\") {\n        dispatch({\n          type: \"RESET_UNREAD\",\n          payload: data.ticketId,\n        });\n      }\n\n      if (data.action === \"update\" && shouldUpdateTicket(data.ticket)) {\n        dispatch({\n          type: \"UPDATE_TICKET\",\n          payload: data.ticket,\n        });\n      }\n\n      if (data.action === \"update\" && notBelongsToUserQueues(data.ticket)) {\n        dispatch({ type: \"DELETE_TICKET\", payload: data.ticket.id });\n      }\n\n      if (data.action === \"delete\") {\n        dispatch({ type: \"DELETE_TICKET\", payload: data.ticketId });\n      }\n\n      if (data.action === \"tagUpdate\") {\n\n        console.log(\"tagUpdate\", data.ticket);\n\n        dispatch({\n          type: \"UPDATE_TICKET_TAGS\",\n          payload: data.ticket,\n        });\n\n      }\n    });\n\n    socket.on(`company-${companyId}-appMessage`, (data) => {\n      const queueIds = queues.map((q) => q.id);\n      if (\n        profile === \"user\" &&\n        (queueIds.indexOf(data.ticket.queue?.id) === -1 ||\n          data.ticket.queue === null)\n      ) {\n        return;\n      }\n\n      if (data.action === \"create\" && shouldUpdateTicket(data.ticket)) {\n        dispatch({\n          type: \"UPDATE_TICKET_UNREAD_MESSAGES\",\n          payload: data.ticket,\n        });\n      }\n    });\n\n    socket.on(`company-${companyId}-contact`, (data) => {\n      if (data.action === \"update\") {\n        dispatch({\n          type: \"UPDATE_TICKET_CONTACT\",\n          payload: data.contact,\n        });\n      }\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, [status, showAll, user, selectedQueueIds, tags, users, profile, queues]);\n\n  useEffect(() => {\n    const count = ticketsList.filter(ticket => !ticket.isGroup).length;\n    if (typeof updateCount === \"function\") {\n      updateCount(count);\n    }\n  }, [ticketsList, updateCount]);\n\n  const loadMore = () => {\n    setPageNumber((prevState) => prevState + 1);\n  };\n\n  const handleScroll = (e) => {\n    if (!hasMore || loading) return;\n\n    const { scrollTop, scrollHeight, clientHeight } = e.currentTarget;\n\n    if (scrollHeight - (scrollTop + 100) < clientHeight) {\n      loadMore();\n    }\n  };\n\n  return (\n    <Paper className={classes.ticketsListWrapper} style={style}>\n      <Paper\n        square\n        name=\"closed\"\n        elevation={0}\n        className={classes.ticketsList}\n        onScroll={handleScroll}\n      >\n        <List style={{ paddingTop: 0 }}>\n          {ticketsList.length === 0 && !loading ? (\n            <div className={classes.noTicketsDiv}>\n              <span className={classes.noTicketsTitle}>\n                {i18n.t(\"ticketsList.noTicketsTitle\")}\n              </span>\n              <p className={classes.noTicketsText}>\n                {i18n.t(\"ticketsList.noTicketsMessage\")}\n              </p>\n            </div>\n          ) : (\n            <>\n              {ticketsList\n                .filter(ticket => ticket.isGroup.toString() === \"false\")\n                .map(ticket => (\n                  <TicketListItem ticket={ticket} key={ticket.id} />\n                ))}\n            </>\n          )}\n          {loading && <TicketsListSkeleton />}\n        </List>\n      </Paper>\n    </Paper>\n  );\n};\n\nexport default TicketsListCustom;\n","import React, { useState, useEffect, useReducer, useContext } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport TicketListItem from \"../TicketListItemCustom\";\nimport TicketsListSkeleton from \"../TicketsListSkeleton\";\n\nimport useTickets from \"../../hooks/useTickets\";\nimport { i18n } from \"../../translate/i18n\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { socketConnection } from \"../../services/socket\";\n\nconst useStyles = makeStyles((theme) => ({\n  ticketsListWrapper: {\n    position: \"relative\",\n    display: \"flex\",\n    height: \"100%\",\n    flexDirection: \"column\",\n    overflow: \"hidden\",\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n  },\n\n  ticketsList: {\n    flex: 1,\n    maxHeight: \"100%\",\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n    borderTop: \"2px solid rgba(0, 0, 0, 0.12)\",\n  },\n\n  ticketsListHeader: {\n    color: \"rgb(67, 83, 105)\",\n    zIndex: 2,\n    backgroundColor: \"white\",\n    borderBottom: \"1px solid rgba(0, 0, 0, 0.12)\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n\n  ticketsCount: {\n    fontWeight: \"normal\",\n    color: \"rgb(104, 121, 146)\",\n    marginLeft: \"8px\",\n    fontSize: \"14px\",\n  },\n\n  noTicketsText: {\n    textAlign: \"center\",\n    color: \"rgb(104, 121, 146)\",\n    fontSize: \"14px\",\n    lineHeight: \"1.4\",\n  },\n\n  noTicketsTitle: {\n    textAlign: \"center\",\n    fontSize: \"16px\",\n    fontWeight: \"600\",\n    margin: \"0px\",\n  },\n\n  noTicketsDiv: {\n    display: \"flex\",\n    height: \"100px\",\n    margin: 40,\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_TICKETS\") {\n    const newTickets = action.payload;\n\n    newTickets.forEach((ticket) => {\n      const ticketIndex = state.findIndex((t) => t.id === ticket.id);\n      if (ticketIndex !== -1) {\n        state[ticketIndex] = ticket;\n        if (ticket.unreadMessages > 0) {\n          state.unshift(state.splice(ticketIndex, 1)[0]);\n        }\n      } else {\n        state.push(ticket);\n      }\n    });\n\n    return [...state];\n  }\n\n  if (action.type === \"RESET_UNREAD\") {\n    const ticketId = action.payload;\n\n    const ticketIndex = state.findIndex((t) => t.id === ticketId);\n    if (ticketIndex !== -1) {\n      state[ticketIndex].unreadMessages = 0;\n    }\n\n    return [...state];\n  }\n\n  if (action.type === \"UPDATE_TICKET\") {\n    const ticket = action.payload;\n\n    const ticketIndex = state.findIndex((t) => t.id === ticket.id);\n    if (ticketIndex !== -1) {\n      state[ticketIndex] = ticket;\n    } else {\n      state.unshift(ticket);\n    }\n\n    return [...state];\n  }\n\n  if (action.type === \"UPDATE_TICKET_UNREAD_MESSAGES\") {\n    const ticket = action.payload;\n\n    const ticketIndex = state.findIndex((t) => t.id === ticket.id);\n    if (ticketIndex !== -1) {\n      state[ticketIndex] = ticket;\n      state.unshift(state.splice(ticketIndex, 1)[0]);\n    } else {\n      state.unshift(ticket);\n    }\n\n    return [...state];\n  }\n\n  if (action.type === \"UPDATE_TICKET_CONTACT\") {\n    const contact = action.payload;\n    const ticketIndex = state.findIndex((t) => t.contactId === contact.id);\n    if (ticketIndex !== -1) {\n      state[ticketIndex].contact = contact;\n    }\n    return [...state];\n  }\n\n  if (action.type === \"DELETE_TICKET\") {\n    const ticketId = action.payload;\n    const ticketIndex = state.findIndex((t) => t.id === ticketId);\n    if (ticketIndex !== -1) {\n      state.splice(ticketIndex, 1);\n    }\n\n    return [...state];\n  }\n\n  if (action.type === \"RESET\") {\n    return [];\n  }\n};\n\nconst TicketsListCustom = (props) => {\n  const {\n    status,\n    searchParam,\n    tags,\n    users,\n    showAll,\n    selectedQueueIds,\n    updateCount,\n    style,\n  } = props;\n  const classes = useStyles();\n  const [pageNumber, setPageNumber] = useState(1);\n  const [ticketsList, dispatch] = useReducer(reducer, []);\n  const { user } = useContext(AuthContext);\n  const { profile, queues } = user;\n\n  useEffect(() => {\n    dispatch({ type: \"RESET\" });\n    setPageNumber(1);\n  }, [status, searchParam, dispatch, showAll, tags, users, selectedQueueIds]);\n\n  const { tickets, hasMore, loading } = useTickets({\n    pageNumber,\n    searchParam,\n    status,\n    showAll,\n    tags: JSON.stringify(tags),\n    users: JSON.stringify(users),\n    queueIds: JSON.stringify(selectedQueueIds),\n  });\n\n  useEffect(() => {\n    const queueIds = queues.map((q) => q.id);\n    const filteredTickets = tickets.filter(\n      (t) => queueIds.indexOf(t.queueId) > -1\n    );\n\n    if (profile === \"user\") {\n      dispatch({ type: \"LOAD_TICKETS\", payload: filteredTickets });\n    } else {\n      dispatch({ type: \"LOAD_TICKETS\", payload: tickets });\n    }\n  }, [tickets, status, searchParam, queues, profile]);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketConnection({ companyId });\n\n    const shouldUpdateTicket = (ticket) =>\n      (!ticket.userId || ticket.userId === user?.id || showAll) &&\n      (!ticket.queueId || selectedQueueIds.indexOf(ticket.queueId) > -1);\n\n    const notBelongsToUserQueues = (ticket) =>\n      ticket.queueId && selectedQueueIds.indexOf(ticket.queueId) === -1;\n\n    socket.on(\"connect\", () => {\n      if (status) {\n        socket.emit(\"joinTickets\", status);\n      } else {\n        socket.emit(\"joinNotification\");\n      }\n    });\n\n    socket.on(`company-${companyId}-ticket`, (data) => {\n      if (data.action === \"updateUnread\") {\n        dispatch({\n          type: \"RESET_UNREAD\",\n          payload: data.ticketId,\n        });\n      }\n\n      if (data.action === \"update\" && shouldUpdateTicket(data.ticket)) {\n        dispatch({\n          type: \"UPDATE_TICKET\",\n          payload: data.ticket,\n        });\n      }\n\n      if (data.action === \"update\" && notBelongsToUserQueues(data.ticket)) {\n        dispatch({ type: \"DELETE_TICKET\", payload: data.ticket.id });\n      }\n\n      if (data.action === \"delete\") {\n        dispatch({ type: \"DELETE_TICKET\", payload: data.ticketId });\n      }\n    });\n\n    socket.on(`company-${companyId}-appMessage`, (data) => {\n      const queueIds = queues.map((q) => q.id);\n      if (\n        profile === \"user\" &&\n        (queueIds.indexOf(data.ticket.queue?.id) === -1 ||\n          data.ticket.queue === null)\n      ) {\n        return;\n      }\n\n      if (data.action === \"create\" && shouldUpdateTicket(data.ticket)) {\n        dispatch({\n          type: \"UPDATE_TICKET_UNREAD_MESSAGES\",\n          payload: data.ticket,\n        });\n      }\n    });\n\n    socket.on(`company-${companyId}-contact`, (data) => {\n      if (data.action === \"update\") {\n        dispatch({\n          type: \"UPDATE_TICKET_CONTACT\",\n          payload: data.contact,\n        });\n      }\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, [status, showAll, user, selectedQueueIds, tags, users, profile, queues]);\n\n  useEffect(() => {\n    const count = ticketsList.filter(ticket => ticket.isGroup).length;\n    if (typeof updateCount === \"function\") {\n      updateCount(count);\n    }\n  }, [ticketsList, updateCount]);\n\n  const loadMore = () => {\n    setPageNumber((prevState) => prevState + 1);\n  };\n\n  const handleScroll = (e) => {\n    if (!hasMore || loading) return;\n\n    const { scrollTop, scrollHeight, clientHeight } = e.currentTarget;\n\n    if (scrollHeight - (scrollTop + 100) < clientHeight) {\n      loadMore();\n    }\n  };\n\n  return (\n    <Paper className={classes.ticketsListWrapper} style={style}>\n      <Paper\n        square\n        name=\"closed\"\n        elevation={0}\n        className={classes.ticketsList}\n        onScroll={handleScroll}\n      >\n        <List style={{ paddingTop: 0 }}>\n          {ticketsList.length === 0 && !loading ? (\n            <div className={classes.noTicketsDiv}>\n              <span className={classes.noTicketsTitle}>\n                {i18n.t(\"ticketsList.noTicketsTitle\")}\n              </span>\n              <p className={classes.noTicketsText}>\n                {i18n.t(\"ticketsList.noTicketsMessage\")}\n              </p>\n            </div>\n          ) : (\n            <>\n              {ticketsList\n                .filter(ticket => ticket.isGroup.toString() === \"true\")\n                .map(ticket => (\n                    <TicketListItem ticket={ticket} key={ticket.id} />\n              ))}\n            </>\n          )}\n          {loading && <TicketsListSkeleton />}\n        </List>\n      </Paper>\n    </Paper>\n  );\n};\n\nexport default TicketsListCustom;\n","import React from \"react\";\n\nconst TabPanel = ({ children, value, name, ...rest }) => {\n\tif (value === name) {\n\t\treturn (\n\t\t\t<div\n\t\t\t\trole=\"tabpanel\"\n\t\t\t\tid={`simple-tabpanel-${name}`}\n\t\t\t\taria-labelledby={`simple-tab-${name}`}\n\t\t\t\t{...rest}\n\t\t\t>\n\t\t\t\t<>{children}</>\n\t\t\t</div>\n\t\t);\n\t} else return null;\n};\n\nexport default TabPanel;\n","import React from \"react\";\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { Checkbox, ListItemText } from \"@material-ui/core\";\nimport { i18n } from \"../../translate/i18n\";\n\nconst TicketsQueueSelect = ({\n\tuserQueues,\n\tselectedQueueIds = [],\n\tonChange,\n}) => {\n\tconst handleChange = e => {\n\t\tonChange(e.target.value);\n\t};\n\n\treturn (\n\t\t<div style={{ width: 120, marginTop: -4 }}>\n\t\t\t<FormControl fullWidth margin=\"dense\">\n\t\t\t\t<Select\n\t\t\t\t\tmultiple\n\t\t\t\t\tdisplayEmpty\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tvalue={selectedQueueIds}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tMenuProps={{\n\t\t\t\t\t\tanchorOrigin: {\n\t\t\t\t\t\t\tvertical: \"bottom\",\n\t\t\t\t\t\t\thorizontal: \"left\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttransformOrigin: {\n\t\t\t\t\t\t\tvertical: \"top\",\n\t\t\t\t\t\t\thorizontal: \"left\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\tgetContentAnchorEl: null,\n\t\t\t\t\t}}\n\t\t\t\t\trenderValue={() => i18n.t(\"ticketsQueueSelect.placeholder\")}\n\t\t\t\t>\n\t\t\t\t\t{userQueues?.length > 0 &&\n\t\t\t\t\t\tuserQueues.map(queue => (\n\t\t\t\t\t\t\t<MenuItem dense key={queue.id} value={queue.id}>\n\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tcolor: queue.color,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\tchecked={selectedQueueIds.indexOf(queue.id) > -1}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ListItemText primary={queue.name} />\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t))}\n\t\t\t\t</Select>\n\t\t\t</FormControl>\n\t\t</div>\n\t);\n};\n\nexport default TicketsQueueSelect;\n","import { Box, Chip, TextField } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport React, { useEffect, useState } from \"react\";\nimport toastError from \"../../errors/toastError\";\nimport api from \"../../services/api\";\n\nexport function TagsFilter({ onFiltered }) {\n  const [tags, setTags] = useState([]);\n  const [selecteds, setSelecteds] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      await loadTags();\n    }\n    fetchData();\n  }, []);\n\n  const loadTags = async () => {\n    try {\n      const { data } = await api.get(`/tags/list`);\n      setTags(data);\n    } catch (err) {\n      toastError(err);\n    }\n  };\n\n  const onChange = async (value) => {\n    setSelecteds(value);\n    onFiltered(value);\n  };\n\n  return (\n    <Box style={{ padding: 10 }}>\n      <Autocomplete\n        multiple\n        size=\"small\"\n        options={tags}\n        value={selecteds}\n        onChange={(e, v, r) => onChange(v)}\n        getOptionLabel={(option) => option.name}\n        renderTags={(value, getTagProps) =>\n          value.map((option, index) => (\n            <Chip\n              variant=\"outlined\"\n              style={{\n                backgroundColor: option.color || \"#eee\",\n                textShadow: \"1px 1px 1px #000\",\n                color: \"white\",\n              }}\n              label={option.name}\n              {...getTagProps({ index })}\n              size=\"small\"\n            />\n          ))\n        }\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            variant=\"outlined\"\n            placeholder=\"Filtro por Tags\"\n          />\n        )}\n      />\n    </Box>\n  );\n}\n","import { Box, Chip, TextField } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport React, { useEffect, useState } from \"react\";\nimport toastError from \"../../errors/toastError\";\nimport api from \"../../services/api\";\n\nexport function UsersFilter({ onFiltered, initialUsers }) {\n  const [users, setUsers] = useState([]);\n  const [selecteds, setSelecteds] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      await loadUsers();\n    }\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    setSelecteds([]);\n    if (\n      Array.isArray(initialUsers) &&\n      Array.isArray(users) &&\n      users.length > 0\n    ) {\n      onChange(initialUsers);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [initialUsers, users]);\n\n  const loadUsers = async () => {\n    try {\n      const { data } = await api.get(`/users/list`);\n      const userList = data.map((u) => ({ id: u.id, name: u.name }));\n      setUsers(userList);\n    } catch (err) {\n      toastError(err);\n    }\n  };\n\n  const onChange = async (value) => {\n    setSelecteds(value);\n    onFiltered(value);\n  };\n\n  return (\n    <Box style={{ padding: \"0px 10px 10px\" }}>\n      <Autocomplete\n        multiple\n        size=\"small\"\n        options={users}\n        value={selecteds}\n        onChange={(e, v, r) => onChange(v)}\n        getOptionLabel={(option) => option.name}\n        getOptionSelected={(option, value) => {\n          return (\n            option?.id === value?.id ||\n            option?.name.toLowerCase() === value?.name.toLowerCase()\n          );\n        }}\n        renderTags={(value, getUserProps) =>\n          value.map((option, index) => (\n            <Chip\n              variant=\"outlined\"\n              style={{\n                backgroundColor: \"#bfbfbf\",\n                textShadow: \"1px 1px 1px #000\",\n                color: \"white\",\n              }}\n              label={option.name}\n              {...getUserProps({ index })}\n              size=\"small\"\n            />\n          ))\n        }\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            variant=\"outlined\"\n            placeholder=\"Filtro por Users\"\n          />\n        )}\n      />\n    </Box>\n  );\n}\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport WhatsAppIcon from \"@material-ui/icons/WhatsApp\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Badge from \"@material-ui/core/Badge\";\n// import MoveToInboxIcon from \"@material-ui/icons/MoveToInbox\"; \nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport GroupIcon from \"@material-ui/icons/Group\";\n\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\n\nimport NewTicketModal from \"../NewTicketModal\";\nimport TicketsList from \"../TicketsListCustom\";\nimport TicketsListGroup from \"../TicketsListGroup\";\n\nimport TabPanel from \"../TabPanel\";\n\nimport { i18n } from \"../../translate/i18n\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { Can } from \"../Can\";\nimport TicketsQueueSelect from \"../TicketsQueueSelect\";\nimport { Button } from \"@material-ui/core\";\nimport { TagsFilter } from \"../TagsFilter\";\nimport { UsersFilter } from \"../UsersFilter\";\n\nconst useStyles = makeStyles((theme) => ({\n  ticketsWrapper: {\n    position: \"relative\",\n    display: \"flex\",\n    height: \"100%\",\n    flexDirection: \"column\",\n    overflow: \"hidden\",\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n  },\n\n  tabsHeader: {\n    flex: \"none\",\n    backgroundColor: theme.palette.tabHeaderBackground,\n  },\n\n  settingsIcon: {\n    alignSelf: \"center\",\n    marginLeft: \"auto\",\n    padding: 8,\n  },\n\n  tab: {\n    minWidth: 60,\n    width: 60,\n  },\n\n  ticketOptionsBox: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    background: theme.palette.optionsBackground,\n    padding: theme.spacing(1),\n  },\n\n  serachInputWrapper: {\n    flex: 1,\n    background: theme.palette.total,\n    display: \"flex\",\n    borderRadius: 40,\n    padding: 4,\n    marginRight: theme.spacing(1),\n  },\n\n  searchIcon: {\n    color: \"grey\",\n    marginLeft: 6,\n    marginRight: 6,\n    alignSelf: \"center\",\n  },\n\n  searchInput: {\n    flex: 1,\n    border: \"none\",\n    borderRadius: 30,\n  },\n\n  badge: {\n    right: \"-10px\",\n  },\n  show: {\n    display: \"block\",\n  },\n  hide: {\n    display: \"none !important\",\n  },\n}));\n\nconst TicketsManagerTabs = () => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [searchParam, setSearchParam] = useState(\"\");\n  const [tab, setTab] = useState(\"open\");\n  const [tabOpen, setTabOpen] = useState(\"open\");\n  const [newTicketModalOpen, setNewTicketModalOpen] = useState(false);\n  const [showAllTickets, setShowAllTickets] = useState(false);\n  const searchInputRef = useRef();\n  const { user } = useContext(AuthContext);\n  const { profile } = user;\n\n  const [openCount, setOpenCount] = useState(0);\n  const [pendingCount, setPendingCount] = useState(0);\n\n  const userQueueIds = user.queues.map((q) => q.id);\n  const [selectedQueueIds, setSelectedQueueIds] = useState(userQueueIds || []);\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n\n  useEffect(() => {\n    if (user.profile.toUpperCase() === \"ADMIN\") {\n      setShowAllTickets(true);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (tab === \"search\") {\n      searchInputRef.current.focus();\n    }\n  }, [tab]);\n\n  let searchTimeout;\n\n  const handleSearch = (e) => {\n    const searchedTerm = e.target.value.toLowerCase();\n\n    clearTimeout(searchTimeout);\n\n    if (searchedTerm === \"\") {\n      setSearchParam(searchedTerm);\n      setTab(\"open\");\n      return;\n    }\n\n    searchTimeout = setTimeout(() => {\n      setSearchParam(searchedTerm);\n    }, 500);\n  };\n\n  const handleChangeTab = (e, newValue) => {\n    setTab(newValue);\n  };\n\n  const handleChangeTabOpen = (e, newValue) => {\n    setTabOpen(newValue);\n  };\n\n  const applyPanelStyle = (status) => {\n    if (tabOpen !== status) {\n      return { width: 0, height: 0 };\n    }\n  };\n\n  const handleCloseOrOpenTicket = (ticket) => {\n    setNewTicketModalOpen(false);\n    if (ticket !== undefined && ticket.uuid !== undefined) {\n      history.push(`/tickets/${ticket.uuid}`);\n    }\n  };\n\n  const handleSelectedTags = (selecteds) => {\n    const tags = selecteds.map((t) => t.id);\n    setSelectedTags(tags);\n  };\n\n  const handleSelectedUsers = (selecteds) => {\n    const users = selecteds.map((t) => t.id);\n    setSelectedUsers(users);\n  };\n\n  return (\n    <Paper elevation={0} variant=\"outlined\" className={classes.ticketsWrapper}>\n      <NewTicketModal\n        modalOpen={newTicketModalOpen}\n        onClose={(ticket) => {\n          console.log(\"ticket\", ticket);\n          handleCloseOrOpenTicket(ticket);\n        }}\n      />\n      <Paper elevation={0} square className={classes.tabsHeader}>\n        <Tabs\n          value={tab}\n          onChange={handleChangeTab}\n          variant=\"fullWidth\"\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          aria-label=\"icon label tabs example\"\n        >\n          <Tab\n            value={\"open\"}\n            icon={<WhatsAppIcon />}            \n            classes={{ root: classes.tab }}\n          />\n\t\t  <Tab\n            value={\"group\"}\n            icon={<GroupIcon />}          \n            classes={{ root: classes.tab }}\n          />\n          <Tab\n            value={\"closed\"}\n            icon={<CheckBoxIcon />}          \n            classes={{ root: classes.tab }}\n          />\n          <Tab\n            value={\"search\"}\n            icon={<SearchIcon />}          \n            classes={{ root: classes.tab }}\n          />\n        </Tabs>\n      </Paper>\n      <Paper square elevation={0} className={classes.ticketOptionsBox}>\n        {tab === \"search\" ? (\n          <div className={classes.serachInputWrapper}>\n            <SearchIcon className={classes.searchIcon} />\n            <InputBase\n              className={classes.searchInput}\n              inputRef={searchInputRef}\n              placeholder={i18n.t(\"tickets.search.placeholder\")}\n              type=\"search\"\n              onChange={handleSearch}\n            />\n          </div>\n        ) : (\n          <>\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={() => setNewTicketModalOpen(true)}\n            >\n              {i18n.t(\"ticketsManager.buttons.newTicket\")}\n            </Button>\n            <Can\n              role={user.profile}\n              perform=\"tickets-manager:showall\"\n              yes={() => (\n                <FormControlLabel\n                  label={i18n.t(\"tickets.buttons.showAll\")}\n                  labelPlacement=\"start\"\n                  control={\n                    <Switch\n                      size=\"small\"\n                      checked={showAllTickets}\n                      onChange={() =>\n                        setShowAllTickets((prevState) => !prevState)\n                      }\n                      name=\"showAllTickets\"\n                      color=\"primary\"\n                    />\n                  }\n                />\n              )}\n            />\n          </>\n        )}\n        <TicketsQueueSelect\n          style={{ marginLeft: 6 }}\n          selectedQueueIds={selectedQueueIds}\n          userQueues={user?.queues}\n          onChange={(values) => setSelectedQueueIds(values)}\n        />\n      </Paper>\n      <TabPanel value={tab} name=\"open\" className={classes.ticketsWrapper}>\n        <Tabs\n          value={tabOpen}\n          onChange={handleChangeTabOpen}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n        >\n          <Tab\n            label={\n              <Badge\n                className={classes.badge}\n                badgeContent={openCount}\n                color=\"primary\"\n              >\n                {i18n.t(\"ticketsList.assignedHeader\")}\n              </Badge>\n            }\n            value={\"open\"}\n          />\n          <Tab\n            label={\n              <Badge\n                className={classes.badge}\n                badgeContent={pendingCount}\n                color=\"secondary\"\n              >\n                {i18n.t(\"ticketsList.pendingHeader\")}\n              </Badge>\n            }\n            value={\"pending\"}\n          />\n        </Tabs>\n        <Paper className={classes.ticketsWrapper}>\n          <TicketsList\n            status=\"open\"\n            showAll={showAllTickets}\n            selectedQueueIds={selectedQueueIds}\n            updateCount={(val) => setOpenCount(val)}\n            style={applyPanelStyle(\"open\")}\n          />\n          <TicketsList\n            status=\"pending\"\n            selectedQueueIds={selectedQueueIds}\n            updateCount={(val) => setPendingCount(val)}\n            style={applyPanelStyle(\"pending\")}\n          />\n        </Paper>\n      </TabPanel>\n      <TabPanel value={tab} name=\"group\" className={classes.ticketsWrapper}>\n        <Tabs\n          value={tabOpen}\n          onChange={handleChangeTabOpen}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n        >\n          <Tab\n            label={\n              <Badge\n                className={classes.badge}\n                badgeContent={openCount}\n                color=\"primary\"\n              >\n                {i18n.t(\"ticketsList.assignedHeader\")}\n              </Badge>\n            }\n            value={\"open\"}\n          />\n          <Tab\n            label={\n              <Badge\n                className={classes.badge}\n                badgeContent={pendingCount}\n                color=\"primary\"\n              >\n                {i18n.t(\"ticketsList.pendingHeader\")}\n              </Badge>\n            }\n            value={\"pending\"}\n          />\n        </Tabs>\n        <Paper className={classes.ticketsWrapper}>\n          <TicketsListGroup\n            status=\"open\"\n            showAll={showAllTickets}\n            selectedQueueIds={selectedQueueIds}\n            updateCount={(val) => setOpenCount(val)}\n            style={applyPanelStyle(\"open\")}\n          />\n          <TicketsListGroup\n            status=\"pending\"\n            selectedQueueIds={selectedQueueIds}\n            updateCount={(val) => setPendingCount(val)}\n            style={applyPanelStyle(\"pending\")}\n          />\n        </Paper>\n      </TabPanel>\n      <TabPanel value={tab} name=\"closed\" className={classes.ticketsWrapper}>\n        <TicketsList\n          status=\"closed\"\n          showAll={true}\n          selectedQueueIds={selectedQueueIds}\n        />\n        <TicketsListGroup\n          status=\"closed\"\n          showAll={true}\n          selectedQueueIds={selectedQueueIds}\n        />\n      </TabPanel>\n      <TabPanel value={tab} name=\"search\" className={classes.ticketsWrapper}>\n        <TagsFilter onFiltered={handleSelectedTags} />\n        {profile === \"admin\" && (\n          <UsersFilter onFiltered={handleSelectedUsers} />\n        )}\n        <TicketsList\n          searchParam={searchParam}\n          showAll={true}\n          tags={selectedTags}\n          users={selectedUsers}\n          selectedQueueIds={selectedQueueIds}\n        />\n      </TabPanel>\n    </Paper>\n  );\n};\n\nexport default TicketsManagerTabs;\n","import React from \"react\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { i18n } from \"../../translate/i18n\";\nimport { Grid } from \"@material-ui/core\";\n\nconst ContactDrawerSkeleton = ({ classes }) => {\n\treturn (\n\t\t<div className={classes.content}>\n\t\t\t<Paper square variant=\"outlined\" className={classes.contactHeader}>\n\t\t\t\t<Grid container>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Skeleton\n\t\t\t\t\t\t\tanimation=\"wave\"\n\t\t\t\t\t\t\tvariant=\"circle\"\n\t\t\t\t\t\t\twidth={60}\n\t\t\t\t\t\t\theight={60}\n\t\t\t\t\t\t\tclassName={classes.contactAvatar}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Skeleton animation=\"wave\" height={25} width={90} />\n\t\t\t\t\t\t<Skeleton animation=\"wave\" height={25} width={80} />\n\t\t\t\t\t\t<Skeleton animation=\"wave\" height={25} width={80} />\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Paper>\n\t\t\t<Paper square className={classes.contactDetails}>\n\t\t\t\t<Typography variant=\"subtitle1\">\n\t\t\t\t\t{i18n.t(\"contactDrawer.extraInfo\")}\n\t\t\t\t</Typography>\n\t\t\t\t<Paper square variant=\"outlined\" className={classes.contactExtraInfo}>\n\t\t\t\t\t<Skeleton animation=\"wave\" height={20} width={60} />\n\t\t\t\t\t<Skeleton animation=\"wave\" height={20} width={160} />\n\t\t\t\t</Paper>\n\t\t\t\t<Paper square variant=\"outlined\" className={classes.contactExtraInfo}>\n\t\t\t\t\t<Skeleton animation=\"wave\" height={20} width={60} />\n\t\t\t\t\t<Skeleton animation=\"wave\" height={20} width={160} />\n\t\t\t\t</Paper>\n\t\t\t\t<Paper square variant=\"outlined\" className={classes.contactExtraInfo}>\n\t\t\t\t\t<Skeleton animation=\"wave\" height={20} width={60} />\n\t\t\t\t\t<Skeleton animation=\"wave\" height={20} width={160} />\n\t\t\t\t</Paper>\n\t\t\t</Paper>\n\t\t</div>\n\t);\n};\n\nexport default ContactDrawerSkeleton;\n","import React, { useState, useEffect } from \"react\";\n\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field } from \"formik\";\nimport { toast } from \"react-toastify\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport { i18n } from \"../../translate/i18n\";\n\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\nimport { Grid } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t\tdisplay: \"flex\",\n\t\tflexWrap: \"wrap\",\n\t},\n\ttextField: {\n\t\tmarginRight: theme.spacing(1),\n\t\tflex: 1,\n\t},\n\n\textraAttr: {\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"center\",\n\t\talignItems: \"center\",\n\t},\n\n\tbtnWrapper: {\n\t\tposition: \"relative\",\n\t},\n\n\tbuttonProgress: {\n\t\tcolor: green[500],\n\t\tposition: \"absolute\",\n\t\ttop: \"50%\",\n\t\tleft: \"50%\",\n\t\tmarginTop: -12,\n\t\tmarginLeft: -12,\n\t},\n\n    textCenter: {\n        backgroundColor: 'red'\n    }\n}));\n\nconst ContactSchema = Yup.object().shape({\n\tname: Yup.string()\n\t\t.min(2, \"Too Short!\")\n\t\t.max(50, \"Too Long!\")\n\t\t.required(\"Required\"),\n\tnumber: Yup.string().min(8, \"Too Short!\").max(50, \"Too Long!\"),\n\temail: Yup.string().email(\"Invalid email\"),\n});\n\nexport function ContactForm ({ initialContact, onSave, onCancel }) {\n\tconst classes = useStyles();\n\n\tconst [contact, setContact] = useState(initialContact);\n\n    useEffect(() => {\n        setContact(initialContact);\n    }, [initialContact]);\n\n\tconst handleSaveContact = async values => {\n\t\ttry {\n\t\t\tif (contact.id) {\n\t\t\t\tawait api.put(`/contacts/${contact.id}`, values);\n\t\t\t} else {\n\t\t\t\tconst { data } = await api.post(\"/contacts\", values);\n\t\t\t\tif (onSave) {\n\t\t\t\t\tonSave(data);\n\t\t\t\t}\n\t\t\t}\n\t\t\ttoast.success(i18n.t(\"contactModal.success\"));\n\t\t} catch (err) {\n\t\t\ttoastError(err);\n\t\t}\n\t};\n\n    return (\n        <Formik\n            initialValues={contact}\n            enableReinitialize={true}\n            validationSchema={ContactSchema}\n            onSubmit={(values, actions) => {\n                setTimeout(() => {\n                    handleSaveContact(values);\n                    actions.setSubmitting(false);\n                }, 400);\n            }}\n        >\n            {({ values, errors, touched, isSubmitting }) => (\n                <Form>\n                    <Grid container spacing={1}>\n                        {/* <Grid item xs={12}>\n                            <Typography variant=\"subtitle1\" gutterBottom>\n                                {i18n.t(\"contactModal.form.mainInfo\")}\n                            </Typography>\n                        </Grid> */}\n                        <Grid item xs={12}>\n                            <Field\n                                as={TextField}\n                                label={i18n.t(\"contactModal.form.name\")}\n                                name=\"name\"\n                                autoFocus\n                                error={touched.name && Boolean(errors.name)}\n                                helperText={touched.name && errors.name}\n                                variant=\"outlined\"\n                                margin=\"dense\"\n                                className={classes.textField}\n                                fullWidth\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Field\n                                as={TextField}\n                                label={i18n.t(\"contactModal.form.number\")}\n                                name=\"number\"\n                                error={touched.number && Boolean(errors.number)}\n                                helperText={touched.number && errors.number}\n                                placeholder=\"5513912344321\"\n                                variant=\"outlined\"\n                                margin=\"dense\"\n                                fullWidth\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Field\n                                as={TextField}\n                                label={i18n.t(\"contactModal.form.email\")}\n                                name=\"email\"\n                                error={touched.email && Boolean(errors.email)}\n                                helperText={touched.email && errors.email}\n                                placeholder=\"Email address\"\n                                fullWidth\n                                margin=\"dense\"\n                                variant=\"outlined\"\n                            />\n                        </Grid>\n                        <Grid item xs={12} spacing={1}>\n                            <Grid container spacing={1}>\n                                <Grid xs={6} item>\n                                    <Button\n                                        onClick={onCancel}\n                                        color=\"secondary\"\n                                        disabled={isSubmitting}\n                                        variant=\"outlined\"\n                                        fullWidth\n                                    >\n                                        {i18n.t(\"contactModal.buttons.cancel\")}\n                                    </Button>\n                                </Grid>\n                                <Grid classes={classes.textCenter} xs={6} item>\n                                    <Button\n                                        type=\"submit\"\n                                        color=\"primary\"\n                                        disabled={isSubmitting}\n                                        variant=\"contained\"\n                                        className={classes.btnWrapper}\n                                        fullWidth\n                                    >\n                                        {contact.id\n                                            ? `${i18n.t(\"contactModal.buttons.okEdit\")}`\n                                            : `${i18n.t(\"contactModal.buttons.okAdd\")}`}\n                                        {isSubmitting && (\n                                            <CircularProgress\n                                                size={24}\n                                                className={classes.buttonProgress}\n                                            />\n                                        )}\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Form>\n            )}\n        </Formik>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport moment from 'moment';\n\nconst useStyles = makeStyles((theme) => ({\n    inline: {\n        width: '100%'\n    }\n}));\n\nexport default function ContactNotesDialogListItem (props) {\n    const { note, deleteItem } = props;\n    const classes = useStyles();\n\n    const handleDelete = (item) => {\n        deleteItem(item);\n    }\n\n    return (\n        <ListItem alignItems=\"flex-start\">\n            <ListItemAvatar>\n                <Avatar alt={note.user.name} src=\"/static/images/avatar/1.jpg\" />\n            </ListItemAvatar>\n            <ListItemText\n                primary={\n                    <>\n                        <Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            className={classes.inline}\n                            color=\"textPrimary\"\n                        >\n                            {note.note}\n                        </Typography>\n                    </>\n                }\n                secondary={\n                    <>\n                        {note.user.name}, {moment(note.createdAt).format('DD/MM/YY HH:mm')}\n                    </>\n                }\n            />\n            <ListItemSecondaryAction>\n                <IconButton onClick={() => handleDelete(note)} edge=\"end\" aria-label=\"delete\">\n                    <DeleteIcon />\n                </IconButton>\n            </ListItemSecondaryAction>\n        </ListItem>\n    )   \n}\n\nContactNotesDialogListItem.propTypes = {\n    note: PropTypes.object.isRequired,\n    deleteItem: PropTypes.func.isRequired\n}","import api from \"../../services/api\";\n\nconst useTicketNotes = () => {\n\n    const saveNote = async (data) => {\n        const { data: responseData } = await api.request({\n            url: '/ticket-notes',\n            method: 'POST',\n            data\n        });\n        return responseData;\n    }\n\n    const deleteNote = async (id) => {\n        const { data } = await api.request({\n            url: `/ticket-notes/${id}`,\n            method: 'DELETE'\n        });\n        return data;\n    }\n\n    const listNotes = async (params) => {\n        const { data } = await api.request({\n            url: '/ticket-notes/list',\n            method: 'GET',\n            params\n        });\n        return data;\n    }\n\n    return {\n        saveNote,\n        deleteNote,\n        listNotes\n    }\n}\n\nexport default useTicketNotes;","import React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport { makeStyles } from '@material-ui/core/styles';\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field } from \"formik\";\n\nimport ContactNotesDialogListItem from '../ContactNotesDialogListItem';\nimport ConfirmationModal from '../ConfirmationModal';\n\nimport { toast } from \"react-toastify\";\n\nimport { i18n } from \"../../translate/i18n\";\n\nimport ButtonWithSpinner from '../ButtonWithSpinner';\n\nimport useTicketNotes from '../../hooks/useTicketNotes';\nimport { Grid } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: '350px',\n        },\n    },\n    list: {\n        width: '100%',\n        maxWidth: '350px',\n        maxHeight: '200px',\n        backgroundColor: theme.palette.background.paper,\n        overflow: 'auto'\n    },\n    inline: {\n        width: '100%'\n    }\n}));\n\nconst NoteSchema = Yup.object().shape({\n\tnote: Yup.string()\n\t\t.min(2, \"Too Short!\")\n\t\t.required(\"Required\")\n});\nexport function ContactNotes ({ ticket }) {\n    const { id: ticketId, contactId } = ticket\n    const classes = useStyles()\n    const [newNote, setNewNote] = useState({ note: \"\" });\n    const [loading, setLoading] = useState(false)\n    const [showOnDeleteDialog, setShowOnDeleteDialog] = useState(false)\n    const [selectedNote, setSelectedNote] = useState({})\n    const [notes, setNotes] = useState([])\n    const { saveNote, deleteNote, listNotes } = useTicketNotes()\n\n    useEffect(() => {\n        async function openAndFetchData () {\n            handleResetState()\n            await loadNotes()\n        }\n        openAndFetchData()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const handleResetState = () => {\n        setNewNote({ note: \"\" })\n        setLoading(false)\n    }\n\n    const handleChangeComment = (e) => {\n        setNewNote({ note: e.target.value })\n    }\n\n    const handleSave = async values => {\n        setLoading(true)\n        try {\n            await saveNote({\n                ...values,\n                ticketId,\n                contactId\n            })\n            await loadNotes()\n            setNewNote({ note: '' })\n            toast.success('Observação adicionada com sucesso!')\n        } catch (e) {\n            toast.error(e)\n        }\n        setLoading(false)\n    }\n\n    const handleOpenDialogDelete = (item) => {\n        setSelectedNote(item)\n        setShowOnDeleteDialog(true)\n    }\n\n    const handleDelete = async () => {\n        setLoading(true)\n        try {\n            await deleteNote(selectedNote.id)\n            await loadNotes()\n            setSelectedNote({})\n            toast.success('Observação excluída com sucesso!')\n        } catch (e) {\n            toast.error(e)\n        }\n        setLoading(false)\n    }\n\n    const loadNotes = async () => {\n        setLoading(true)\n        try {\n            const notes = await listNotes({ ticketId, contactId })\n            setNotes(notes)\n        } catch (e) {\n            toast.error(e)\n        }\n        setLoading(false)\n    }\n\n    const renderNoteList = () => {\n        return notes.map((note) => {\n            return <ContactNotesDialogListItem\n                note={note}\n                key={note.id}\n                deleteItem={handleOpenDialogDelete}\n            />\n        })\n    }\n\n    return (\n        <>\n            <ConfirmationModal\n                title=\"Excluir Registro\"\n                open={showOnDeleteDialog}\n                onClose={setShowOnDeleteDialog}\n                onConfirm={handleDelete}\n            >\n                Deseja realmente excluir este registro?\n            </ConfirmationModal>\n            <Formik\n                initialValues={newNote}\n                enableReinitialize={true}\n                validationSchema={NoteSchema}\n                onSubmit={(values, actions) => {\n                    setTimeout(() => {\n                        handleSave(values);\n                        actions.setSubmitting(false);\n                    }, 400);\n                }}\n            >\n\n                {({ touched, errors, setErrors }) => (\n                    <Form>\n                        <Grid container spacing={2}>\n                            <Grid xs={12} item>\n                                <Field\n                                    as={TextField}\n                                    name=\"note\"\n                                    rows={3}\n                                    label={i18n.t(\"ticketOptionsMenu.appointmentsModal.textarea\")}\n                                    placeholder={i18n.t(\"ticketOptionsMenu.appointmentsModal.placeholder\")}\n                                    multiline={true}\n                                    error={touched.note && Boolean(errors.note)}\n                                    helperText={touched.note && errors.note}\n                                    variant=\"outlined\"\n                                    onChange={handleChangeComment}\n                                    fullWidth\n                                />\n                            </Grid>\n                            { notes.length > 0 && (\n                                <Grid xs={12} item>\n                                    <List className={classes.list}>\n                                        { renderNoteList() }\n                                    </List>\n                                </Grid>\n                            ) }\n                            <Grid xs={12} item>\n                                <Grid container spacing={2}>\n                                    <Grid xs={6} item>\n                                        <Button\n                                            onClick={() => {\n                                                setNewNote(\"\");\n                                                setErrors({});\n                                            }}\n                                            color=\"primary\"\n                                            variant=\"outlined\"\n                                            fullWidth\n                                        >\n                                            Cancelar\n                                        </Button>\n                                    </Grid>\n                                    <Grid xs={6} item>\n                                        <ButtonWithSpinner loading={loading} color=\"primary\" type=\"submit\" variant=\"contained\" autoFocus fullWidth>\n                                            Salvar\n                                        </ButtonWithSpinner>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Form>\n                )}\n            </Formik>\n        </>\n    );\n}","import React, { useEffect, useState } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Link from \"@material-ui/core/Link\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CreateIcon from '@material-ui/icons/Create';\n\nimport { i18n } from \"../../translate/i18n\";\n\nimport ContactDrawerSkeleton from \"../ContactDrawerSkeleton\";\nimport MarkdownWrapper from \"../MarkdownWrapper\";\nimport { CardHeader } from \"@material-ui/core\";\nimport { ContactForm } from \"../ContactForm\";\nimport ContactModal from \"../ContactModal\";\nimport { ContactNotes } from \"../ContactNotes\";\n\nconst drawerWidth = 320;\n\nconst useStyles = makeStyles(theme => ({\n\tdrawer: {\n\t\twidth: drawerWidth,\n\t\tflexShrink: 0,\n\t},\n\tdrawerPaper: {\n\t\twidth: drawerWidth,\n\t\tdisplay: \"flex\",\n\t\tborderTop: \"1px solid rgba(0, 0, 0, 0.12)\",\n\t\tborderRight: \"1px solid rgba(0, 0, 0, 0.12)\",\n\t\tborderBottom: \"1px solid rgba(0, 0, 0, 0.12)\",\n\t\tborderTopRightRadius: 4,\n\t\tborderBottomRightRadius: 4,\n\t},\n\theader: {\n\t\tdisplay: \"flex\",\n\t\tborderBottom: \"1px solid rgba(0, 0, 0, 0.12)\",\n\t\tbackground: theme.palette.total,\n\t\talignItems: \"center\",\n\t\tpadding: theme.spacing(0, 1),\n\t\tminHeight: \"73px\",\n\t\tjustifyContent: \"flex-start\",\n\t},\n\tcontent: {\n\t\tdisplay: \"flex\",\n\t\tbackground: theme.palette.total,\n\t\tflexDirection: \"column\",\n\t\tpadding: \"8px 0px 8px 8px\",\n\t\theight: \"100%\",\n\t\toverflowY: \"scroll\",\n\t\t...theme.scrollbarStyles,\n\t},\n\n\tcontactAvatar: {\n\t\tmargin: 15,\n\t\twidth: 100,\n\t\theight: 100,\n\t},\n\n\tcontactHeader: {\n\t\tdisplay: \"flex\",\n\t\tpadding: 8,\n\t\tflexDirection: \"column\",\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\",\n\t\t\"& > *\": {\n\t\t\tmargin: 4,\n\t\t},\n\t},\n\n\tcontactDetails: {\n\t\tmarginTop: 8,\n\t\tpadding: 8,\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"column\",\n\t},\n\tcontactExtraInfo: {\n\t\tmarginTop: 4,\n\t\tpadding: 6,\n\t},\n}));\n\nconst ContactDrawer = ({ open, handleDrawerClose, contact, ticket, loading }) => {\n\tconst classes = useStyles();\n\n\tconst [modalOpen, setModalOpen] = useState(false);\n\tconst [openForm, setOpenForm] = useState(false);\n\n\tuseEffect(() => {\n\t\tsetOpenForm(false);\n\t}, [open, contact]);\n\n\treturn (\n\t\t<>\n\t\t\t<Drawer\n\t\t\t\tclassName={classes.drawer}\n\t\t\t\tvariant=\"persistent\"\n\t\t\t\tanchor=\"right\"\n\t\t\t\topen={open}\n\t\t\t\tPaperProps={{ style: { position: \"absolute\" } }}\n\t\t\t\tBackdropProps={{ style: { position: \"absolute\" } }}\n\t\t\t\tModalProps={{\n\t\t\t\t\tcontainer: document.getElementById(\"drawer-container\"),\n\t\t\t\t\tstyle: { position: \"absolute\" },\n\t\t\t\t}}\n\t\t\t\tclasses={{\n\t\t\t\t\tpaper: classes.drawerPaper,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<div className={classes.header}>\n\t\t\t\t\t<IconButton onClick={handleDrawerClose}>\n\t\t\t\t\t\t<CloseIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<Typography style={{ justifySelf: \"center\" }}>\n\t\t\t\t\t\t{i18n.t(\"contactDrawer.header\")}\n\t\t\t\t\t</Typography>\n\t\t\t\t</div>\n\t\t\t\t{loading ? (\n\t\t\t\t\t<ContactDrawerSkeleton classes={classes} />\n\t\t\t\t) : (\n\t\t\t\t\t<div className={classes.content}>\n\t\t\t\t\t\t<Paper square variant=\"outlined\" className={classes.contactHeader}>\n\t\t\t\t\t\t\t<CardHeader\n\t\t\t\t\t\t\t\tonClick={() => {}}\n\t\t\t\t\t\t\t\tstyle={{ cursor: \"pointer\", width: '100%' }}\n\t\t\t\t\t\t\t\ttitleTypographyProps={{ noWrap: true }}\n\t\t\t\t\t\t\t\tsubheaderTypographyProps={{ noWrap: true }}\n\t\t\t\t\t\t\t\tavatar={<Avatar src={contact.profilePicUrl} alt=\"contact_image\" style={{ width: 60, height: 60 }} />}\n\t\t\t\t\t\t\t\ttitle={\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<Typography onClick={() => setOpenForm(true)}>\n\t\t\t\t\t\t\t\t\t\t\t{contact.name}\n\t\t\t\t\t\t\t\t\t\t\t<CreateIcon style={{fontSize: 16, marginLeft: 5}} />\n\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tsubheader={\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<Typography style={{fontSize: 12}}>\n\t\t\t\t\t\t\t\t\t\t\t<Link href={`tel:${contact.number}`}>{contact.number}</Link>\n\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t<Typography style={{fontSize: 12}}>\n\t\t\t\t\t\t\t\t\t\t\t<Link href={`mailto:${contact.email}`}>{contact.email}</Link>\n\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tonClick={() => setModalOpen(!openForm)}\n\t\t\t\t\t\t\t\tstyle={{fontSize: 12}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{i18n.t(\"contactDrawer.buttons.edit\")}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t{(contact.id && openForm) && <ContactForm initialContact={contact} onCancel={() => setOpenForm(false)} />}\n\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t<Paper square variant=\"outlined\" className={classes.contactDetails}>\n\t\t\t\t\t\t\t<Typography variant=\"subtitle1\" style={{marginBottom: 10}}>\n\t\t\t\t\t\t\t\t{i18n.t(\"ticketOptionsMenu.appointmentsModal.title\")}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<ContactNotes ticket={ticket} />\n\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t<Paper square variant=\"outlined\" className={classes.contactDetails}>\n\t\t\t\t\t\t\t<ContactModal\n\t\t\t\t\t\t\t\topen={modalOpen}\n\t\t\t\t\t\t\t\tonClose={() => setModalOpen(false)}\n\t\t\t\t\t\t\t\tcontactId={contact.id}\n\t\t\t\t\t\t\t></ContactModal>\n\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">\n\t\t\t\t\t\t\t\t{i18n.t(\"contactDrawer.extraInfo\")}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t{contact?.extraInfo?.map(info => (\n\t\t\t\t\t\t\t\t<Paper\n\t\t\t\t\t\t\t\t\tkey={info.id}\n\t\t\t\t\t\t\t\t\tsquare\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tclassName={classes.contactExtraInfo}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<InputLabel>{info.name}</InputLabel>\n\t\t\t\t\t\t\t\t\t<Typography component=\"div\" noWrap style={{ paddingTop: 2 }}>\n\t\t\t\t\t\t\t\t\t\t<MarkdownWrapper>{info.value}</MarkdownWrapper>\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Paper>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</Drawer>\n\t\t</>\n\t);\n};\n\nexport default ContactDrawer;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n\ttimerBox: {\n\t\tdisplay: \"flex\",\n\t\tmarginLeft: 10,\n\t\tmarginRight: 10,\n\t\talignItems: \"center\",\n\t},\n}));\n\nconst RecordingTimer = () => {\n\tconst classes = useStyles();\n\tconst initialState = {\n\t\tminutes: 0,\n\t\tseconds: 0,\n\t};\n\tconst [timer, setTimer] = useState(initialState);\n\n\tuseEffect(() => {\n\t\tconst interval = setInterval(\n\t\t\t() =>\n\t\t\t\tsetTimer(prevState => {\n\t\t\t\t\tif (prevState.seconds === 59) {\n\t\t\t\t\t\treturn { ...prevState, minutes: prevState.minutes + 1, seconds: 0 };\n\t\t\t\t\t}\n\t\t\t\t\treturn { ...prevState, seconds: prevState.seconds + 1 };\n\t\t\t\t}),\n\t\t\t1000\n\t\t);\n\t\treturn () => {\n\t\t\tclearInterval(interval);\n\t\t};\n\t}, []);\n\n\tconst addZero = n => {\n\t\treturn n < 10 ? \"0\" + n : n;\n\t};\n\n\treturn (\n\t\t<div className={classes.timerBox}>\n\t\t\t<span>{`${addZero(timer.minutes)}:${addZero(timer.seconds)}`}</span>\n\t\t</div>\n\t);\n};\n\nexport default RecordingTimer;\n","import api from \"../../services/api\";\n\nconst useQuickMessages = () => {\n\n    const save = async (data) => {\n        const { data: responseData } = await api.request({\n            url: '/quick-messages',\n            method: 'POST',\n            data\n        });\n        return responseData;\n    }\n\n    const update = async (data) => {\n        const { data: responseData } = await api.request({\n            url: `/quick-messages/${data.id}`,\n            method: 'PUT',\n            data\n        });\n        return responseData;\n    }\n\n    const deleteRecord = async (id) => {\n        const { data } = await api.request({\n            url: `/quick-messages/${id}`,\n            method: 'DELETE'\n        });\n        return data;\n    }\n\n    const list = async (params) => {\n        const { data } = await api.request({\n            url: '/quick-messages/list',\n            method: 'GET',\n            params\n        });\n        return data;\n    }\n\n    return {\n        save,\n        update,\n        deleteRecord,\n        list\n    }\n}\n\nexport default useQuickMessages;","import React, { useState, useEffect, useContext, useRef } from \"react\";\nimport withWidth, { isWidthUp } from \"@material-ui/core/withWidth\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { Picker } from \"emoji-mart\";\nimport MicRecorder from \"mic-recorder-to-mp3\";\nimport clsx from \"clsx\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { green } from \"@material-ui/core/colors\";\nimport AttachFileIcon from \"@material-ui/icons/AttachFile\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MoodIcon from \"@material-ui/icons/Mood\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport { FormControlLabel, Switch } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { isString, isEmpty, isObject, has } from \"lodash\";\n\nimport { i18n } from \"../../translate/i18n\";\nimport api from \"../../services/api\";\nimport RecordingTimer from \"./RecordingTimer\";\nimport { ReplyMessageContext } from \"../../context/ReplyingMessage/ReplyingMessageContext\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { useLocalStorage } from \"../../hooks/useLocalStorage\";\nimport toastError from \"../../errors/toastError\";\n\nimport useQuickMessages from \"../../hooks/useQuickMessages\";\n\nconst Mp3Recorder = new MicRecorder({ bitRate: 128 });\n\nconst useStyles = makeStyles((theme) => ({\n  mainWrapper: {\n    background: theme.palette.tabHeaderBackground,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    borderTop: \"1px solid rgba(0, 0, 0, 0.12)\",\n  },\n\n  newMessageBox: {\n    background: theme.palette.tabHeaderBackground,\n    width: \"100%\",\n    display: \"flex\",\n    padding: \"7px\",\n    alignItems: \"center\",\n  },\n\n  messageInputWrapper: {\n    padding: 6,\n    marginRight: 7,\n    background: theme.palette.total,\n    display: \"flex\",\n    borderRadius: 20,\n    flex: 1,\n  },\n\n  messageInput: {\n    paddingLeft: 10,\n    flex: 1,\n    border: \"none\",\n  },\n\n  sendMessageIcons: {\n    color: \"grey\",\n  },\n\n  uploadInput: {\n    display: \"none\",\n  },\n\n  viewMediaInputWrapper: {\n    display: \"flex\",\n    padding: \"10px 13px\",\n    position: \"relative\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    backgroundColor: \"#eee\",\n    borderTop: \"1px solid rgba(0, 0, 0, 0.12)\",\n  },\n\n  emojiBox: {\n    position: \"absolute\",\n    bottom: 63,\n    width: 40,\n    borderTop: \"1px solid #e8e8e8\",\n  },\n\n  circleLoading: {\n    color: green[500],\n    opacity: \"70%\",\n    position: \"absolute\",\n    top: \"20%\",\n    left: \"50%\",\n    marginLeft: -12,\n  },\n\n  audioLoading: {\n    color: green[500],\n    opacity: \"70%\",\n  },\n\n  recorderWrapper: {\n    display: \"flex\",\n    alignItems: \"center\",\n    alignContent: \"middle\",\n  },\n\n  cancelAudioIcon: {\n    color: \"red\",\n  },\n\n  sendAudioIcon: {\n    color: \"green\",\n  },\n\n  replyginMsgWrapper: {\n    display: \"flex\",\n    width: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingTop: 8,\n    paddingLeft: 73,\n    paddingRight: 7,\n  },\n\n  replyginMsgContainer: {\n    flex: 1,\n    marginRight: 5,\n    overflowY: \"hidden\",\n    backgroundColor: \"rgba(0, 0, 0, 0.05)\",\n    borderRadius: \"7.5px\",\n    display: \"flex\",\n    position: \"relative\",\n  },\n\n  replyginMsgBody: {\n    padding: 10,\n    height: \"auto\",\n    display: \"block\",\n    whiteSpace: \"pre-wrap\",\n    overflow: \"hidden\",\n  },\n\n  replyginContactMsgSideColor: {\n    flex: \"none\",\n    width: \"4px\",\n    backgroundColor: \"#35cd96\",\n  },\n\n  replyginSelfMsgSideColor: {\n    flex: \"none\",\n    width: \"4px\",\n    backgroundColor: \"#6bcbef\",\n  },\n\n  messageContactName: {\n    display: \"flex\",\n    color: \"#6bcbef\",\n    fontWeight: 500,\n  },\n}));\n\nconst EmojiOptions = (props) => {\n  const { disabled, showEmoji, setShowEmoji, handleAddEmoji } = props;\n  const classes = useStyles();\n  return (\n    <>\n      <IconButton\n        aria-label=\"emojiPicker\"\n        component=\"span\"\n        disabled={disabled}\n        onClick={(e) => setShowEmoji((prevState) => !prevState)}\n      >\n        <MoodIcon className={classes.sendMessageIcons} />\n      </IconButton>\n      {showEmoji ? (\n        <div className={classes.emojiBox}>\n          <Picker\n            perLine={16}\n            showPreview={false}\n            showSkinTones={false}\n            onSelect={handleAddEmoji}\n          />\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nconst SignSwitch = (props) => {\n  const { width, setSignMessage, signMessage } = props;\n  if (isWidthUp(\"md\", width)) {\n    return (\n      <FormControlLabel\n        style={{ marginRight: 7, color: \"gray\" }}\n        label={i18n.t(\"messagesInput.signMessage\")}\n        labelPlacement=\"start\"\n        control={\n          <Switch\n            size=\"small\"\n            checked={signMessage}\n            onChange={(e) => {\n              setSignMessage(e.target.checked);\n            }}\n            name=\"showAllTickets\"\n            color=\"primary\"\n          />\n        }\n      />\n    );\n  }\n  return null;\n};\n\nconst FileInput = (props) => {\n  const { handleChangeMedias, disableOption } = props;\n  const classes = useStyles();\n  return (\n    <>\n      <input\n        multiple\n        type=\"file\"\n        id=\"upload-button\"\n        disabled={disableOption()}\n        className={classes.uploadInput}\n        onChange={handleChangeMedias}\n      />\n      <label htmlFor=\"upload-button\">\n        <IconButton\n          aria-label=\"upload\"\n          component=\"span\"\n          disabled={disableOption()}\n        >\n          <AttachFileIcon className={classes.sendMessageIcons} />\n        </IconButton>\n      </label>\n    </>\n  );\n};\n\nconst ActionButtons = (props) => {\n  const {\n    inputMessage,\n    loading,\n    recording,\n    ticketStatus,\n    handleSendMessage,\n    handleCancelAudio,\n    handleUploadAudio,\n    handleStartRecording,\n  } = props;\n  const classes = useStyles();\n  if (inputMessage) {\n    return (\n      <IconButton\n        aria-label=\"sendMessage\"\n        component=\"span\"\n        onClick={handleSendMessage}\n        disabled={loading}\n      >\n        <SendIcon className={classes.sendMessageIcons} />\n      </IconButton>\n    );\n  } else if (recording) {\n    return (\n      <div className={classes.recorderWrapper}>\n        <IconButton\n          aria-label=\"cancelRecording\"\n          component=\"span\"\n          fontSize=\"large\"\n          disabled={loading}\n          onClick={handleCancelAudio}\n        >\n          <HighlightOffIcon className={classes.cancelAudioIcon} />\n        </IconButton>\n        {loading ? (\n          <div>\n            <CircularProgress className={classes.audioLoading} />\n          </div>\n        ) : (\n          <RecordingTimer />\n        )}\n\n        <IconButton\n          aria-label=\"sendRecordedAudio\"\n          component=\"span\"\n          onClick={handleUploadAudio}\n          disabled={loading}\n        >\n          <CheckCircleOutlineIcon className={classes.sendAudioIcon} />\n        </IconButton>\n      </div>\n    );\n  } else {\n    return (\n      <IconButton\n        aria-label=\"showRecorder\"\n        component=\"span\"\n        disabled={loading || ticketStatus !== \"open\"}\n        onClick={handleStartRecording}\n      >\n        <MicIcon className={classes.sendMessageIcons} />\n      </IconButton>\n    );\n  }\n};\n\nconst CustomInput = (props) => {\n  const {\n    loading,\n    inputRef,\n    ticketStatus,\n    inputMessage,\n    setInputMessage,\n    handleSendMessage,\n    handleInputPaste,\n    disableOption,\n    setMedias,\n    setMediaUrl\n  } = props;\n  const classes = useStyles();\n  const [quickMessages, setQuickMessages] = useState([]);\n  const [options, setOptions] = useState([]);\n  const [popupOpen, setPopupOpen] = useState(false);\n\n\n  const { user } = useContext(AuthContext);\n\n\n  const { list: listQuickMessages } = useQuickMessages();\n\n  useEffect(() => {\n    async function fetchData() {\n      const companyId = localStorage.getItem(\"companyId\");\n      const messages = await listQuickMessages({ companyId, userId: user.id });\n\n      const options = messages.map((m) => {\n        let truncatedMessage = m.message;\n        if (isString(truncatedMessage) && truncatedMessage.length > 35) {\n          truncatedMessage = m.message.substring(0, 35) + \"...\";\n        }\n        return {\n          value: m.message,\n          label: `/${m.shortcode} - ${truncatedMessage}`,\n          mediaPath: m.mediaPath,\n        };\n      });\n      setQuickMessages(options);\n    }\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (\n      isString(inputMessage) &&\n      !isEmpty(inputMessage) &&\n      inputMessage.length > 1\n    ) {\n      const firstWord = inputMessage.charAt(0);\n      setPopupOpen(firstWord.indexOf(\"/\") > -1);\n\n      const filteredOptions = quickMessages.filter(\n        (m) => m.label.indexOf(inputMessage) > -1\n      );\n      setOptions(filteredOptions);\n    } else {\n      setPopupOpen(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [inputMessage]);\n\n  const onKeyPress = (e) => {\n\n    if (loading || e.shiftKey) return;\n    else if (e.key === \"Enter\") {\n      const response = disableOption();\n      if (response) {\n        toastError(\"Não é possível enviar mensagens para o status atual do ticket.\");\n        setInputMessage(\"\");\n        return;\n      }\n\n      handleSendMessage();\n    }\n  };\n\n  const onPaste = (e) => {\n\n    if (ticketStatus === \"open\") {\n      handleInputPaste(e);\n    }\n  };\n\n  const renderPlaceholder = () => {\n    if (ticketStatus === \"open\") {\n      return i18n.t(\"messagesInput.placeholderOpen\");\n    }\n    return i18n.t(\"messagesInput.placeholderClosed\");\n  };\n\n  const setInputRef = (input) => {\n    if (input) {\n      input.focus();\n      inputRef.current = input;\n    }\n  };\n\n  const handleDrop = (event) => {\n    event.preventDefault();\n\n    console.log('dropped')\n\n    const droppedFiles = Array.from(event.dataTransfer.files);\n    setMedias(droppedFiles);\n    event.dataTransfer.clearData();\n  };\n\n  const handleDragOver = (event) => {\n\n    console.log('drag over')\n\n    event.preventDefault();\n\n    event.dataTransfer.dropEffect = 'copy';\n  };\n\n  return (\n    <div className={classes.messageInputWrapper}>\n      <Autocomplete\n        style={{ color: '#000' }}\n        freeSolo\n        open={popupOpen}\n        id=\"grouped-demo\"\n        value={inputMessage}\n        options={options}\n        closeIcon={null}\n        getOptionLabel={(option) => {\n          if (isObject(option)) {\n            return option.label;\n          } else {\n            return option;\n          }\n        }}\n\n        onChange={(event, opt) => {\n          if (isObject(opt) && has(opt, \"value\")) {\n            setInputMessage(opt.value);\n            setMediaUrl(opt.mediaPath);\n\n            console.log(opt);\n\n            setTimeout(() => {\n              inputRef.current.scrollTop = inputRef.current.scrollHeight;\n            }, 200);\n          }\n        }}\n\n        onInputChange={(event, opt, reason) => {\n          if (reason === \"input\") {\n            setInputMessage(event.target.value);\n          }\n        }}\n\n        onDrop={handleDrop}\n        onDragOver={handleDragOver}\n\n\n\n\n        onPaste={onPaste}\n        onKeyPress={onKeyPress}\n        style={{ width: \"100%\" }}\n        renderInput={(params) => {\n          const { InputLabelProps, InputProps, ...rest } = params;\n          return (\n            <InputBase\n              {...params.InputProps}\n              {...rest}\n              disabled={disableOption()}\n              inputRef={setInputRef}\n              placeholder={renderPlaceholder()}\n              multiline\n              draggable\n              className={classes.messageInput}\n              maxRows={5}\n            />\n          );\n        }}\n\n\n\n      />\n    </div>\n  );\n};\n\nconst MessageInputCustom = (props) => {\n\n  const { ticket: { status, id, isWorking, userId } } = props;\n  const classes = useStyles();\n\n\n  const [inputMessage, setInputMessage] = useState(\"\");\n  const [showEmoji, setShowEmoji] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [recording, setRecording] = useState(false);\n  const inputRef = useRef();\n  const { setReplyingMessage, replyingMessage, medias, setMedias } = useContext(ReplyMessageContext);\n\n  const { user } = useContext(AuthContext);\n\n  const [signMessage, setSignMessage] = useLocalStorage(\"signOption\", true);\n  const [mediaUrl, setMediaUrl] = useState(null);\n\n  useEffect(() => {\n    inputRef.current.focus();\n  }, [replyingMessage]);\n\n  useEffect(() => {\n    inputRef.current.focus();\n    return () => {\n      setInputMessage(\"\");\n      setShowEmoji(false);\n      setMedias([]);\n      setReplyingMessage(null);\n    };\n  }, [id, setReplyingMessage]);\n\n\n  const handleAddEmoji = (e) => {\n\n    if (!itsMe()) return;\n\n    let emoji = e.native;\n    setInputMessage((prevState) => prevState + emoji);\n  };\n\n  const handleChangeMedias = (e) => {\n\n\n    if (!e.target.files) {\n      return;\n    }\n\n    const selectedMedias = Array.from(e.target.files);\n    setMedias(selectedMedias);\n  };\n\n  const handleInputPaste = (e) => {\n\n    if (!itsMe()) return;\n\n    if (e.clipboardData.files[0]) {\n      setMedias([e.clipboardData.files[0]]);\n    }\n  };\n\n  const handleUploadMedia = async (e) => {\n\n    if (!itsMe()) return;\n\n    setLoading(true);\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.append(\"fromMe\", true);\n    medias.forEach((media) => {\n      formData.append(\"medias\", media);\n      formData.append(\"body\", media.name);\n    });\n\n    try {\n      await api.post(`/messages/${id}`, formData);\n    } catch (err) {\n      toastError(err);\n    }\n\n    setLoading(false);\n    setMedias([]);\n  };\n\n  const itsMe = () => {\n\n    if (user.id === userId || user.profile === 'admin') return true;\n\n    toastError(\"Esse ticket não está atribuído ao seu usuário.\");\n\n    setInputMessage(\"\");\n    setShowEmoji(false);\n    setLoading(false);\n    setReplyingMessage(null);\n\n    return false;\n\n  }\n\n  const handleSendMessage = async () => {\n\n    if (!itsMe()) return;\n\n    if (inputMessage.trim() === \"\") return;\n    setLoading(true);\n\n    const message = {\n      read: 1,\n      fromMe: true,\n      mediaUrl: mediaUrl,\n      body: signMessage\n        ? `*${user?.name}:*\\n${inputMessage.trim()}`\n        : inputMessage.trim(),\n      quotedMsg: replyingMessage,\n    };\n    try {\n      await api.post(`/messages/${id}`, message);\n    } catch (err) {\n      toastError(err);\n    }\n\n    setInputMessage(\"\");\n    setShowEmoji(false);\n    setLoading(false);\n    setReplyingMessage(null);\n    setMediaUrl(null);\n\n  };\n\n  const handleStartRecording = async () => {\n\n    if (!itsMe()) return;\n\n    setLoading(true);\n    try {\n      await navigator.mediaDevices.getUserMedia({ audio: true });\n      await Mp3Recorder.start();\n      setRecording(true);\n      setLoading(false);\n    } catch (err) {\n      toastError(err);\n      setLoading(false);\n    }\n  };\n\n  const handleUploadAudio = async () => {\n\n    if (!itsMe()) return;\n\n    setLoading(true);\n    try {\n      const [, blob] = await Mp3Recorder.stop().getMp3();\n      if (blob.size < 10000) {\n        setLoading(false);\n        setRecording(false);\n        return;\n      }\n\n      const formData = new FormData();\n      const filename = `audio-record-site-${new Date().getTime()}.mp3`;\n      formData.append(\"medias\", blob, filename);\n      formData.append(\"body\", filename);\n      formData.append(\"fromMe\", true);\n\n      await api.post(`/messages/${id}`, formData);\n    } catch (err) {\n      toastError(err);\n    }\n\n    setRecording(false);\n    setLoading(false);\n  };\n\n  const handleCancelAudio = async () => {\n    try {\n      await Mp3Recorder.stop().getMp3();\n      setRecording(false);\n    } catch (err) {\n      toastError(err);\n    }\n  };\n\n  const disableOption = () => {\n    return loading || recording || status !== \"open\";\n  };\n\n  const renderReplyingMessage = (message) => {\n    return (\n      <div className={classes.replyginMsgWrapper}>\n        <div className={classes.replyginMsgContainer}>\n          <span\n            className={clsx(classes.replyginContactMsgSideColor, {\n              [classes.replyginSelfMsgSideColor]: !message.fromMe,\n            })}\n          ></span>\n          <div className={classes.replyginMsgBody}>\n            {!message.fromMe && (\n              <span className={classes.messageContactName}>\n                {message.contact?.name}\n              </span>\n            )}\n            {message.body}\n          </div>\n        </div>\n        <IconButton\n          aria-label=\"showRecorder\"\n          component=\"span\"\n          disabled={loading || status !== \"open\"}\n          onClick={() => setReplyingMessage(null)}\n        >\n          <ClearIcon className={classes.sendMessageIcons} />\n        </IconButton>\n      </div>\n    );\n  };\n\n  if (medias && medias.length > 0)\n    return (\n      <Paper elevation={0} square className={classes.viewMediaInputWrapper}>\n        <IconButton\n          aria-label=\"cancel-upload\"\n          component=\"span\"\n          onClick={(e) => setMedias([])}\n        >\n          <CancelIcon className={classes.sendMessageIcons} />\n        </IconButton>\n\n        {loading ? (\n          <div>\n            <CircularProgress className={classes.circleLoading} />\n          </div>\n        ) : (\n          <span>\n            {medias[0]?.name}\n            {/* <img src={media.preview} alt=\"\"></img> */}\n          </span>\n        )}\n        <IconButton\n          aria-label=\"send-upload\"\n          component=\"span\"\n          onClick={handleUploadMedia}\n          disabled={loading}\n        >\n          <SendIcon className={classes.sendMessageIcons} />\n        </IconButton>\n      </Paper>\n    );\n  else {\n    return (\n      <Paper square elevation={0} className={classes.mainWrapper}>\n        {replyingMessage && renderReplyingMessage(replyingMessage)}\n        <div className={classes.newMessageBox}>\n          <EmojiOptions\n            disabled={disableOption()}\n            handleAddEmoji={handleAddEmoji}\n            showEmoji={showEmoji}\n            setShowEmoji={setShowEmoji}\n          />\n\n          <FileInput\n            disableOption={disableOption}\n            handleChangeMedias={handleChangeMedias}\n          />\n          {user.profile === 'admin' && (\n\n            <SignSwitch\n              width={props.width}\n              setSignMessage={setSignMessage}\n              signMessage={signMessage}\n            />\n          )}\n\n          <CustomInput\n            loading={loading}\n            inputRef={inputRef}\n            ticketStatus={status}\n            inputMessage={inputMessage}\n            setInputMessage={setInputMessage}\n            // handleChangeInput={handleChangeInput}\n            handleSendMessage={handleSendMessage}\n            handleInputPaste={handleInputPaste}\n            disableOption={disableOption}\n            setMedias={setMedias}\n            setMediaUrl={setMediaUrl}\n          />\n\n          <ActionButtons\n            inputMessage={inputMessage}\n            loading={loading}\n            recording={recording}\n            ticketStatus={status}\n            handleSendMessage={handleSendMessage}\n            handleCancelAudio={handleCancelAudio}\n            handleUploadAudio={handleUploadAudio}\n            handleStartRecording={handleStartRecording}\n          />\n        </div>\n      </Paper>\n    );\n  }\n};\n\nexport default withWidth()(MessageInputCustom);\n","import { useState } from \"react\";\nimport toastError from \"../../errors/toastError\";\n\nexport function useLocalStorage(key, initialValue) {\n\tconst [storedValue, setStoredValue] = useState(() => {\n\t\ttry {\n\t\t\tconst item = localStorage.getItem(key);\n\t\t\treturn item ? JSON.parse(item) : initialValue;\n\t\t} catch (error) {\n\t\t\ttoastError(error);\n\t\t\treturn initialValue;\n\t\t}\n\t});\n\n\tconst setValue = value => {\n\t\ttry {\n\t\t\tconst valueToStore =\n\t\t\t\tvalue instanceof Function ? value(storedValue) : value;\n\n\t\t\tsetStoredValue(valueToStore);\n\n\t\t\tlocalStorage.setItem(key, JSON.stringify(valueToStore));\n\t\t} catch (error) {\n\t\t\ttoastError(error);\n\t\t}\n\t};\n\n\treturn [storedValue, setValue];\n}\n","import api from \"../../services/api\";\n\nconst useQueues = () => {\n\tconst findAll = async () => {\n        const { data } = await api.get(\"/queue\");\n        return data;\n    }\n\n\treturn { findAll };\n};\n\nexport default useQueues;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { makeStyles } from \"@material-ui/core\";\n\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Autocomplete, {\n  createFilterOptions,\n} from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport { i18n } from \"../../translate/i18n\";\nimport api from \"../../services/api\";\nimport ButtonWithSpinner from \"../ButtonWithSpinner\";\nimport toastError from \"../../errors/toastError\";\nimport useQueues from \"../../hooks/useQueues\";\n\nconst useStyles = makeStyles((theme) => ({\n  maxWidth: {\n    width: \"100%\",\n  },\n}));\n\nconst filterOptions = createFilterOptions({\n  trim: true,\n});\n\nconst TransferTicketModalCustom = ({ modalOpen, onClose, ticketid }) => {\n  const history = useHistory();\n  const [options, setOptions] = useState([]);\n  const [queues, setQueues] = useState([]);\n  const [allQueues, setAllQueues] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchParam, setSearchParam] = useState(\"\");\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [selectedQueue, setSelectedQueue] = useState(\"\");\n  const classes = useStyles();\n  const { findAll: findAllQueues } = useQueues();\n  const isMounted = useRef(true);\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    if (isMounted.current) {\n      const loadQueues = async () => {\n        const list = await findAllQueues();\n        setAllQueues(list);\n        setQueues(list);\n      };\n      loadQueues();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (!modalOpen || searchParam.length < 3) {\n      setLoading(false);\n      return;\n    }\n    const delayDebounceFn = setTimeout(() => {\n      setLoading(true);\n      const fetchUsers = async () => {\n        try {\n          const { data } = await api.get(\"/users/\", {\n            params: { searchParam },\n          });\n          setOptions(data.users);\n          setLoading(false);\n        } catch (err) {\n          setLoading(false);\n          toastError(err);\n        }\n      };\n\n      fetchUsers();\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n  }, [searchParam, modalOpen]);\n\n  const handleClose = () => {\n    onClose();\n    setSearchParam(\"\");\n    setSelectedUser(null);\n  };\n\n  const handleSaveTicket = async (e) => {\n    e.preventDefault();\n    if (!ticketid) return;\n    if (!selectedQueue || selectedQueue === \"\") return;\n    setLoading(true);\n    try {\n      let data = {};\n\n      if (selectedUser) {\n        data.userId = selectedUser.id;\n      }\n\n      if (selectedQueue && selectedQueue !== null) {\n        data.queueId = selectedQueue;\n\n        if (!selectedUser) {\n          data.status = \"pending\";\n          data.userId = null;\n        }\n      }\n\n      await api.put(`/tickets/${ticketid}`, data);\n\n      history.push(`/tickets`);\n    } catch (err) {\n      setLoading(false);\n      toastError(err);\n    }\n  };\n\n  return (\n    <Dialog open={modalOpen} onClose={handleClose} maxWidth=\"lg\" scroll=\"paper\">\n      <form onSubmit={handleSaveTicket}>\n        <DialogTitle id=\"form-dialog-title\">\n          {i18n.t(\"transferTicketModal.title\")}\n        </DialogTitle>\n        <DialogContent dividers>\n          <Autocomplete\n            style={{ width: 300, marginBottom: 20 }}\n            getOptionLabel={(option) => `${option.name}`}\n            onChange={(e, newValue) => {\n              setSelectedUser(newValue);\n              if (newValue != null && Array.isArray(newValue.queues)) {\n                setQueues(newValue.queues);\n              } else {\n                setQueues(allQueues);\n                setSelectedQueue(\"\");\n              }\n            }}\n            options={options}\n            filterOptions={filterOptions}\n            freeSolo\n            autoHighlight\n            noOptionsText={i18n.t(\"transferTicketModal.noOptions\")}\n            loading={loading}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label={i18n.t(\"transferTicketModal.fieldLabel\")}\n                variant=\"outlined\"\n                autoFocus\n                onChange={(e) => setSearchParam(e.target.value)}\n                InputProps={{\n                  ...params.InputProps,\n                  endAdornment: (\n                    <React.Fragment>\n                      {loading ? (\n                        <CircularProgress color=\"inherit\" size={20} />\n                      ) : null}\n                      {params.InputProps.endAdornment}\n                    </React.Fragment>\n                  ),\n                }}\n              />\n            )}\n          />\n          <FormControl variant=\"outlined\" className={classes.maxWidth}>\n            <InputLabel>\n              {i18n.t(\"transferTicketModal.fieldQueueLabel\")}\n            </InputLabel>\n            <Select\n              value={selectedQueue}\n              onChange={(e) => setSelectedQueue(e.target.value)}\n              label={i18n.t(\"transferTicketModal.fieldQueuePlaceholder\")}\n            >\n              {queues.map((queue) => (\n                <MenuItem key={queue.id} value={queue.id}>\n                  {queue.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={handleClose}\n            color=\"secondary\"\n            disabled={loading}\n            variant=\"outlined\"\n          >\n            {i18n.t(\"transferTicketModal.buttons.cancel\")}\n          </Button>\n          <ButtonWithSpinner\n            variant=\"contained\"\n            type=\"submit\"\n            color=\"primary\"\n            loading={loading}\n          >\n            {i18n.t(\"transferTicketModal.buttons.ok\")}\n          </ButtonWithSpinner>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default TransferTicketModalCustom;","import React, { useState, useEffect, useContext } from \"react\";\n\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field } from \"formik\";\nimport { toast } from \"react-toastify\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport { i18n } from \"../../translate/i18n\";\n\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\nimport { FormControl } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport moment from \"moment\"\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { isArray, capitalize } from \"lodash\";\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t\tdisplay: \"flex\",\n\t\tflexWrap: \"wrap\",\n\t},\n\tmultFieldLine: {\n\t\tdisplay: \"flex\",\n\t\t\"& > *:not(:last-child)\": {\n\t\t\tmarginRight: theme.spacing(1),\n\t\t},\n\t},\n\n\tbtnWrapper: {\n\t\tposition: \"relative\",\n\t},\n\n\tbuttonProgress: {\n\t\tcolor: green[500],\n\t\tposition: \"absolute\",\n\t\ttop: \"50%\",\n\t\tleft: \"50%\",\n\t\tmarginTop: -12,\n\t\tmarginLeft: -12,\n\t},\n\tformControl: {\n\t\tmargin: theme.spacing(1),\n\t\tminWidth: 120,\n\t},\n}));\n\nconst ScheduleSchema = Yup.object().shape({\n\tbody: Yup.string()\n\t\t.min(5, \"Mensagem muito curta\")\n\t\t.required(\"Obrigatório\"),\n\tcontactId: Yup.number().required(\"Obrigatório\"),\n\tsendAt: Yup.string().required(\"Obrigatório\")\n});\n\nconst ScheduleModal = ({ open, onClose, scheduleId, contactId, cleanContact, reload }) => {\n\tconst classes = useStyles();\n\tconst history = useHistory();\n\tconst { user } = useContext(AuthContext);\n\n\tconst initialState = {\n\t\tbody: \"\",\n\t\tcontactId: \"\",\n\t\tsendAt: moment().add(1, 'hour').format('YYYY-MM-DDTHH:mm'),\n\t\tsentAt: \"\"\n\t};\n\n\tconst initialContact = {\n\t\tid: \"\",\n\t\tname: \"\"\n\t}\n\n\tconst [schedule, setSchedule] = useState(initialState);\n\tconst [currentContact, setCurrentContact] = useState(initialContact);\n\tconst [contacts, setContacts] = useState([initialContact]);\n\n\tuseEffect(() => {\n\t\tif (contactId && contacts.length) {\n\t\t\tconst contact = contacts.find(c => c.id === contactId);\n\t\t\tif (contact) {\n\t\t\t\tsetCurrentContact(contact);\n\t\t\t}\n\t\t}\n\t}, [contactId, contacts]);\n\n\tuseEffect(() => {\n\t\tconst { companyId } = user;\n\t\tif (open) {\n\t\t\ttry {\n\t\t\t\t(async () => {\n\t\t\t\t\tconst { data: contactList } = await api.get('/contacts/list', { params: { companyId: companyId } });\n\t\t\t\t\tlet customList = contactList.map((c) => ({id: c.id, name: c.name}));\n\t\t\t\t\tif (isArray(customList)) {\n\t\t\t\t\t\tsetContacts([{id: \"\", name: \"\"}, ...customList]);\n\t\t\t\t\t}\n\t\t\t\t\tif (contactId) {\n\t\t\t\t\t\tsetSchedule(prevState => {\n\t\t\t\t\t\t\treturn { ...prevState, contactId }\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!scheduleId) return;\n\n\t\t\t\t\tconst { data } = await api.get(`/schedules/${scheduleId}`);\n\t\t\t\t\tsetSchedule(prevState => {\n\t\t\t\t\t\treturn { ...prevState, ...data, sendAt: moment(data.sendAt).format('YYYY-MM-DDTHH:mm') };\n\t\t\t\t\t});\n\t\t\t\t\tsetCurrentContact(data.contact);\n\t\t\t\t})()\n\t\t\t} catch (err) {\n\t\t\t\ttoastError(err);\n\t\t\t}\n\t\t}\n\t}, [scheduleId, contactId, open, user]);\n\n\tconst handleClose = () => {\n\t\tonClose();\n\t\tsetSchedule(initialState);\n\t};\n\n\tconst handleSaveSchedule = async values => {\n\t\tconst scheduleData = { ...values, userId: user.id };\n\t\ttry {\n\t\t\tif (scheduleId) {\n\t\t\t\tawait api.put(`/schedules/${scheduleId}`, scheduleData);\n\t\t\t} else {\n\t\t\t\tawait api.post(\"/schedules\", scheduleData);\n\t\t\t}\n\t\t\ttoast.success(i18n.t(\"scheduleModal.success\"));\n\t\t\tif (typeof reload == 'function') {\n\t\t\t\treload();\n\t\t\t}\n\t\t\tif (contactId) {\n\t\t\t\tif (typeof cleanContact === 'function') {\n\t\t\t\t\tcleanContact();\n\t\t\t\t\thistory.push('/schedules');\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\ttoastError(err);\n\t\t}\n\t\tsetCurrentContact(initialContact);\n\t\tsetSchedule(initialState);\n\t\thandleClose();\n\t};\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Dialog\n\t\t\t\topen={open}\n\t\t\t\tonClose={handleClose}\n\t\t\t\tmaxWidth=\"xs\"\n\t\t\t\tfullWidth\n\t\t\t\tscroll=\"paper\"\n\t\t\t>\n\t\t\t\t<DialogTitle id=\"form-dialog-title\">\n\t\t\t\t\t{schedule.status === 'ERRO' ? 'Erro de Envio' : `Mensagem ${capitalize(schedule.status)}`}\n\t\t\t\t</DialogTitle>\n\t\t\t\t<Formik\n\t\t\t\t\tinitialValues={schedule}\n\t\t\t\t\tenableReinitialize={true}\n\t\t\t\t\tvalidationSchema={ScheduleSchema}\n\t\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\thandleSaveSchedule(values);\n\t\t\t\t\t\t\tactions.setSubmitting(false);\n\t\t\t\t\t\t}, 400);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{({ touched, errors, isSubmitting, values }) => (\n\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t<DialogContent dividers>\n\t\t\t\t\t\t\t\t<div className={classes.multFieldLine}>\n\t\t\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tvalue={currentContact}\n\t\t\t\t\t\t\t\t\t\t\toptions={contacts}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e, contact) => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst contactId = contact ? contact.id : '';\n\t\t\t\t\t\t\t\t\t\t\t\tsetSchedule({ ...schedule, contactId });\n\t\t\t\t\t\t\t\t\t\t\t\tsetCurrentContact(contact ? contact : initialContact);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tgetOptionLabel={(option) => option.name}\n\t\t\t\t\t\t\t\t\t\t\tgetOptionSelected={(option, value) => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn value.id === option.id\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\trenderInput={(params) => <TextField {...params} variant=\"outlined\" placeholder=\"Contato\" />}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<div className={classes.multFieldLine}>\n\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\tas={TextField}\n\t\t\t\t\t\t\t\t\t\trows={9}\n\t\t\t\t\t\t\t\t\t\tmultiline={true}\n\t\t\t\t\t\t\t\t\t\tlabel={i18n.t(\"scheduleModal.form.body\")}\n\t\t\t\t\t\t\t\t\t\tname=\"body\"\n\t\t\t\t\t\t\t\t\t\terror={touched.body && Boolean(errors.body)}\n\t\t\t\t\t\t\t\t\t\thelperText={touched.body && errors.body}\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<div className={classes.multFieldLine}>\n\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\tas={TextField}\n\t\t\t\t\t\t\t\t\t\tlabel={i18n.t(\"scheduleModal.form.sendAt\")}\n\t\t\t\t\t\t\t\t\t\ttype=\"datetime-local\"\n\t\t\t\t\t\t\t\t\t\tname=\"sendAt\"\n\t\t\t\t\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\t\t\t\t  shrink: true,\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\terror={touched.sendAt && Boolean(errors.sendAt)}\n\t\t\t\t\t\t\t\t\t\thelperText={touched.sendAt && errors.sendAt}\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tonClick={handleClose}\n\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{i18n.t(\"scheduleModal.buttons.cancel\")}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t{ (schedule.sentAt === null || schedule.sentAt === \"\") && (\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\tclassName={classes.btnWrapper}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{scheduleId\n\t\t\t\t\t\t\t\t\t\t\t? `${i18n.t(\"scheduleModal.buttons.okEdit\")}`\n\t\t\t\t\t\t\t\t\t\t\t: `${i18n.t(\"scheduleModal.buttons.okAdd\")}`}\n\t\t\t\t\t\t\t\t\t\t{isSubmitting && (\n\t\t\t\t\t\t\t\t\t\t\t<CircularProgress\n\t\t\t\t\t\t\t\t\t\t\t\tsize={24}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.buttonProgress}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t)}\n\t\t\t\t</Formik>\n\t\t\t</Dialog>\n\t\t</div>\n\t);\n};\n\nexport default ScheduleModal;","import React, { useContext, useEffect, useRef, useState } from \"react\";\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\n\nimport { i18n } from \"../../translate/i18n\";\nimport api from \"../../services/api\";\nimport ConfirmationModal from \"../ConfirmationModal\";\nimport TransferTicketModalCustom from \"../TransferTicketModalCustom\";\nimport toastError from \"../../errors/toastError\";\nimport { Can } from \"../Can\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\n\nimport ScheduleModal from \"../ScheduleModal\";\n\nconst TicketOptionsMenu = ({ ticket, menuOpen, handleClose, anchorEl }) => {\n\tconst [confirmationOpen, setConfirmationOpen] = useState(false);\n\tconst [transferTicketModalOpen, setTransferTicketModalOpen] = useState(false);\n\tconst isMounted = useRef(true);\n\tconst { user } = useContext(AuthContext);\n\n\tconst [scheduleModalOpen, setScheduleModalOpen] = useState(false);\n\tconst [contactId, setContactId] = useState(null);\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tisMounted.current = false;\n\t\t};\n\t}, []);\n\n\tconst handleDeleteTicket = async () => {\n\t\ttry {\n\t\t\tawait api.delete(`/tickets/${ticket.id}`);\n\t\t} catch (err) {\n\t\t\ttoastError(err);\n\t\t}\n\t};\n\n\tconst handleOpenConfirmationModal = e => {\n\t\tsetConfirmationOpen(true);\n\t\thandleClose();\n\t};\n\n\tconst handleOpenTransferModal = e => {\n\t\tsetTransferTicketModalOpen(true);\n\t\thandleClose();\n\t};\n\n\tconst handleCloseTransferTicketModal = () => {\n\t\tif (isMounted.current) {\n\t\t\tsetTransferTicketModalOpen(false);\n\t\t}\n\t};\n\n\tconst handleOpenScheduleModal = () => {\n\t\thandleClose();\n\t\tsetContactId(ticket.contact.id);\n\t\tsetScheduleModalOpen(true);\n\t}\n\n\tconst handleCloseScheduleModal = () => {\n\t\tsetScheduleModalOpen(false);\n\t\tsetContactId(null);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Menu\n\t\t\t\tid=\"menu-appbar\"\n\t\t\t\tanchorEl={anchorEl}\n\t\t\t\tgetContentAnchorEl={null}\n\t\t\t\tanchorOrigin={{\n\t\t\t\t\tvertical: \"bottom\",\n\t\t\t\t\thorizontal: \"right\",\n\t\t\t\t}}\n\t\t\t\tkeepMounted\n\t\t\t\ttransformOrigin={{\n\t\t\t\t\tvertical: \"top\",\n\t\t\t\t\thorizontal: \"right\",\n\t\t\t\t}}\n\t\t\t\topen={menuOpen}\n\t\t\t\tonClose={handleClose}\n\t\t\t>\n\t\t\t\t<MenuItem onClick={handleOpenScheduleModal}>\n\t\t\t\t\t{i18n.t(\"ticketOptionsMenu.schedule\")}\n\t\t\t\t</MenuItem>\n\t\t\t\t<MenuItem onClick={handleOpenTransferModal}>\n\t\t\t\t\t{i18n.t(\"ticketOptionsMenu.transfer\")}\n\t\t\t\t</MenuItem>\n\t\t\t\t<Can\n\t\t\t\t\trole={user.profile}\n\t\t\t\t\tperform=\"ticket-options:deleteTicket\"\n\t\t\t\t\tyes={() => (\n\t\t\t\t\t\t<MenuItem onClick={handleOpenConfirmationModal}>\n\t\t\t\t\t\t\t{i18n.t(\"ticketOptionsMenu.delete\")}\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t</Menu>\n\t\t\t<ConfirmationModal\n\t\t\t\ttitle={`${i18n.t(\"ticketOptionsMenu.confirmationModal.title\")}${\n\t\t\t\t\tticket.id\n\t\t\t\t} ${i18n.t(\"ticketOptionsMenu.confirmationModal.titleFrom\")} ${\n\t\t\t\t\tticket.contact.name\n\t\t\t\t}?`}\n\t\t\t\topen={confirmationOpen}\n\t\t\t\tonClose={setConfirmationOpen}\n\t\t\t\tonConfirm={handleDeleteTicket}\n\t\t\t>\n\t\t\t\t{i18n.t(\"ticketOptionsMenu.confirmationModal.message\")}\n\t\t\t</ConfirmationModal>\n\t\t\t<TransferTicketModalCustom\n\t\t\t\tmodalOpen={transferTicketModalOpen}\n\t\t\t\tonClose={handleCloseTransferTicketModal}\n\t\t\t\tticketid={ticket.id}\n\t\t\t/>\n\t\t\t<ScheduleModal\n\t\t\t\topen={scheduleModalOpen}\n\t\t\t\tonClose={handleCloseScheduleModal}\n\t\t\t\taria-labelledby=\"form-dialog-title\"\n\t\t\t\tcontactId={contactId}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default TicketOptionsMenu;","import React, { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles, createTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { IconButton } from \"@material-ui/core\";\nimport { MoreVert, Replay } from \"@material-ui/icons\";\n\nimport { i18n } from \"../../translate/i18n\";\nimport api from \"../../services/api\";\nimport TicketOptionsMenu from \"../TicketOptionsMenu\";\nimport ButtonWithSpinner from \"../ButtonWithSpinner\";\nimport toastError from \"../../errors/toastError\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { TicketsContext } from \"../../context/Tickets/TicketsContext\";\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport UndoRoundedIcon from '@material-ui/icons/UndoRounded';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { green } from '@material-ui/core/colors';\n\n\nconst useStyles = makeStyles(theme => ({\n\tactionButtons: {\n\t\tmarginRight: 6,\n\t\tflex: \"none\",\n\t\talignSelf: \"center\",\n\t\tmarginLeft: \"auto\",\n\t\t\"& > *\": {\n\t\t\tmargin: theme.spacing(0.5),\n\t\t},\n\t},\n}));\n\nconst TicketActionButtonsCustom = ({ ticket }) => {\n\tconst classes = useStyles();\n\tconst history = useHistory();\n\tconst [anchorEl, setAnchorEl] = useState(null);\n\tconst [loading, setLoading] = useState(false);\n\tconst ticketOptionsMenuOpen = Boolean(anchorEl);\n\tconst { user } = useContext(AuthContext);\n\tconst { setCurrentTicket } = useContext(TicketsContext);\n\n\tconst customTheme = createTheme({\n\t\tpalette: {\n\t\t  \tprimary: green,\n\t\t}\n\t});\n\n\tconst handleOpenTicketOptionsMenu = e => {\n\t\tsetAnchorEl(e.currentTarget);\n\t};\n\n\tconst handleCloseTicketOptionsMenu = e => {\n\t\tsetAnchorEl(null);\n\t};\n\n\tconst handleUpdateTicketStatus = async (e, status, userId) => {\n\t\tsetLoading(true);\n\t\ttry {\n\t\t\tawait api.put(`/tickets/${ticket.id}`, {\n\t\t\t\tstatus: status,\n\t\t\t\tuserId: userId || null,\n\t\t\t});\n\n\t\t\tsetLoading(false);\n\t\t\tif (status === \"open\") {\n\t\t\t\tsetCurrentTicket({ ...ticket, code: \"#open\" });\n\t\t\t} else {\n\t\t\t\tsetCurrentTicket({ id: null, code: null })\n\t\t\t\thistory.push(\"/tickets\");\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tsetLoading(false);\n\t\t\ttoastError(err);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className={classes.actionButtons}>\n\t\t\t{ticket.status === \"closed\" && (\n\t\t\t\t<ButtonWithSpinner\n\t\t\t\t\tloading={loading}\n\t\t\t\t\tstartIcon={<Replay />}\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tonClick={e => handleUpdateTicketStatus(e, \"open\", user?.id)}\n\t\t\t\t>\n\t\t\t\t\t{i18n.t(\"messagesList.header.buttons.reopen\")}\n\t\t\t\t</ButtonWithSpinner>\n\t\t\t)}\n\t\t\t{ticket.status === \"open\" && (\n\t\t\t\t<>\n\t\t\t\t\t<Tooltip title={i18n.t(\"messagesList.header.buttons.return\")}>\n\t\t\t\t\t\t<IconButton onClick={e => handleUpdateTicketStatus(e, \"pending\", null)}>\n\t\t\t\t\t\t\t<UndoRoundedIcon />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t\t<ThemeProvider theme={customTheme}>\n\t\t\t\t\t\t<Tooltip title={i18n.t(\"messagesList.header.buttons.resolve\")}>\n\t\t\t\t\t\t\t<IconButton onClick={e => handleUpdateTicketStatus(e, \"closed\", user?.id)} color=\"primary\">\n\t\t\t\t\t\t\t\t<CheckCircleIcon />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t</ThemeProvider>\n\t\t\t\t\t{/* <ButtonWithSpinner\n\t\t\t\t\t\tloading={loading}\n\t\t\t\t\t\tstartIcon={<Replay />}\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\tonClick={e => handleUpdateTicketStatus(e, \"pending\", null)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{i18n.t(\"messagesList.header.buttons.return\")}\n\t\t\t\t\t</ButtonWithSpinner>\n\t\t\t\t\t<ButtonWithSpinner\n\t\t\t\t\t\tloading={loading}\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tonClick={e => handleUpdateTicketStatus(e, \"closed\", user?.id)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{i18n.t(\"messagesList.header.buttons.resolve\")}\n\t\t\t\t\t</ButtonWithSpinner> */}\n\t\t\t\t\t<IconButton onClick={handleOpenTicketOptionsMenu}>\n\t\t\t\t\t\t<MoreVert />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<TicketOptionsMenu\n\t\t\t\t\t\tticket={ticket}\n\t\t\t\t\t\tanchorEl={anchorEl}\n\t\t\t\t\t\tmenuOpen={ticketOptionsMenuOpen}\n\t\t\t\t\t\thandleClose={handleCloseTicketOptionsMenu}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t{ticket.status === \"pending\" && (\n\t\t\t\t<ButtonWithSpinner\n\t\t\t\t\tloading={loading}\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tonClick={e => handleUpdateTicketStatus(e, \"open\", user?.id)}\n\t\t\t\t>\n\t\t\t\t\t{i18n.t(\"messagesList.header.buttons.accept\")}\n\t\t\t\t</ButtonWithSpinner>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default TicketActionButtonsCustom;\n","import { Chip, Paper, TextField } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { isArray, isString } from \"lodash\";\nimport toastError from \"../../errors/toastError\";\nimport api from \"../../services/api\";\n\nexport function TagsContainer({ ticket }) {\n\n    const [tags, setTags] = useState([]);\n    const [selecteds, setSelecteds] = useState([]);\n    const isMounted = useRef(true);\n\n    useEffect(() => {\n        return () => {\n            isMounted.current = false\n        }\n    }, [])\n\n    useEffect(() => {\n        if (isMounted.current) {\n            loadTags().then(() => {\n                if (Array.isArray(ticket.tags)) {\n                    setSelecteds(ticket.tags);\n                } else {\n                    setSelecteds([]);\n                }\n            });\n        }\n    }, [ticket]);\n\n    const createTag = async (data) => {\n        try {\n            const { data: responseData } = await api.post(`/tags`, data);\n            return responseData;\n        } catch (err) {\n            toastError(err);\n        }\n    }\n\n    const loadTags = async () => {\n        try {\n            const { data } = await api.get(`/tags/list`);\n            setTags(data);\n        } catch (err) {\n            toastError(err);\n        }\n    }\n\n    const syncTags = async (data) => {\n        try {\n            const { data: responseData } = await api.post(`/tags/sync`, data);\n            return responseData;\n        } catch (err) {\n            toastError(err);\n        }\n    }\n\n    const onChange = async (value, reason) => {\n        let optionsChanged = []\n        if (reason === 'create-option') {\n            if (isArray(value)) {\n                for (let item of value) {\n                    if (isString(item)) {\n                        const newTag = await createTag({ name: item })\n                        optionsChanged.push(newTag);\n                    } else {\n                        optionsChanged.push(item);\n                    }\n                }\n            }\n            await loadTags();\n        } else {\n            optionsChanged = value;\n        }\n        setSelecteds(optionsChanged);\n        await syncTags({ ticketId: ticket.id, tags: optionsChanged });\n    }\n\n    return (\n        <Paper style={{ padding: 12 }}>\n            <Autocomplete\n                multiple\n                size=\"small\"\n                options={tags}\n                value={selecteds}\n                freeSolo\n                onChange={(e, v, r) => onChange(v, r)}\n                getOptionLabel={(option) => option.name}\n                renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                        <Chip\n                            variant=\"outlined\"\n                            style={{ backgroundColor: option?.color || '#eee', textShadow: '1px 1px 1px #000', color: 'white' }}\n                            label={option.name}\n                            {...getTagProps({ index })}\n                            size=\"small\"\n                        />\n                    ))\n                }\n                renderInput={(params) => (\n                    <TextField {...params} variant=\"outlined\" placeholder=\"Tags\" />\n                )}\n                PaperComponent={({ children }) => (\n                    <Paper style={{ width: 400, marginLeft: 12 }}>\n                        {children}\n                    </Paper>\n                )}\n            />\n        </Paper>\n    )\n}","import React, { useState, useEffect, useContext } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\n\nimport { toast } from \"react-toastify\";\nimport clsx from \"clsx\";\n\nimport { Paper, makeStyles } from \"@material-ui/core\";\n\nimport ContactDrawer from \"../ContactDrawer\";\nimport MessageInput from \"../MessageInputCustom/\";\nimport TicketHeader from \"../TicketHeader\";\nimport TicketInfo from \"../TicketInfo\";\nimport TicketActionButtons from \"../TicketActionButtonsCustom\";\nimport MessagesList from \"../MessagesList\";\nimport api from \"../../services/api\";\nimport { ReplyMessageProvider } from \"../../context/ReplyingMessage/ReplyingMessageContext\";\nimport toastError from \"../../errors/toastError\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { TagsContainer } from \"../TagsContainer\";\nimport { socketConnection } from \"../../services/socket\";\n\nconst drawerWidth = 320;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    height: \"100%\",\n    position: \"relative\",\n    overflow: \"hidden\",\n  },\n\n  mainWrapper: {\n    flex: 1,\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    overflow: \"hidden\",\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0,\n    borderLeft: \"0\",\n    marginRight: -drawerWidth,\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n\n  mainWrapperShift: {\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginRight: 0,\n  },\n}));\n\nconst Ticket = () => {\n  const { ticketId } = useParams();\n  const history = useHistory();\n  const classes = useStyles();\n\n  const { user } = useContext(AuthContext);\n\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [contact, setContact] = useState({});\n  const [ticket, setTicket] = useState({});\n\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      const fetchTicket = async () => {\n        try {\n          const { data } = await api.get(\"/tickets/u/\" + ticketId);\n          const { queueId } = data;\n          const { queues, profile } = user;\n\n          const queueAllowed = queues.find((q) => q.id === queueId);\n          if (queueAllowed === undefined && profile !== \"admin\") {\n            toast.error(\"Acesso não permitido\");\n            history.push(\"/tickets\");\n            return;\n          }\n\n          setContact(data.contact);\n          setTicket(data);\n          setLoading(false);\n        } catch (err) {\n          setLoading(false);\n          toastError(err);\n        }\n      };\n      fetchTicket();\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n  }, [ticketId, user, history]);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketConnection({ companyId });\n\n    socket.on(\"connect\", () => socket.emit(\"joinChatBox\", `${ticket.id}`));\n\n    socket.on(`company-${companyId}-ticket`, (data) => {\n      if (data.action === \"update\") {\n        setTicket(data.ticket);\n      }\n\n      if (data.action === \"delete\") {\n        toast.success(\"Ticket deleted sucessfully.\");\n        history.push(\"/tickets\");\n      }\n    });\n\n    socket.on(`company-${companyId}-contact`, (data) => {\n      if (data.action === \"update\") {\n        setContact((prevState) => {\n          if (prevState.id === data.contact?.id) {\n            return { ...prevState, ...data.contact };\n          }\n          return prevState;\n        });\n      }\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, [ticketId, ticket, history]);\n\n  const handleDrawerOpen = () => {\n    setDrawerOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setDrawerOpen(false);\n  };\n\n  const renderTicketInfo = () => {\n    if (ticket.user !== undefined) {\n      return (\n        <TicketInfo\n          contact={contact}\n          ticket={ticket}\n          onClick={handleDrawerOpen}\n        />\n      );\n    }\n  };\n\n  const renderMessagesList = () => {\n    return (\n      <ReplyMessageProvider>\n        <MessagesList\n          ticket={ticket}\n          ticketId={ticket.id}\n          isGroup={ticket.isGroup}\n        ></MessagesList>\n        <MessageInput ticket={ticket} />\n      </ReplyMessageProvider>\n    );\n  };\n\n  return (\n    <div className={classes.root} id=\"drawer-container\">\n      <Paper\n        variant=\"outlined\"\n        elevation={0}\n        className={clsx(classes.mainWrapper, {\n          [classes.mainWrapperShift]: drawerOpen,\n        })}\n      >\n        <TicketHeader loading={loading}>\n          {renderTicketInfo()}\n          <TicketActionButtons ticket={ticket} />\n        </TicketHeader>\n        <Paper>\n          <TagsContainer ticket={ticket} />\n        </Paper>\n        {renderMessagesList()}\n        {/* <ReplyMessageProvider>{renderMessagesList()}</ReplyMessageProvider> */}\n      </Paper>\n      <ContactDrawer\n        open={drawerOpen}\n        handleDrawerClose={handleDrawerClose}\n        contact={contact}\n        loading={loading}\n        ticket={ticket}\n      />\n    </div>\n  );\n};\n\nexport default Ticket;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport TicketsManager from \"../../components/TicketsManagerTabs/\";\nimport Ticket from \"../../components/Ticket/\";\n\nimport { i18n } from \"../../translate/i18n\";\n\nconst useStyles = makeStyles(theme => ({\n\tchatContainer: {\n\t\tflex: 1,\n\t\t// backgroundColor: \"#eee\",\n\t\tpadding: theme.spacing(4),\n\t\theight: `calc(100% - 48px)`,\n\t\toverflowY: \"hidden\",\n\t},\n\n\tchatPapper: {\n\t\t// backgroundColor: \"red\",\n\t\tdisplay: \"flex\",\n\t\theight: \"100%\",\n\t},\n\n\tcontactsWrapper: {\n\t\tdisplay: \"flex\",\n\t\theight: \"100%\",\n\t\tflexDirection: \"column\",\n\t\toverflowY: \"hidden\",\n\t},\n\tmessagesWrapper: {\n\t\tdisplay: \"flex\",\n\t\theight: \"100%\",\n\t\tflexDirection: \"column\",\n\t},\n\twelcomeMsg: {\n\t\tbackground: theme.palette.total,\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"space-evenly\",\n\t\talignItems: \"center\",\n\t\theight: \"100%\",\n\t\ttextAlign: \"center\",\n\t},\n}));\n\nconst TicketsCustom = () => {\n\tconst classes = useStyles();\n\tconst { ticketId } = useParams();\n\n\treturn (\n\t\t<div className={classes.chatContainer}>\n\t\t\t<div className={classes.chatPapper}>\n\t\t\t\t<Grid container spacing={0}>\n\t\t\t\t\t<Grid item xs={4} className={classes.contactsWrapper}>\n\t\t\t\t\t\t<TicketsManager />\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={8} className={classes.messagesWrapper}>\n\t\t\t\t\t\t{ticketId ? (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Ticket />\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Paper square variant=\"outlined\" className={classes.welcomeMsg}>\n\t\t\t\t\t\t\t\t<span>{i18n.t(\"chat.noTicketMessage\")}</span>\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default TicketsCustom;\n","import { styled } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\nconst TicketAdvancedLayout = styled(Paper)({\n    height: `calc(100% - 56px)`,\n    display: \"grid\",\n    gridTemplateRows: \"56px 1fr\"\n})\n\nexport default TicketAdvancedLayout;","import React, { useState, useEffect, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\nimport ChatIcon from '@material-ui/icons/Chat';\n\nimport TicketsManagerTabs from \"../../components/TicketsManagerTabs/\";\nimport Ticket from \"../../components/Ticket/\";\nimport TicketAdvancedLayout from \"../../components/TicketAdvancedLayout\";\n\nimport { TicketsContext } from \"../../context/Tickets/TicketsContext\";\n\nimport { i18n } from \"../../translate/i18n\";\n\nconst useStyles = makeStyles(theme => ({\n    header: {\n    },\n    content: {\n        overflow: \"auto\"\n    },\n    placeholderContainer: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"100%\",\n\t\tbackground: theme.palette.total,\n    },\n    placeholderItem: {\n    }\n}));\n\nconst TicketAdvanced = (props) => {\n\tconst classes = useStyles();\n\tconst { ticketId } = useParams();\n\tconst [option, setOption] = useState(0);\n    const { currentTicket, setCurrentTicket } = useContext(TicketsContext)\n\n    useEffect(() => {\n        if(currentTicket.id !== null) {\n            setCurrentTicket({ id: currentTicket.id, code: '#open' })\n        }\n        if (!ticketId) {\n            setOption(1)\n        }\n        return () => {\n            setCurrentTicket({ id: null, code: null })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        if (currentTicket.id !== null) {\n            setOption(0)\n        }\n    }, [currentTicket])\n\n\tconst renderPlaceholder = () => {\n\t\treturn <Box className={classes.placeholderContainer}>\n            <div className={classes.placeholderItem}>{i18n.t(\"chat.noTicketMessage\")}</div><br />\n            <Button onClick={() => setOption(1)} variant=\"contained\" color=\"primary\">\n                Selecionar Ticket\n            </Button>\n        </Box>\n\t}\n\n\tconst renderMessageContext = () => {\n\t\tif (ticketId) {\n\t\t\treturn <Ticket />\n\t\t}\n\t\treturn renderPlaceholder()\n\t}\n\n\tconst renderTicketsManagerTabs = () => {\n\t\treturn <TicketsManagerTabs />\n\t}\n\n\treturn (\n        <TicketAdvancedLayout>\n            <Box className={classes.header}>\n                <BottomNavigation\n                    value={option}\n                    onChange={(event, newValue) => {\n                        setOption(newValue);\n                    }}\n                    showLabels\n                    className={classes.root}\n                >\n                    <BottomNavigationAction label=\"Ticket\" icon={<ChatIcon />} />\n                    <BottomNavigationAction label=\"Atendimentos\" icon={<QuestionAnswerIcon />} />\n                </BottomNavigation>\n            </Box>\n            <Box className={classes.content}>\n                { option === 0 ? renderMessageContext() : renderTicketsManagerTabs() }\n            </Box>\n        </TicketAdvancedLayout>\n\t);\n};\n\nexport default TicketAdvanced;\n","import React from \"react\";\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\n\nimport Tickets from \"../TicketsCustom\"\nimport TicketAdvanced from \"../TicketsAdvanced\";\n\nfunction TicketResponsiveContainer (props) {\n    if (isWidthUp('md', props.width)) {\n        return <Tickets />;    \n    }\n    return <TicketAdvanced />\n}\n\nexport default withWidth()(TicketResponsiveContainer);","import api, { openApi } from \"../../services/api\";\n\nconst usePlans = () => {\n\n    const getPlanList = async (params) => {\n        const { data } = await openApi.request({\n            url: '/plans/list',\n            method: 'GET',\n            params\n        });\n        return data;\n    }\n\n    const list = async (params) => {\n        const { data } = await api.request({\n            url: '/plans/all',\n            method: 'GET',\n            params\n        });\n        return data;\n    }\n\n    const finder = async (id) => {\n        const { data } = await api.request({\n            url: `/plans/${id}`,\n            method: 'GET'\n        });\n        return data;\n    }\n\n    const save = async (data) => {\n        const { data: responseData } = await api.request({\n            url: '/plans',\n            method: 'POST',\n            data\n        });\n        return responseData;\n    }\n\n    const update = async (data) => {\n        const { data: responseData } = await api.request({\n            url: `/plans/${data.id}`,\n            method: 'PUT',\n            data\n        });\n        return responseData;\n    }\n\n    const remove = async (id) => {\n        const { data } = await api.request({\n            url: `/plans/${id}`,\n            method: 'DELETE'\n        });\n        return data;\n    }\n\n    return {\n        getPlanList,\n        list,\n        save,\n        update,\n        finder,\n        remove\n    }\n}\n\nexport default usePlans;","import React, { useState, useEffect } from \"react\";\nimport qs from 'query-string'\n\nimport * as Yup from \"yup\";\nimport { useHistory } from \"react-router-dom\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { Formik, Form, Field } from \"formik\";\nimport usePlans from \"../../hooks/usePlans\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport {\n\tFormControl,\n\tInputLabel,\n\tMenuItem,\n\tSelect,\n} from \"@material-ui/core\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nimport { i18n } from \"../../translate/i18n\";\n\nimport { openApi } from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\nimport moment from \"moment\";\n// const Copyright = () => {\n// \treturn (\n// \t\t<Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n// \t\t\t{\"Copyleft \"}\n// \t\t\t<Link color=\"inherit\" href=\"https://github.com/canove\">\n// \t\t\t\tCanove\n// \t\t\t</Link>{\" \"}\n// \t\t\t{new Date().getFullYear()}\n// \t\t\t{\".\"}\n// \t\t</Typography>\n// \t);\n// };\n\nconst useStyles = makeStyles(theme => ({\n\tpaper: {\n\t\tmarginTop: theme.spacing(8),\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"column\",\n\t\talignItems: \"center\",\n\t},\n\tavatar: {\n\t\tmargin: theme.spacing(1),\n\t\tbackgroundColor: theme.palette.secondary.main,\n\t},\n\tform: {\n\t\twidth: \"100%\",\n\t\tmarginTop: theme.spacing(3),\n\t},\n\tsubmit: {\n\t\tmargin: theme.spacing(3, 0, 2),\n\t},\n}));\n\nconst UserSchema = Yup.object().shape({\n\tname: Yup.string()\n\t\t.min(2, \"Too Short!\")\n\t\t.max(50, \"Too Long!\")\n\t\t.required(\"Required\"),\n\tpassword: Yup.string().min(5, \"Too Short!\").max(50, \"Too Long!\"),\n\temail: Yup.string().email(\"Invalid email\").required(\"Required\"),\n});\n\nconst SignUp = () => {\n\tconst classes = useStyles();\n\tconst history = useHistory();\n\tlet companyId = null\n\n\tconst params = qs.parse(window.location.search)\n\tif (params.companyId !== undefined) {\n\t\tcompanyId = params.companyId\n\t}\n\n\tconst initialState = { name: \"\", email: \"\", password: \"\", planId: \"\", };\n\n\tconst [user] = useState(initialState);\n\tconst dueDate = moment().add(3, \"day\").format();\n\tconst handleSignUp = async values => {\n\t\tObject.assign(values, { recurrence: \"MENSAL\" });\n\t\tObject.assign(values, { dueDate: dueDate });\n\t\tObject.assign(values, { status: \"t\" });\n\t\tObject.assign(values, { campaignsEnabled: true });\n\t\ttry {\n\t\t\tawait openApi.post(\"/companies/cadastro\", values);\n\t\t\ttoast.success(i18n.t(\"signup.toasts.success\"));\n\t\t\thistory.push(\"/login\");\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t\ttoastError(err);\n\t\t}\n\t};\n\n\tconst [plans, setPlans] = useState([]);\n\tconst { list: listPlans } = usePlans();\n\n\tuseEffect(() => {\n\t\tasync function fetchData() {\n\t\t\tconst list = await listPlans();\n\t\t\tsetPlans(list);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\n\treturn (\n\t\t<Container component=\"main\" maxWidth=\"xs\">\n\t\t\t<CssBaseline />\n\t\t\t<div className=\"jss11\">\n\t\t\t\t<Avatar className={classes.avatar}>\n\t\t\t\t\t<LockOutlinedIcon />\n\t\t\t\t</Avatar>\n\t\t\t\t<Typography component=\"h1\" variant=\"h5\">\n\t\t\t\t\t{i18n.t(\"signup.title\")}\n\t\t\t\t</Typography>\n\t\t\t\t{/* <form className={classes.form} noValidate onSubmit={handleSignUp}> */}\n\t\t\t\t<Formik\n\t\t\t\t\tinitialValues={user}\n\t\t\t\t\tenableReinitialize={true}\n\t\t\t\t\tvalidationSchema={UserSchema}\n\t\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\thandleSignUp(values);\n\t\t\t\t\t\t\tactions.setSubmitting(false);\n\t\t\t\t\t\t}, 400);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{({ touched, errors, isSubmitting }) => (\n\t\t\t\t\t\t<Form className={classes.form}>\n\t\t\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\tas={TextField}\n\t\t\t\t\t\t\t\t\t\tautoComplete=\"name\"\n\t\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\t\terror={touched.name && Boolean(errors.name)}\n\t\t\t\t\t\t\t\t\t\thelperText={touched.name && errors.name}\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Nome da Empresa\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\tas={TextField}\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\t\tlabel={i18n.t(\"signup.form.email\")}\n\t\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\t\terror={touched.email && Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\t\thelperText={touched.email && errors.email}\n\t\t\t\t\t\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\tas={TextField}\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\t\terror={touched.password && Boolean(errors.password)}\n\t\t\t\t\t\t\t\t\t\thelperText={touched.password && errors.password}\n\t\t\t\t\t\t\t\t\t\tlabel={i18n.t(\"signup.form.password\")}\n\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<InputLabel htmlFor=\"plan-selection\">Plano</InputLabel>\n\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\tas={Select}\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tid=\"plan-selection\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Plano\"\n\t\t\t\t\t\t\t\t\t\tname=\"planId\"\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{plans.map((plan, key) => (\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem key={key} value={plan.id}>\n\t\t\t\t\t\t\t\t\t\t\t\t{plan.name} - Atendentes: {plan.users} - WhatsApp: {plan.connections} - Filas: {plan.queues} - R$ {plan.value}\n\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tclassName={classes.submit}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{i18n.t(\"signup.buttons.submit\")}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Grid container justify=\"flex-end\">\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\thref=\"#\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"body2\"\n\t\t\t\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\t\t\t\tto=\"/login\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{i18n.t(\"signup.buttons.login\")}\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t)}\n\t\t\t\t</Formik>\n\t\t\t</div>\n\t\t\t<Box mt={5}>{/* <Copyright /> */}</Box>\n\t\t</Container>\n\t);\n};\n\nexport default SignUp;\n","import React, { useState, useContext } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nimport { i18n } from \"../../translate/i18n\";\n\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport logo from \"../../assets/logologin.png\";\n\n\n// const Copyright = () => {\n// \treturn (\n// \t\t<Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n// \t\t\t{\"Copyleft \"}\n// \t\t\t<Link color=\"inherit\" href=\"https://github.com/canove\">\n// \t\t\t\tCanove\n// \t\t\t</Link>{\" \"}\n// \t\t\t{new Date().getFullYear()}\n// \t\t\t{\".\"}\n// \t\t</Typography>\n// \t);\n// };\n\nconst useStyles = makeStyles(theme => ({\n\tpaper: {\n\t\tmarginTop: theme.spacing(8),\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"column\",\n\t\talignItems: \"center\",\n\t},\n\tavatar: {\n\t\tmargin: theme.spacing(1),\n\t\tbackgroundColor: theme.palette.secondary.main,\n\t},\n\tform: {\n\t\twidth: \"100%\", // Fix IE 11 issue.\n\t\tmarginTop: theme.spacing(1),\n\t},\n\tsubmit: {\n\t\tmargin: theme.spacing(3, 0, 2),\n\t},\n}));\n\nconst Login = () => {\n\tconst classes = useStyles();\n\n\tconst [user, setUser] = useState({ email: \"\", password: \"\" });\n\n\tconst { handleLogin } = useContext(AuthContext);\n\n\tconst handleChangeInput = e => {\n\t\tsetUser({ ...user, [e.target.name]: e.target.value });\n\t};\n\n\tconst handlSubmit = e => {\n\t\te.preventDefault();\n\t\thandleLogin(user);\n\t};\n\n\treturn (\n\t\t<Container component=\"main\" maxWidth=\"xs\">\n\t\t\t<CssBaseline />\n\t\t\t<div className=\"jss11\">\n\t\t\t\t<div>\n\t\t\t\t\t<img style={{ margin: \"0 auto\", height: \"80px\", }} src={logo} alt=\"Whats\" />\n\t\t\t\t</div>\n\t\t\t\t{/* <Typography component=\"h1\" variant=\"h5\">\n\t\t\t\t\t{i18n.t(\"login.title\")}\n\t\t\t\t</Typography> */}\n\t\t\t\t<form className={classes.form} noValidate onSubmit={handlSubmit}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\tlabel={i18n.t(\"login.form.email\")}\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\tvalue={user.email}\n\t\t\t\t\t\tonChange={handleChangeInput}\n\t\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t/>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tlabel={i18n.t(\"login.form.password\")}\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\tvalue={user.password}\n\t\t\t\t\t\tonChange={handleChangeInput}\n\t\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\t/>\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tclassName={classes.submit}\n\t\t\t\t\t>\n\t\t\t\t\t\t{i18n.t(\"login.buttons.submit\")}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\thref=\"#\"\n\t\t\t\t\t\t\t\tvariant=\"body2\"\n\t\t\t\t\t\t\t\tcomponent={RouterLink}\n\t\t\t\t\t\t\t\tto=\"/signup\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{i18n.t(\"login.buttons.register\")}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t\t<Box mt={8}>{ /* <Copyright />*/ }</Box>\n\t\t</Container>\n\t);\n};\n\nexport default Login;\n","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nconst useStyles = makeStyles(theme => ({\n\tmainContainer: {\n\t\tflex: 1,\n\t\tpadding: theme.spacing(2),\n\t\theight: `calc(100% - 48px)`,\n\t},\n\n\tcontentWrapper: {\n\t\theight: \"100%\",\n\t\toverflowY: \"hidden\",\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"column\",\n\t},\n}));\n\nconst MainContainer = ({ children }) => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Container className={classes.mainContainer}>\n\t\t\t<div className={classes.contentWrapper}>{children}</div>\n\t\t</Container>\n\t);\n};\n\nexport default MainContainer;\n","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n\tcontactsHeader: {\n\t\tdisplay: \"flex\",\n\t\talignItems: \"center\",\n\t\tpadding: \"0px 6px 6px 6px\",\n\t},\n}));\n\nconst MainHeader = ({ children }) => {\n\tconst classes = useStyles();\n\n\treturn <div className={classes.contactsHeader}>{children}</div>;\n};\n\nexport default MainHeader;\n","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n\tMainHeaderButtonsWrapper: {\n\t\tflex: \"none\",\n\t\tmarginLeft: \"auto\",\n\t\t\"& > *\": {\n\t\t\tmargin: theme.spacing(1),\n\t\t},\n\t},\n}));\n\nconst MainHeaderButtonsWrapper = ({ children }) => {\n\tconst classes = useStyles();\n\n\treturn <div className={classes.MainHeaderButtonsWrapper}>{children}</div>;\n};\n\nexport default MainHeaderButtonsWrapper;\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default function Title(props) {\n\treturn (\n\t\t<Typography variant=\"h5\" color=\"primary\" gutterBottom>\n\t\t\t{props.children}\n\t\t</Typography>\n\t);\n}\n","import React from \"react\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n\tcustomTableCell: {\n\t\tdisplay: \"flex\",\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\",\n\t},\n}));\n\nconst TableRowSkeleton = ({ avatar, columns }) => {\n\tconst classes = useStyles();\n\treturn (\n\t\t<>\n\t\t\t<TableRow>\n\t\t\t\t{avatar && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<TableCell style={{ paddingRight: 0 }}>\n\t\t\t\t\t\t\t<Skeleton\n\t\t\t\t\t\t\t\tanimation=\"wave\"\n\t\t\t\t\t\t\t\tvariant=\"circle\"\n\t\t\t\t\t\t\t\twidth={40}\n\t\t\t\t\t\t\t\theight={40}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t<Skeleton animation=\"wave\" height={30} width={80} />\n\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t\t{Array.from({ length: columns }, (_, index) => (\n\t\t\t\t\t<TableCell align=\"center\" key={index}>\n\t\t\t\t\t\t<div className={classes.customTableCell}>\n\t\t\t\t\t\t\t<Skeleton\n\t\t\t\t\t\t\t\talign=\"center\"\n\t\t\t\t\t\t\t\tanimation=\"wave\"\n\t\t\t\t\t\t\t\theight={30}\n\t\t\t\t\t\t\t\twidth={80}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</TableCell>\n\t\t\t\t))}\n\t\t\t</TableRow>\n\t\t</>\n\t);\n};\n\nexport default TableRowSkeleton;\n","import React, { useState, useEffect } from \"react\";\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field } from \"formik\";\nimport { toast } from \"react-toastify\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\n\nimport {\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  Button,\n  DialogActions,\n  CircularProgress,\n  TextField,\n  Switch,\n  FormControlLabel,\n  Grid,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@material-ui/core\";\n\nimport api from \"../../services/api\";\nimport { i18n } from \"../../translate/i18n\";\nimport toastError from \"../../errors/toastError\";\nimport QueueSelect from \"../QueueSelect\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n\n  multFieldLine: {\n    display: \"flex\",\n    \"& > *:not(:last-child)\": {\n      marginRight: theme.spacing(1),\n    },\n  },\n\n  btnWrapper: {\n    position: \"relative\",\n  },\n\n  buttonProgress: {\n    color: green[500],\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n\nconst SessionSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n});\n\nconst WhatsAppModal = ({ open, onClose, whatsAppId }) => {\n  const classes = useStyles();\n  const initialState = {\n    name: \"\",\n    greetingMessage: \"\",\n    complationMessage: \"\",\n    outOfHoursMessage: \"\",\n    ratingMessage: \"\",\n    isDefault: false,\n    token: \"\",\n    provider: \"beta\",\n    useTypebot: false,\n    sessionName: '',\n  };\n  const [whatsApp, setWhatsApp] = useState(initialState);\n  const [selectedQueueIds, setSelectedQueueIds] = useState([]);\n  const [selectedQueueId, setSelectedQueueId] = useState(null);\n\n  useEffect(() => {\n    const fetchSession = async () => {\n      if (!whatsAppId) return;\n\n      try {\n        const { data } = await api.get(`whatsapp/${whatsAppId}?session=0`);\n        setWhatsApp(data);\n\n        const whatsQueueIds = data.queues?.map((queue) => queue.id);\n        setSelectedQueueIds(whatsQueueIds);\n        setSelectedQueueId(data.transferQueueId);\n      } catch (err) {\n        toastError(err);\n      }\n    };\n    fetchSession();\n  }, [whatsAppId]);\n\n  const handleSaveWhatsApp = async (values) => {\n    const whatsappData = { ...values, queueIds: selectedQueueIds, transferQueueId: selectedQueueId };\n    delete whatsappData[\"queues\"];\n    delete whatsappData[\"session\"];\n\n    try {\n      if (whatsAppId) {\n        await api.put(`/whatsapp/${whatsAppId}`, whatsappData);\n      } else {\n        await api.post(\"/whatsapp\", whatsappData);\n      }\n      toast.success(i18n.t(\"whatsappModal.success\"));\n      handleClose();\n    } catch (err) {\n      toastError(err);\n    }\n  };\n\n  const handleClose = () => {\n    onClose();\n    setWhatsApp(initialState);\n    setSelectedQueueId(null);\n    setSelectedQueueIds([]);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        maxWidth=\"sm\"\n        fullWidth\n        scroll=\"paper\"\n      >\n        <DialogTitle>\n          {whatsAppId\n            ? i18n.t(\"whatsappModal.title.edit\")\n            : i18n.t(\"whatsappModal.title.add\")}\n        </DialogTitle>\n        <Formik\n          initialValues={whatsApp}\n          enableReinitialize={true}\n          validationSchema={SessionSchema}\n          onSubmit={(values, actions) => {\n            setTimeout(() => {\n              handleSaveWhatsApp(values);\n              actions.setSubmitting(false);\n            }, 400);\n          }}\n        >\n          {({ values, touched, errors, isSubmitting }) => (\n            <Form>\n              <DialogContent dividers>\n                <div className={classes.multFieldLine}>\n                  <Grid spacing={2} container>\n                    <Grid item>\n                      <Field\n                        as={TextField}\n                        label={i18n.t(\"whatsappModal.form.name\")}\n                        autoFocus\n                        name=\"name\"\n                        error={touched.name && Boolean(errors.name)}\n                        helperText={touched.name && errors.name}\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        className={classes.textField}\n                      />\n                    </Grid>\n                    <Grid style={{ paddingTop: 15 }} item>\n                      <FormControlLabel\n                        control={\n                          <Field\n                            as={Switch}\n                            color=\"primary\"\n                            name=\"isDefault\"\n                            checked={values.isDefault}\n                          />\n                        }\n                        label={i18n.t(\"whatsappModal.form.default\")}\n                      />\n                    </Grid>\n                  </Grid>\n                </div>\n                <div>\n                  <Field\n                    as={TextField}\n                    label={i18n.t(\"queueModal.form.greetingMessage\")}\n                    type=\"greetingMessage\"\n                    multiline\n                    rows={4}\n                    fullWidth\n                    name=\"greetingMessage\"\n                    error={\n                      touched.greetingMessage && Boolean(errors.greetingMessage)\n                    }\n                    helperText={\n                      touched.greetingMessage && errors.greetingMessage\n                    }\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                  />\n                </div>\n                <div>\n                  <Field\n                    as={TextField}\n                    label={i18n.t(\"queueModal.form.complationMessage\")}\n                    type=\"complationMessage\"\n                    multiline\n                    rows={4}\n                    fullWidth\n                    name=\"complationMessage\"\n                    error={\n                      touched.complationMessage &&\n                      Boolean(errors.complationMessage)\n                    }\n                    helperText={\n                      touched.complationMessage && errors.complationMessage\n                    }\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                  />\n                </div>\n                <div>\n                  <Field\n                    as={TextField}\n                    label={i18n.t(\"queueModal.form.outOfHoursMessage\")}\n                    type=\"outOfHoursMessage\"\n                    multiline\n                    rows={4}\n                    fullWidth\n                    name=\"outOfHoursMessage\"\n                    error={\n                      touched.outOfHoursMessage &&\n                      Boolean(errors.outOfHoursMessage)\n                    }\n                    helperText={\n                      touched.outOfHoursMessage && errors.outOfHoursMessage\n                    }\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                  />\n                </div>\n                <div>\n                  <Field\n                    as={TextField}\n                    label={i18n.t(\"queueModal.form.ratingMessage\")}\n                    type=\"ratingMessage\"\n                    multiline\n                    rows={4}\n                    fullWidth\n                    name=\"ratingMessage\"\n                    error={\n                      touched.ratingMessage && Boolean(errors.ratingMessage)\n                    }\n                    helperText={touched.ratingMessage && errors.ratingMessage}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                  />\n                </div>\n                <div>\n                  <Field\n                    as={TextField}\n                    label={i18n.t(\"queueModal.form.token\")}\n                    type=\"token\"\n                    fullWidth\n                    name=\"token\"\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                  />\n                </div>\n                <QueueSelect\n                  selectedQueueIds={selectedQueueIds}\n                  onChange={(selectedIds) => setSelectedQueueIds(selectedIds)}\n                />\n\n                <Grid container spacing={2} >\n                  <Grid item sm={6} >\n                    <Field\n                      fullWidth\n                      type=\"number\"\n                      as={TextField}\n                      label='Transferir após x (minutos)'\n                      name=\"timeToTransfer\"\n                      error={touched.timeToTransfer && Boolean(errors.timeToTransfer)}\n                      helperText={touched.timeToTransfer && errors.timeToTransfer}\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      className={classes.textField}\n                      InputLabelProps={{ shrink: values.timeToTransfer ? true : false }}\n                    />\n\n                  </Grid>\n\n                  <Grid item sm={6}>\n                    <QueueSelect\n                      selectedQueueIds={selectedQueueId}\n                      onChange={(selectedId) => {\n                        setSelectedQueueId(selectedId)\n                      }}\n                      multiple={false}\n                      title={'Fila de Transferência'}\n                    />\n                  </Grid>\n                </Grid>\n\n                <Grid container spacing={2}>\n                  <Grid item sm={6}>\n                    <FormControl\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      className={classes.formControl}\n                    >\n                      <InputLabel id=\"useTypebot-selection-label\">Usar Typebot</InputLabel>\n                      <Field\n                        as={Select}\n                        label={'Usar Typebot'}\n                        placeholder={'Usar Typebot'}\n                        labelId=\"useTypebot-selection-label\"\n                        id=\"useTypebot\"\n                        name=\"useTypebot\"\n                      >\n                        <MenuItem value={false}>Desabilitado</MenuItem>\n                        <MenuItem value={true}>Habilitado</MenuItem>\n\n                      </Field>\n                    </FormControl>\n                  </Grid>\n\n                  <Grid item sm={6}>\n                    <Field\n                      fullWidth\n                      as={TextField}\n                      label={'Typebot'}\n                      name=\"sessionName\"\n                      error={touched.sessionName && Boolean(errors.sessionName)}\n                      helperText={touched.sessionName && errors.sessionName}\n                      variant=\"outlined\"\n                      required={values.useTypebot}\n                      margin=\"dense\"\n                      className={classes.textField}\n                    />\n\n                  </Grid>\n                </Grid>\n\n              </DialogContent>\n              <DialogActions>\n                <Button\n                  onClick={handleClose}\n                  color=\"secondary\"\n                  disabled={isSubmitting}\n                  variant=\"outlined\"\n                >\n                  {i18n.t(\"whatsappModal.buttons.cancel\")}\n                </Button>\n                <Button\n                  type=\"submit\"\n                  color=\"primary\"\n                  disabled={isSubmitting}\n                  variant=\"contained\"\n                  className={classes.btnWrapper}\n                >\n                  {whatsAppId\n                    ? i18n.t(\"whatsappModal.buttons.okEdit\")\n                    : i18n.t(\"whatsappModal.buttons.okAdd\")}\n                  {isSubmitting && (\n                    <CircularProgress\n                      size={24}\n                      className={classes.buttonProgress}\n                    />\n                  )}\n                </Button>\n              </DialogActions>\n            </Form>\n          )}\n        </Formik>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default React.memo(WhatsAppModal);\n","import React, { useEffect, useState } from \"react\";\nimport QRCode from \"qrcode.react\";\nimport toastError from \"../../errors/toastError\";\n\nimport { Dialog, DialogContent, Paper, Typography } from \"@material-ui/core\";\nimport { i18n } from \"../../translate/i18n\";\nimport api from \"../../services/api\";\nimport { socketConnection } from \"../../services/socket\";\n\nconst QrcodeModal = ({ open, onClose, whatsAppId }) => {\n  const [qrCode, setQrCode] = useState(\"\");\n\n  useEffect(() => {\n    const fetchSession = async () => {\n      if (!whatsAppId) return;\n\n      try {\n        const { data } = await api.get(`/whatsapp/${whatsAppId}`);\n        setQrCode(data.qrcode);\n      } catch (err) {\n        toastError(err);\n      }\n    };\n    fetchSession();\n  }, [whatsAppId]);\n\n  useEffect(() => {\n    if (!whatsAppId) return;\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketConnection({ companyId });\n\n    socket.on(`company-${companyId}-whatsappSession`, (data) => {\n      if (data.action === \"update\" && data.session.id === whatsAppId) {\n        setQrCode(data.session.qrcode);\n      }\n\n      if (data.action === \"update\" && data.session.qrcode === \"\") {\n        onClose();\n      }\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, [whatsAppId, onClose]);\n\n  return (\n    <Dialog open={open} onClose={onClose} maxWidth=\"lg\" scroll=\"paper\">\n      <DialogContent>\n        <Paper elevation={0}>\n          <Typography color=\"primary\" gutterBottom>\n            {i18n.t(\"qrCode.message\")}\n          </Typography>\n          <div style={{ backgroundColor: \"white\", padding: '5px' }}>\n            {qrCode ? (\n              <QRCode value={qrCode} size={256} />\n            ) : (\n              <span>Waiting for QR Code</span>\n            )}\n          </div>\n        </Paper>\n      </DialogContent>\n    </Dialog >\n  );\n};\n\nexport default React.memo(QrcodeModal);\n","import React, { useState, useCallback, useContext, useEffect } from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { toast } from \"react-toastify\";\n\nimport { format, parseISO } from \"date-fns\";\n\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport PopupState, { bindTrigger, bindMenu } from \"material-ui-popup-state\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\nimport {\n  Button,\n  TableBody,\n  TableRow,\n  TableCell,\n  IconButton,\n  Table,\n  TableHead,\n  Paper,\n  Tooltip,\n  Typography,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport {\n  Edit,\n  CheckCircle,\n  SignalCellularConnectedNoInternet2Bar,\n  SignalCellularConnectedNoInternet0Bar,\n  SignalCellular4Bar,\n  CropFree,\n  DeleteOutline,\n  Facebook,\n  Instagram,\n  WhatsApp,\n} from \"@material-ui/icons\";\n\nimport FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\n\nimport MainContainer from \"../../components/MainContainer\";\nimport MainHeader from \"../../components/MainHeader\";\nimport MainHeaderButtonsWrapper from \"../../components/MainHeaderButtonsWrapper\";\nimport Title from \"../../components/Title\";\nimport TableRowSkeleton from \"../../components/TableRowSkeleton\";\n\nimport api from \"../../services/api\";\nimport WhatsAppModal from \"../../components/WhatsAppModal\";\nimport ConfirmationModal from \"../../components/ConfirmationModal\";\nimport QrcodeModal from \"../../components/QrcodeModal\";\nimport { i18n } from \"../../translate/i18n\";\nimport { WhatsAppsContext } from \"../../context/WhatsApp/WhatsAppsContext\";\nimport toastError from \"../../errors/toastError\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainPaper: {\n    flex: 1,\n    padding: theme.spacing(1),\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n  customTableCell: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  tooltip: {\n    backgroundColor: \"#f5f5f9\",\n    color: \"rgba(0, 0, 0, 0.87)\",\n    fontSize: theme.typography.pxToRem(14),\n    border: \"1px solid #dadde9\",\n    maxWidth: 450,\n  },\n  tooltipPopper: {\n    textAlign: \"center\",\n  },\n  buttonProgress: {\n    color: green[500],\n  },\n}));\n\nconst CustomToolTip = ({ title, content, children }) => {\n  const classes = useStyles();\n\n  return (\n    <Tooltip\n      arrow\n      classes={{\n        tooltip: classes.tooltip,\n        popper: classes.tooltipPopper,\n      }}\n      title={\n        <React.Fragment>\n          <Typography gutterBottom color=\"inherit\">\n            {title}\n          </Typography>\n          {content && <Typography>{content}</Typography>}\n        </React.Fragment>\n      }\n    >\n      {children}\n    </Tooltip>\n  );\n};\n\nconst IconChannel = (channel) => {\n  switch (channel) {\n    case \"facebook\":\n      return <Facebook />;\n    case \"instagram\":\n      return <Instagram />;\n    case \"whatsapp\":\n      return <WhatsApp />;\n    default:\n      return \"error\";\n  }\n};\n\nconst Connections = () => {\n  const classes = useStyles();\n\n  const history = useHistory();\n\n  const { user } = useContext(AuthContext);\n\n\n  const { whatsApps, loading } = useContext(WhatsAppsContext);\n  const [whatsAppModalOpen, setWhatsAppModalOpen] = useState(false);\n  const [qrModalOpen, setQrModalOpen] = useState(false);\n  const [selectedWhatsApp, setSelectedWhatsApp] = useState(null);\n  const [confirmModalOpen, setConfirmModalOpen] = useState(false);\n\n  // trava para nao acessar pagina que não pode  \n  useEffect(() => {\n    async function fetchData() {\n      if (user.profile !== \"admin\") {\n        toast.error(\"Acesso não permitido\");\n        setTimeout(() => {\n          history.push(`/`)\n        }, 100);\n      }\n    }\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n\n  const confirmationModalInitialState = {\n    action: \"\",\n    title: \"\",\n    message: \"\",\n    whatsAppId: \"\",\n    open: false,\n  };\n  const [confirmModalInfo, setConfirmModalInfo] = useState(\n    confirmationModalInitialState\n  );\n\n  const responseFacebook = (response) => {\n    if (response.status !== \"unknown\") {\n      const { accessToken, id } = response;\n\n      api\n        .post(\"/facebook\", {\n          facebookUserId: id,\n          facebookUserToken: accessToken,\n        })\n        .then((response) => {\n          toast.success(i18n.t(\"connections.facebook.success\"));\n        })\n        .catch((error) => {\n          toastError(error);\n        });\n    }\n  };\n\n  const responseInstagram = (response) => {\n    if (response.status !== \"unknown\") {\n      const { accessToken, id } = response;\n\n      api\n        .post(\"/facebook\", {\n          addInstagram: true,\n          facebookUserId: id,\n          facebookUserToken: accessToken,\n        })\n        .then((response) => {\n          toast.success(i18n.t(\"connections.facebook.success\"));\n        })\n        .catch((error) => {\n          toastError(error);\n        });\n    }\n  };\n\n  const handleStartWhatsAppSession = async (whatsAppId) => {\n    try {\n      await api.post(`/whatsappsession/${whatsAppId}`);\n    } catch (err) {\n      toastError(err);\n    }\n  };\n\n  const handleRequestNewQrCode = async (whatsAppId) => {\n    try {\n      await api.put(`/whatsappsession/${whatsAppId}`);\n    } catch (err) {\n      toastError(err);\n    }\n  };\n\n  const handleOpenWhatsAppModal = () => {\n    setSelectedWhatsApp(null);\n    setWhatsAppModalOpen(true);\n  };\n\n  const handleCloseWhatsAppModal = useCallback(() => {\n    setWhatsAppModalOpen(false);\n    setSelectedWhatsApp(null);\n  }, [setSelectedWhatsApp, setWhatsAppModalOpen]);\n\n  const handleOpenQrModal = (whatsApp) => {\n    setSelectedWhatsApp(whatsApp);\n    setQrModalOpen(true);\n  };\n\n  const handleCloseQrModal = useCallback(() => {\n    setSelectedWhatsApp(null);\n    setQrModalOpen(false);\n  }, [setQrModalOpen, setSelectedWhatsApp]);\n\n  const handleEditWhatsApp = (whatsApp) => {\n    setSelectedWhatsApp(whatsApp);\n    setWhatsAppModalOpen(true);\n  };\n\n  const handleOpenConfirmationModal = (action, whatsAppId) => {\n    if (action === \"disconnect\") {\n      setConfirmModalInfo({\n        action: action,\n        title: i18n.t(\"connections.confirmationModal.disconnectTitle\"),\n        message: i18n.t(\"connections.confirmationModal.disconnectMessage\"),\n        whatsAppId: whatsAppId,\n      });\n    }\n\n    if (action === \"delete\") {\n      setConfirmModalInfo({\n        action: action,\n        title: i18n.t(\"connections.confirmationModal.deleteTitle\"),\n        message: i18n.t(\"connections.confirmationModal.deleteMessage\"),\n        whatsAppId: whatsAppId,\n      });\n    }\n    setConfirmModalOpen(true);\n  };\n\n  const handleSubmitConfirmationModal = async () => {\n    if (confirmModalInfo.action === \"disconnect\") {\n      try {\n        await api.delete(`/whatsappsession/${confirmModalInfo.whatsAppId}`);\n      } catch (err) {\n        toastError(err);\n      }\n    }\n\n    if (confirmModalInfo.action === \"delete\") {\n      try {\n        await api.delete(`/whatsapp/${confirmModalInfo.whatsAppId}`);\n        toast.success(i18n.t(\"connections.toasts.deleted\"));\n      } catch (err) {\n        toastError(err);\n      }\n    }\n\n    setConfirmModalInfo(confirmationModalInitialState);\n  };\n\n  const renderActionButtons = (whatsApp) => {\n    return (\n      <>\n        {whatsApp.status === \"qrcode\" && (\n          <Button\n            size=\"small\"\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => handleOpenQrModal(whatsApp)}\n          >\n            {i18n.t(\"connections.buttons.qrcode\")}\n          </Button>\n        )}\n        {whatsApp.status === \"DISCONNECTED\" && (\n          <>\n            <Button\n              size=\"small\"\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={() => handleStartWhatsAppSession(whatsApp.id)}\n            >\n              {i18n.t(\"connections.buttons.tryAgain\")}\n            </Button>{\" \"}\n            <Button\n              size=\"small\"\n              variant=\"outlined\"\n              color=\"secondary\"\n              onClick={() => handleRequestNewQrCode(whatsApp.id)}\n            >\n              {i18n.t(\"connections.buttons.newQr\")}\n            </Button>\n          </>\n        )}\n        {(whatsApp.status === \"CONNECTED\" ||\n          whatsApp.status === \"PAIRING\" ||\n          whatsApp.status === \"TIMEOUT\") && (\n            <Button\n              size=\"small\"\n              variant=\"outlined\"\n              color=\"secondary\"\n              onClick={() => {\n                handleOpenConfirmationModal(\"disconnect\", whatsApp.id);\n              }}\n            >\n              {i18n.t(\"connections.buttons.disconnect\")}\n            </Button>\n          )}\n        {whatsApp.status === \"OPENING\" && (\n          <Button size=\"small\" variant=\"outlined\" disabled color=\"default\">\n            {i18n.t(\"connections.buttons.connecting\")}\n          </Button>\n        )}\n      </>\n    );\n  };\n\n  const renderStatusToolTips = (whatsApp) => {\n    return (\n      <div className={classes.customTableCell}>\n        {whatsApp.status === \"DISCONNECTED\" && (\n          <CustomToolTip\n            title={i18n.t(\"connections.toolTips.disconnected.title\")}\n            content={i18n.t(\"connections.toolTips.disconnected.content\")}\n          >\n            <SignalCellularConnectedNoInternet0Bar color=\"secondary\" />\n          </CustomToolTip>\n        )}\n        {whatsApp.status === \"OPENING\" && (\n          <CircularProgress size={24} className={classes.buttonProgress} />\n        )}\n        {whatsApp.status === \"qrcode\" && (\n          <CustomToolTip\n            title={i18n.t(\"connections.toolTips.qrcode.title\")}\n            content={i18n.t(\"connections.toolTips.qrcode.content\")}\n          >\n            <CropFree />\n          </CustomToolTip>\n        )}\n        {whatsApp.status === \"CONNECTED\" && (\n          <CustomToolTip title={i18n.t(\"connections.toolTips.connected.title\")}>\n            <SignalCellular4Bar style={{ color: green[500] }} />\n          </CustomToolTip>\n        )}\n        {(whatsApp.status === \"TIMEOUT\" || whatsApp.status === \"PAIRING\") && (\n          <CustomToolTip\n            title={i18n.t(\"connections.toolTips.timeout.title\")}\n            content={i18n.t(\"connections.toolTips.timeout.content\")}\n          >\n            <SignalCellularConnectedNoInternet2Bar color=\"secondary\" />\n          </CustomToolTip>\n        )}\n      </div>\n    );\n  };\n\n\n  const restartWhatsapps = async () => {\n\n    try {\n      await api.post(`/whatsapp-restart/`);\n      toast.success(i18n.t(\"Conexões Reiniciadas\"));\n    } catch (err) {\n      toastError(err);\n    }\n  }\n\n  return (\n    <MainContainer>\n      <ConfirmationModal\n        title={confirmModalInfo.title}\n        open={confirmModalOpen}\n        onClose={setConfirmModalOpen}\n        onConfirm={handleSubmitConfirmationModal}\n      >\n        {confirmModalInfo.message}\n      </ConfirmationModal>\n      <QrcodeModal\n        open={qrModalOpen}\n        onClose={handleCloseQrModal}\n        whatsAppId={!whatsAppModalOpen && selectedWhatsApp?.id}\n      />\n      <WhatsAppModal\n        open={whatsAppModalOpen}\n        onClose={handleCloseWhatsAppModal}\n        whatsAppId={!qrModalOpen && selectedWhatsApp?.id}\n      />\n      <MainHeader>\n        <Title>{i18n.t(\"connections.title\")}</Title>\n\n\n        <MainHeaderButtonsWrapper>\n          <PopupState variant=\"popover\" popupId=\"demo-popup-menu\">\n            {(popupState) => (\n              <React.Fragment>\n\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={restartWhatsapps}\n                >\n                  Reiniciar Conexões\n                </Button>\n\n\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => {\n                    handleOpenWhatsAppModal();\n                  }}\n                >\n                  Adicionar Conexão\n                </Button>\n                {/* <Menu {...bindMenu(popupState)}>\n                  <MenuItem\n                    onClick={() => {\n                      handleOpenWhatsAppModal();\n                      popupState.close();\n                    }}\n                  >\n                    <WhatsApp\n                      fontSize=\"small\"\n                      style={{\n                        marginRight: \"10px\",\n                      }}\n                    />\n                    WhatsApp\n                  </MenuItem>\n\n                </Menu> */}\n              </React.Fragment>\n            )}\n          </PopupState>\n        </MainHeaderButtonsWrapper>\n      </MainHeader>\n      <Paper className={classes.mainPaper} variant=\"outlined\">\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">\n                Channel\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"connections.table.name\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"connections.table.status\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"connections.table.session\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"connections.table.lastUpdate\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"connections.table.default\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"connections.table.actions\")}\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {loading ? (\n              <TableRowSkeleton />\n            ) : (\n              <>\n                {whatsApps?.length > 0 &&\n                  whatsApps.map((whatsApp) => (\n                    <TableRow key={whatsApp.id}>\n                      <TableCell align=\"center\">\n                        {IconChannel(whatsApp.channel)}\n                      </TableCell>\n                      <TableCell align=\"center\">{whatsApp.name}</TableCell>\n                      <TableCell align=\"center\">\n                        {renderStatusToolTips(whatsApp)}\n                      </TableCell>\n                      <TableCell align=\"center\">\n                        {renderActionButtons(whatsApp)}\n                      </TableCell>\n                      <TableCell align=\"center\">\n                        {format(parseISO(whatsApp.updatedAt), \"dd/MM/yy HH:mm\")}\n                      </TableCell>\n                      <TableCell align=\"center\">\n                        {whatsApp.isDefault && (\n                          <div className={classes.customTableCell}>\n                            <CheckCircle style={{ color: green[500] }} />\n                          </div>\n                        )}\n                      </TableCell>\n                      <TableCell align=\"center\">\n                        <IconButton\n                          size=\"small\"\n                          onClick={() => handleEditWhatsApp(whatsApp)}\n                        >\n                          <Edit />\n                        </IconButton>\n\n                        <IconButton\n                          size=\"small\"\n                          onClick={(e) => {\n                            handleOpenConfirmationModal(\"delete\", whatsApp.id);\n                          }}\n                        >\n                          <DeleteOutline />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n              </>\n            )}\n          </TableBody>\n        </Table>\n      </Paper>\n    </MainContainer>\n  );\n};\n\nexport default Connections;","import React, { useState, useEffect } from \"react\";\nimport { makeStyles, TextField, Grid, Container } from \"@material-ui/core\";\nimport { Formik, Form, FastField, FieldArray } from \"formik\";\nimport { isArray } from \"lodash\";\nimport NumberFormat from \"react-number-format\";\nimport ButtonWithSpinner from \"../ButtonWithSpinner\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  fullWidth: {\n    width: \"100%\",\n  },\n  textfield: {\n    width: \"100%\",\n  },\n  row: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n  control: {\n    paddingRight: theme.spacing(1),\n    paddingLeft: theme.spacing(1),\n  },\n  buttonContainer: {\n    textAlign: \"right\",\n    padding: theme.spacing(1),\n  },\n}));\n\nfunction SchedulesForm(props) {\n  const { initialValues, onSubmit, loading, labelSaveButton } = props;\n  const classes = useStyles();\n\n  const [schedules, setSchedules] = useState([\n    { weekday: \"Segunda-feira\", weekdayEn: \"monday\", startTime: \"\", endTime: \"\", },\n    { weekday: \"Terça-feira\", weekdayEn: \"tuesday\", startTime: \"\", endTime: \"\", },\n    { weekday: \"Quarta-feira\", weekdayEn: \"wednesday\", startTime: \"\", endTime: \"\", },\n    { weekday: \"Quinta-feira\", weekdayEn: \"thursday\", startTime: \"\", endTime: \"\", },\n    { weekday: \"Sexta-feira\", weekdayEn: \"friday\", startTime: \"\", endTime: \"\" },\n    { weekday: \"Sábado\", weekdayEn: \"saturday\", startTime: \"\", endTime: \"\" },\n    { weekday: \"Domingo\", weekdayEn: \"sunday\", startTime: \"\", endTime: \"\" },\n  ]);\n\n  useEffect(() => {\n    if (isArray(initialValues) && initialValues.length > 0) {\n      setSchedules(initialValues);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [initialValues]);\n\n  const handleSubmit = (data) => {\n    onSubmit(data);\n  };\n\n  return (\n    <Formik\n      enableReinitialize\n      className={classes.fullWidth}\n      initialValues={{ schedules }}\n      onSubmit={({ schedules }) =>\n        setTimeout(() => {\n          handleSubmit(schedules);\n        }, 500)\n      }\n    >\n      {({ values }) => (\n        <Form className={classes.fullWidth}>\n          <FieldArray\n            name=\"schedules\"\n            render={(arrayHelpers) => (\n              <Grid spacing={4} container>\n                {values.schedules.map((item, index) => {\n                  return (\n                      <Container>\n                          <FastField\n                            as={TextField}\n                            label=\"Dia da Semana\"\n                            name={`schedules[${index}].weekday`}\n                            disabled\n                            variant=\"outlined\"\n                            style={{ marginRight: \"3.2%\", width: \"30%\" }}\n                            margin=\"dense\"\n                          />\n                          <FastField\n                            name={`schedules[${index}].startTime`}\n                            >\n                            {({ field }) => (\n                              <NumberFormat\n                                label=\"Hora de Inicial\"\n                                {...field}\n                                variant=\"outlined\"\n                                margin=\"dense\"\n                                customInput={TextField}\n                                format=\"##:##\"\n                                style={{ marginRight: \"3.2%\", width: \"30%\" }}\n                              />\n                            )}\n                          </FastField>\n                          <FastField\n                            name={`schedules[${index}].endTime`}\n                            >\n                            {({ field }) => (\n                              <NumberFormat\n                                label=\"Hora de Final\"\n                                {...field}\n                                variant=\"outlined\"\n                                margin=\"dense\"\n                                customInput={TextField}\n                                format=\"##:##\"\n                                style={{ marginRight: \"3.2%\", width: \"30%\" }}\n                              />\n                            )}\n                          </FastField>\n\n                      </Container>\n\n                  );\n                })}\n              </Grid>\n            )}\n          ></FieldArray>\n          <div style={{ textAlign: \"center\", marginTop: \"2%\" }} className={classes.buttonContainer}>\n            <ButtonWithSpinner\n              loading={loading}\n              type=\"submit\"\n              color=\"primary\"\n              variant=\"contained\"\n            >\n              {labelSaveButton ?? \"Salvar\"}\n            </ButtonWithSpinner>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nexport default SchedulesForm;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Chip from \"@material-ui/core/Chip\";\nimport toastError from \"../../errors/toastError\";\nimport api from \"../../services/api\";\nimport { i18n } from \"../../translate/i18n\";\n\nconst useStyles = makeStyles(theme => ({\n\tchips: {\n\t\tdisplay: \"flex\",\n\t\tflexWrap: \"wrap\",\n\t},\n\tchip: {\n\t\tmargin: 2,\n\t},\n}));\n\nconst QueueSelectCustom = ({ selectedQueueIds, companyId, onChange }) => {\n\tconst classes = useStyles();\n\tconst [queues, setQueues] = useState([]);\n\n\tuseEffect(() => {\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tconst { data } = await api.get(\"/queue\", {\n\t\t\t\t\tparams: { companyId }\n\t\t\t\t});\n\t\t\t\tsetQueues(data);\n\t\t\t} catch (err) {\n\t\t\t\ttoastError(err);\n\t\t\t}\n\t\t})();\n\t}, [companyId]);\n\n\tconst handleChange = e => {\n\t\tonChange(e.target.value);\n\t};\n\n\treturn (\n\t\t<div style={{ marginTop: 6 }}>\n\t\t\t<FormControl fullWidth margin=\"dense\" variant=\"outlined\">\n\t\t\t\t<InputLabel>{i18n.t(\"queueSelect.inputLabel\")}</InputLabel>\n\t\t\t\t<Select\n\t\t\t\t\tmultiple\n\t\t\t\t\tlabelWidth={60}\n\t\t\t\t\tvalue={selectedQueueIds}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tMenuProps={{\n\t\t\t\t\t\tanchorOrigin: {\n\t\t\t\t\t\t\tvertical: \"bottom\",\n\t\t\t\t\t\t\thorizontal: \"left\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttransformOrigin: {\n\t\t\t\t\t\t\tvertical: \"top\",\n\t\t\t\t\t\t\thorizontal: \"left\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\tgetContentAnchorEl: null,\n\t\t\t\t\t}}\n\t\t\t\t\trenderValue={selected => (\n\t\t\t\t\t\t<div className={classes.chips}>\n\t\t\t\t\t\t\t{selected?.length > 0 &&\n\t\t\t\t\t\t\t\tselected.map(id => {\n\t\t\t\t\t\t\t\t\tconst queue = queues.find(q => q.id === id);\n\t\t\t\t\t\t\t\t\treturn queue ? (\n\t\t\t\t\t\t\t\t\t\t<Chip\n\t\t\t\t\t\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: queue.color }}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tlabel={queue.name}\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.chip}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t) : null;\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t>\n\t\t\t\t\t{queues.map(queue => (\n\t\t\t\t\t\t<MenuItem key={queue.id} value={queue.id}>\n\t\t\t\t\t\t\t{queue.name}\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t))}\n\t\t\t\t</Select>\n\t\t\t</FormControl>\n\t\t</div>\n\t);\n};\n\nexport default QueueSelectCustom;\n","import React, { useState, useEffect, useContext } from \"react\";\n\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field } from \"formik\";\nimport { toast } from \"react-toastify\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nimport { i18n } from \"../../translate/i18n\";\n\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\nimport QueueSelectCustom from \"../QueueSelectCustom\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { Can } from \"../Can\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  multFieldLine: {\n    display: \"flex\",\n    \"& > *:not(:last-child)\": {\n      marginRight: theme.spacing(1),\n    },\n  },\n\n  btnWrapper: {\n    position: \"relative\",\n  },\n\n  buttonProgress: {\n    color: green[500],\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nconst UserSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n  password: Yup.string().min(5, \"Too Short!\").max(50, \"Too Long!\"),\n  email: Yup.string().email(\"Invalid email\").required(\"Required\"),\n});\n\nconst ModalUsers = ({ open, onClose, userId, companyId }) => {\n  const classes = useStyles();\n\n  const initialState = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    profile: \"user\",\n  };\n\n  const { user: loggedInUser } = useContext(AuthContext);\n\n  const [user, setUser] = useState(initialState);\n  const [selectedQueueIds, setSelectedQueueIds] = useState([]);\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      if (!userId) return;\n      if (open) {\n        try {\n          const { data } = await api.get(`/users/${userId}`);\n          setUser((prevState) => {\n            return { ...prevState, ...data };\n          });\n          const userQueueIds = data.queues?.map((queue) => queue.id);\n          setSelectedQueueIds(userQueueIds);\n        } catch (err) {\n          toastError(err);\n        }\n      }\n    };\n\n    fetchUser();\n  }, [userId, open]);\n\n  const handleClose = () => {\n    onClose();\n    setUser(initialState);\n  };\n\n  const handleSaveUser = async (values) => {\n    const userData = { ...values, companyId, queueIds: selectedQueueIds };\n    try {\n      if (userId) {\n        await api.put(`/users/${userId}`, userData);\n      } else {\n        await api.post(\"/users\", userData);\n      }\n      toast.success(i18n.t(\"userModal.success\"));\n    } catch (err) {\n      toastError(err);\n    }\n    handleClose();\n  };\n\n  return (\n    <div className={classes.root}>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        maxWidth=\"xs\"\n        fullWidth\n        scroll=\"paper\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          {userId\n            ? `${i18n.t(\"userModal.title.edit\")}`\n            : `${i18n.t(\"userModal.title.add\")}`}\n        </DialogTitle>\n        <Formik\n          initialValues={user}\n          enableReinitialize={true}\n          validationSchema={UserSchema}\n          onSubmit={(values, actions) => {\n            setTimeout(() => {\n              handleSaveUser(values);\n              actions.setSubmitting(false);\n            }, 400);\n          }}\n        >\n          {({ touched, errors, isSubmitting }) => (\n            <Form>\n              <DialogContent dividers>\n                <div className={classes.multFieldLine}>\n                  <Field\n                    as={TextField}\n                    label={i18n.t(\"userModal.form.name\")}\n                    autoFocus\n                    name=\"name\"\n                    error={touched.name && Boolean(errors.name)}\n                    helperText={touched.name && errors.name}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                  />\n                  <Field\n                    as={TextField}\n                    label={i18n.t(\"userModal.form.password\")}\n                    type=\"password\"\n                    name=\"password\"\n                    error={touched.password && Boolean(errors.password)}\n                    helperText={touched.password && errors.password}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                  />\n                </div>\n                <div className={classes.multFieldLine}>\n                  <Field\n                    as={TextField}\n                    label={i18n.t(\"userModal.form.email\")}\n                    name=\"email\"\n                    error={touched.email && Boolean(errors.email)}\n                    helperText={touched.email && errors.email}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                  />\n                  <FormControl\n                    variant=\"outlined\"\n                    className={classes.formControl}\n                    margin=\"dense\"\n                  >\n                    <Can\n                      role={loggedInUser.profile}\n                      perform=\"user-modal:editProfile\"\n                      yes={() => (\n                        <>\n                          <InputLabel id=\"profile-selection-input-label\">\n                            {i18n.t(\"userModal.form.profile\")}\n                          </InputLabel>\n\n                          <Field\n                            as={Select}\n                            label={i18n.t(\"userModal.form.profile\")}\n                            name=\"profile\"\n                            labelId=\"profile-selection-label\"\n                            id=\"profile-selection\"\n                            required\n                          >\n                            <MenuItem value=\"admin\">Admin</MenuItem>\n                            <MenuItem value=\"user\">User</MenuItem>\n                          </Field>\n                        </>\n                      )}\n                    />\n                  </FormControl>\n                </div>\n                <Can\n                  role={loggedInUser.profile}\n                  perform=\"user-modal:editQueues\"\n                  yes={() => (\n                    <QueueSelectCustom\n                      companyId={companyId}\n                      selectedQueueIds={selectedQueueIds}\n                      onChange={(values) => setSelectedQueueIds(values)}\n                    />\n                  )}\n                />\n              </DialogContent>\n              <DialogActions>\n                <Button\n                  onClick={handleClose}\n                  color=\"secondary\"\n                  disabled={isSubmitting}\n                  variant=\"outlined\"\n                >\n                  {i18n.t(\"userModal.buttons.cancel\")}\n                </Button>\n                <Button\n                  type=\"submit\"\n                  color=\"primary\"\n                  disabled={isSubmitting}\n                  variant=\"contained\"\n                  className={classes.btnWrapper}\n                >\n                  {userId\n                    ? `${i18n.t(\"userModal.buttons.okEdit\")}`\n                    : `${i18n.t(\"userModal.buttons.okAdd\")}`}\n                  {isSubmitting && (\n                    <CircularProgress\n                      size={24}\n                      className={classes.buttonProgress}\n                    />\n                  )}\n                </Button>\n              </DialogActions>\n            </Form>\n          )}\n        </Formik>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default ModalUsers;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  makeStyles,\n  Paper,\n  Grid,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  TextField,\n  Table,\n  TableHead,\n  TableBody,\n  TableCell,\n  TableRow,\n  IconButton,\n  Select,\n} from \"@material-ui/core\";\nimport { Formik, Form, Field } from \"formik\";\nimport ButtonWithSpinner from \"../ButtonWithSpinner\";\nimport ConfirmationModal from \"../ConfirmationModal\";\n\nimport { Edit as EditIcon } from \"@material-ui/icons\";\n\nimport { toast } from \"react-toastify\";\nimport useCompanies from \"../../hooks/useCompanies\";\nimport usePlans from \"../../hooks/usePlans\";\nimport ModalUsers from \"../ModalUsers\";\nimport api from \"../../services/api\";\nimport { head, isArray, has } from \"lodash\";\nimport { useDate } from \"../../hooks/useDate\";\n\nimport moment from \"moment\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  mainPaper: {\n    width: \"100%\",\n    flex: 1,\n    padding: theme.spacing(2),\n  },\n  fullWidth: {\n    width: \"100%\",\n  },\n  tableContainer: {\n    width: \"100%\",\n    overflowX: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n  textfield: {\n    width: \"100%\",\n  },\n  textRight: {\n    textAlign: \"right\",\n  },\n  row: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n  control: {\n    paddingRight: theme.spacing(1),\n    paddingLeft: theme.spacing(1),\n  },\n  buttonContainer: {\n    textAlign: \"right\",\n    padding: theme.spacing(1),\n  },\n}));\n\nexport function CompanyForm(props) {\n  const { onSubmit, onDelete, onCancel, initialValue, loading } = props;\n  const classes = useStyles();\n  const [plans, setPlans] = useState([]);\n  const [modalUser, setModalUser] = useState(false);\n  const [firstUser, setFirstUser] = useState({});\n\n  const [record, setRecord] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    planId: \"\",\n    status: true,\n    campaignsEnabled: false,\n    dueDate: \"\",\n    recurrence: \"\",\n    ...initialValue,\n  });\n\n  const { list: listPlans } = usePlans();\n\n  useEffect(() => {\n    async function fetchData() {\n      const list = await listPlans();\n      setPlans(list);\n    }\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    setRecord((prev) => {\n      if (moment(initialValue).isValid()) {\n        initialValue.dueDate = moment(initialValue.dueDate).format(\n          \"YYYY-MM-DD\"\n        );\n      }\n      return {\n        ...prev,\n        ...initialValue,\n      };\n    });\n  }, [initialValue]);\n\n  const handleSubmit = async (data) => {\n    if (data.dueDate === \"\" || moment(data.dueDate).isValid() === false) {\n      data.dueDate = null;\n    }\n    onSubmit(data);\n    setRecord({ ...initialValue, dueDate: \"\" });\n  };\n\n  const handleOpenModalUsers = async () => {\n    try {\n      const { data } = await api.get(\"/users/list\", {\n        params: {\n          companyId: initialValue.id,\n        },\n      });\n      if (isArray(data) && data.length) {\n        setFirstUser(head(data));\n      }\n      setModalUser(true);\n    } catch (e) {\n      toast.error(e);\n    }\n  };\n\n  const handleCloseModalUsers = () => {\n    setFirstUser({});\n    setModalUser(false);\n  };\n\n  const incrementDueDate = () => {\n    const data = { ...record };\n    if (data.dueDate !== \"\" && data.dueDate !== null) {\n      switch (data.recurrence) {\n        case \"MENSAL\":\n          data.dueDate = moment(data.dueDate)\n            .add(1, \"month\")\n            .format(\"YYYY-MM-DD\");\n          break;\n        case \"BIMESTRAL\":\n          data.dueDate = moment(data.dueDate)\n            .add(2, \"month\")\n            .format(\"YYYY-MM-DD\");\n          break;\n        case \"TRIMESTRAL\":\n          data.dueDate = moment(data.dueDate)\n            .add(3, \"month\")\n            .format(\"YYYY-MM-DD\");\n          break;\n        case \"SEMESTRAL\":\n          data.dueDate = moment(data.dueDate)\n            .add(6, \"month\")\n            .format(\"YYYY-MM-DD\");\n          break;\n        case \"ANUAL\":\n          data.dueDate = moment(data.dueDate)\n            .add(12, \"month\")\n            .format(\"YYYY-MM-DD\");\n          break;\n        default:\n          break;\n      }\n    }\n    setRecord(data);\n  };\n\n  return (\n    <>\n      <ModalUsers\n        userId={firstUser.id}\n        companyId={initialValue.id}\n        open={modalUser}\n        onClose={handleCloseModalUsers}\n      />\n      <Formik\n        enableReinitialize\n        className={classes.fullWidth}\n        initialValues={record}\n        onSubmit={(values, { resetForm }) =>\n          setTimeout(() => {\n            handleSubmit(values);\n            resetForm();\n          }, 500)\n        }\n      >\n        {(values, setValues) => (\n          <Form className={classes.fullWidth}>\n            <Grid spacing={2} justifyContent=\"flex-end\" container>\n              <Grid xs={12} sm={6} md={4} item>\n                <Field\n                  as={TextField}\n                  label=\"Nome\"\n                  name=\"name\"\n                  variant=\"outlined\"\n                  className={classes.fullWidth}\n                  margin=\"dense\"\n                />\n              </Grid>\n              <Grid xs={12} sm={6} md={2} item>\n                <Field\n                  as={TextField}\n                  label=\"E-mail\"\n                  name=\"email\"\n                  variant=\"outlined\"\n                  className={classes.fullWidth}\n                  margin=\"dense\"\n                  required\n                />\n              </Grid>\n              <Grid xs={12} sm={6} md={2} item>\n                <Field\n                  as={TextField}\n                  label=\"Telefone\"\n                  name=\"phone\"\n                  variant=\"outlined\"\n                  className={classes.fullWidth}\n                  margin=\"dense\"\n                />\n              </Grid>\n              <Grid xs={12} sm={6} md={2} item>\n                <FormControl margin=\"dense\" variant=\"outlined\" fullWidth>\n                  <InputLabel htmlFor=\"plan-selection\">Plano</InputLabel>\n                  <Field\n                    as={Select}\n                    id=\"plan-selection\"\n                    label=\"Plano\"\n                    labelId=\"plan-selection-label\"\n                    name=\"planId\"\n                    margin=\"dense\"\n                    required\n                  >\n                    {plans.map((plan, key) => (\n                      <MenuItem key={key} value={plan.id}>\n                        {plan.name}\n                      </MenuItem>\n                    ))}\n                  </Field>\n                </FormControl>\n              </Grid>\n              <Grid xs={12} sm={6} md={2} item>\n                <FormControl margin=\"dense\" variant=\"outlined\" fullWidth>\n                  <InputLabel htmlFor=\"status-selection\">Status</InputLabel>\n                  <Field\n                    as={Select}\n                    id=\"status-selection\"\n                    label=\"Status\"\n                    labelId=\"status-selection-label\"\n                    name=\"status\"\n                    margin=\"dense\"\n                  >\n                    <MenuItem value={true}>Sim</MenuItem>\n                    <MenuItem value={false}>Não</MenuItem>\n                  </Field>\n                </FormControl>\n              </Grid>\n              <Grid xs={12} sm={6} md={2} item>\n                <FormControl margin=\"dense\" variant=\"outlined\" fullWidth>\n                  <InputLabel htmlFor=\"status-selection\">Campanhas</InputLabel>\n                  <Field\n                    as={Select}\n                    id=\"campaigns-selection\"\n                    label=\"Campanhas\"\n                    labelId=\"campaigns-selection-label\"\n                    name=\"campaignsEnabled\"\n                    margin=\"dense\"\n                  >\n                    <MenuItem value={true}>Habilitadas</MenuItem>\n                    <MenuItem value={false}>Desabilitadas</MenuItem>\n                  </Field>\n                </FormControl>\n              </Grid>\n              <Grid xs={12} sm={6} md={2} item>\n                <FormControl variant=\"outlined\" fullWidth>\n                  <Field\n                    as={TextField}\n                    label=\"Data de Vencimento\"\n                    type=\"date\"\n                    name=\"dueDate\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    variant=\"outlined\"\n                    fullWidth\n                    margin=\"dense\"\n                  />\n                </FormControl>\n              </Grid>\n              <Grid xs={12} sm={6} md={2} item>\n                <FormControl margin=\"dense\" variant=\"outlined\" fullWidth>\n                  <InputLabel htmlFor=\"recorrencia-selection\">\n                    Recorrência\n                  </InputLabel>\n                  <Field\n                    as={Select}\n                    label=\"Recorrência\"\n                    labelId=\"recorrencia-selection-label\"\n                    id=\"recurrence\"\n                    name=\"recurrence\"\n                    margin=\"dense\"\n                  >\n                    <MenuItem value=\"MENSAL\">Mensal</MenuItem>\n                    <MenuItem value=\"BIMESTRAL\">Bimestral</MenuItem>\n                    <MenuItem value=\"TRIMESTRAL\">Trimestral</MenuItem>\n                    <MenuItem value=\"SEMESTRAL\">Semestral</MenuItem>\n                    <MenuItem value=\"ANUAL\">Anual</MenuItem>\n                  </Field>\n                </FormControl>\n              </Grid>\n              <Grid xs={12} item>\n                <Grid justifyContent=\"flex-end\" spacing={1} container>\n                  <Grid xs={4} md={1} item>\n                    <ButtonWithSpinner\n                      className={classes.fullWidth}\n                      style={{ marginTop: 7 }}\n                      loading={loading}\n                      onClick={() => onCancel()}\n                      variant=\"contained\"\n                    >\n                      Limpar\n                    </ButtonWithSpinner>\n                  </Grid>\n                  {record.id !== undefined ? (\n                    <>\n                      <Grid xs={6} md={1} item>\n                        <ButtonWithSpinner\n                          style={{ marginTop: 7 }}\n                          className={classes.fullWidth}\n                          loading={loading}\n                          onClick={() => onDelete(record)}\n                          variant=\"contained\"\n                          color=\"secondary\"\n                        >\n                          Excluir\n                        </ButtonWithSpinner>\n                      </Grid>\n                      <Grid xs={6} md={2} item>\n                        <ButtonWithSpinner\n                          style={{ marginTop: 7 }}\n                          className={classes.fullWidth}\n                          loading={loading}\n                          onClick={() => incrementDueDate()}\n                          variant=\"contained\"\n                          color=\"primary\"\n                        >\n                          + Vencimento\n                        </ButtonWithSpinner>\n                      </Grid>\n                      <Grid xs={6} md={1} item>\n                        <ButtonWithSpinner\n                          style={{ marginTop: 7 }}\n                          className={classes.fullWidth}\n                          loading={loading}\n                          onClick={() => handleOpenModalUsers()}\n                          variant=\"contained\"\n                          color=\"primary\"\n                        >\n                          Usuário\n                        </ButtonWithSpinner>\n                      </Grid>\n                    </>\n                  ) : null}\n                  <Grid xs={6} md={1} item>\n                    <ButtonWithSpinner\n                      className={classes.fullWidth}\n                      style={{ marginTop: 7 }}\n                      loading={loading}\n                      type=\"submit\"\n                      variant=\"contained\"\n                      color=\"primary\"\n                    >\n                      Salvar\n                    </ButtonWithSpinner>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n}\n\nexport function CompaniesManagerGrid(props) {\n  const { records, onSelect } = props;\n  const classes = useStyles();\n  const { dateToClient } = useDate();\n\n  const renderStatus = (row) => {\n    return row.status === false ? \"Não\" : \"Sim\";\n  };\n\n  const renderPlan = (row) => {\n    return row.planId !== null ? row.plan.name : \"-\";\n  };\n\n  const renderCampaignsStatus = (row) => {\n    if (\n      has(row, \"settings\") &&\n      isArray(row.settings) &&\n      row.settings.length > 0\n    ) {\n      const setting = row.settings.find((s) => s.key === \"campaignsEnabled\");\n      if (setting) {\n        return setting.value === \"true\" ? \"Habilitadas\" : \"Desabilitadas\";\n      }\n    }\n    return \"Desabilitadas\";\n  };\n\n  const rowStyle = (record) => {\n    if (moment(record.dueDate).isValid()) {\n      const now = moment();\n      const dueDate = moment(record.dueDate);\n      const diff = dueDate.diff(now, \"days\");\n      if (diff === 5) {\n        return { backgroundColor: \"#fffead\" };\n      }\n      if (diff >= -3 && diff <= 4) {\n        return { backgroundColor: \"#f7cc8f\" };\n      }\n      if (diff === -4) {\n        return { backgroundColor: \"#fa8c8c\" };\n      }\n    }\n    return {};\n  };\n\n  return (\n    <Paper className={classes.tableContainer}>\n      <Table\n        className={classes.fullWidth}\n        size=\"small\"\n        aria-label=\"a dense table\"\n      >\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\" style={{ width: \"1%\" }}>\n              #\n            </TableCell>\n            <TableCell align=\"left\">Nome</TableCell>\n            <TableCell align=\"left\">E-mail</TableCell>\n            <TableCell align=\"left\">Telefone</TableCell>\n            <TableCell align=\"left\">Plano</TableCell>\n            <TableCell align=\"left\">Campanhas</TableCell>\n            <TableCell align=\"left\">Status</TableCell>\n            <TableCell align=\"left\">Criada Em</TableCell>\n            <TableCell align=\"left\">Vencimento</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {records.map((row, key) => (\n            <TableRow style={rowStyle(row)} key={key}>\n              <TableCell align=\"center\" style={{ width: \"1%\" }}>\n                <IconButton onClick={() => onSelect(row)} aria-label=\"delete\">\n                  <EditIcon />\n                </IconButton>\n              </TableCell>\n              <TableCell align=\"left\">{row.name || \"-\"}</TableCell>\n              <TableCell align=\"left\">{row.email || \"-\"}</TableCell>\n              <TableCell align=\"left\">{row.phone || \"-\"}</TableCell>\n              <TableCell align=\"left\">{renderPlan(row)}</TableCell>\n              <TableCell align=\"left\">{renderCampaignsStatus(row)}</TableCell>\n              <TableCell align=\"left\">{renderStatus(row)}</TableCell>\n              <TableCell align=\"left\">{dateToClient(row.createdAt)}</TableCell>\n              <TableCell align=\"left\">\n                {dateToClient(row.dueDate)}\n                <br />\n                <span>{row.recurrence}</span>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n}\n\nexport default function CompaniesManager() {\n  const classes = useStyles();\n  const { list, save, update, remove } = useCompanies();\n\n  const [showConfirmDialog, setShowConfirmDialog] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [records, setRecords] = useState([]);\n  const [record, setRecord] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    planId: \"\",\n    status: true,\n    campaignsEnabled: false,\n    dueDate: \"\",\n    recurrence: \"\",\n  });\n\n  useEffect(() => {\n    loadPlans();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const loadPlans = async () => {\n    setLoading(true);\n    try {\n      const companyList = await list();\n      setRecords(companyList);\n    } catch (e) {\n      toast.error(\"Não foi possível carregar a lista de registros\");\n    }\n    setLoading(false);\n  };\n\n  const handleSubmit = async (data) => {\n    setLoading(true);\n    try {\n      if (data.id !== undefined) {\n        await update(data);\n      } else {\n        await save(data);\n      }\n      await loadPlans();\n      handleCancel();\n      toast.success(\"Operação realizada com sucesso!\");\n    } catch (e) {\n      toast.error(\n        \"Não foi possível realizar a operação. Verifique se já existe uma empresa com o mesmo nome ou se os campos foram preenchidos corretamente\"\n      );\n    }\n    setLoading(false);\n  };\n\n  const handleDelete = async () => {\n    setLoading(true);\n    try {\n      await remove(record.id);\n      await loadPlans();\n      handleCancel();\n      toast.success(\"Operação realizada com sucesso!\");\n    } catch (e) {\n      toast.error(\"Não foi possível realizar a operação\");\n    }\n    setLoading(false);\n  };\n\n  const handleOpenDeleteDialog = () => {\n    setShowConfirmDialog(true);\n  };\n\n  const handleCancel = () => {\n    setRecord((prev) => ({\n      ...prev,\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      planId: \"\",\n      status: true,\n      campaignsEnabled: false,\n      dueDate: \"\",\n      recurrence: \"\",\n    }));\n  };\n\n  const handleSelect = (data) => {\n    let campaignsEnabled = false;\n\n    const setting = data.settings.find(\n      (s) => s.key.indexOf(\"campaignsEnabled\") > -1\n    );\n    if (setting) {\n      campaignsEnabled =\n        setting.value === \"true\" || setting.value === \"enabled\";\n    }\n\n    setRecord((prev) => ({\n      ...prev,\n      id: data.id,\n      name: data.name || \"\",\n      phone: data.phone || \"\",\n      email: data.email || \"\",\n      planId: data.planId || \"\",\n      status: data.status === false ? false : true,\n      campaignsEnabled,\n      dueDate: data.dueDate || \"\",\n      recurrence: data.recurrence || \"\",\n    }));\n  };\n\n  return (\n    <Paper className={classes.mainPaper} elevation={0}>\n      <Grid spacing={2} container>\n        <Grid xs={12} item>\n          <CompanyForm\n            initialValue={record}\n            onDelete={handleOpenDeleteDialog}\n            onSubmit={handleSubmit}\n            onCancel={handleCancel}\n            loading={loading}\n          />\n        </Grid>\n        <Grid xs={12} item>\n          <CompaniesManagerGrid records={records} onSelect={handleSelect} />\n        </Grid>\n      </Grid>\n      <ConfirmationModal\n        title=\"Exclusão de Registro\"\n        open={showConfirmDialog}\n        onClose={() => setShowConfirmDialog(false)}\n        onConfirm={() => handleDelete()}\n      >\n        Deseja realmente excluir esse registro?\n      </ConfirmationModal>\n    </Paper>\n  );\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport MaskedInput from 'react-text-mask'\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask'\n\nconst defaultMaskOptions = {\n  prefix: 'R$',\n  suffix: '',\n  includeThousandsSeparator: true,\n  thousandsSeparatorSymbol: '.',\n  allowDecimal: true,\n  decimalSymbol: ',',\n  decimalLimit: 2, // how many digits allowed after the decimal\n  integerLimit: 7, // limit length of integer numbers\n  allowNegative: false,\n  allowLeadingZeroes: false,\n}\n\nconst CurrencyInput = ({ maskOptions, ...inputProps }) => {\n  const currencyMask = createNumberMask({\n    ...defaultMaskOptions,\n    ...maskOptions,\n  })\n\n  return <MaskedInput mask={currencyMask} {...inputProps} />\n}\n\nCurrencyInput.defaultProps = {\n  inputMode: 'numeric',\n  maskOptions: {},\n}\n\nCurrencyInput.propTypes = {\n  inputmode: PropTypes.string,\n  maskOptions: PropTypes.shape({\n    prefix: PropTypes.string,\n    suffix: PropTypes.string,\n    includeThousandsSeparator: PropTypes.bool,\n    thousandsSeparatorSymbol: PropTypes.string,\n    allowDecimal: PropTypes.bool,\n    decimalSymbol: PropTypes.string,\n    decimalLimit: PropTypes.string,\n    requireDecimal: PropTypes.bool,\n    allowNegative: PropTypes.bool,\n    allowLeadingZeroes: PropTypes.bool,\n    integerLimit: PropTypes.number,\n  }),\n}\n\nexport default CurrencyInput\n","import React, { useState, useEffect } from \"react\";\nimport {\n    makeStyles,\n    Paper,\n    Grid,\n    TextField,\n    Table,\n    TableHead,\n    TableBody,\n    TableCell,\n    TableRow,\n    IconButton\n} from \"@material-ui/core\";\nimport { Formik, Form, Field } from 'formik';\nimport ButtonWithSpinner from \"../ButtonWithSpinner\";\nimport ConfirmationModal from \"../ConfirmationModal\";\nimport CurrencyInput from \"../CurrencyInput\";\nimport InputMask from 'react-input-mask'\nimport { Edit as EditIcon } from \"@material-ui/icons\";\nimport CurrencyFormat from 'react-currency-format';\nimport MaskedInput from 'react-text-mask'\n\nimport { toast } from \"react-toastify\";\nimport usePlans from \"../../hooks/usePlans\";\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%'\n    },\n    mainPaper: {\n        width: '100%',\n        flex: 1,\n        padding: theme.spacing(2)\n    },\n    fullWidth: {\n        width: '100%'\n    },\n    tableContainer: {\n        width: '100%',\n        overflowX: \"scroll\",\n        ...theme.scrollbarStyles\n    },\n    textfield: {\n        width: '100%'\n    },\n    textRight: {\n        textAlign: 'right'\n    },\n    row: {\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2)\n    },\n    control: {\n        paddingRight: theme.spacing(1),\n        paddingLeft: theme.spacing(1)\n    },\n    buttonContainer: {\n        textAlign: 'right',\n        padding: theme.spacing(1)\n    }\n}));\n\nexport function PlanManagerForm(props) {\n    const { onSubmit, onDelete, onCancel, initialValue, loading } = props;\n    const classes = useStyles()\n\n    const [record, setRecord] = useState({\n        name: '',\n        users: 0,\n        connections: 0,\n        queues: 0,\n        value: 0\n    });\n\n    useEffect(() => {\n        setRecord(initialValue)\n    }, [initialValue])\n\n    const handleSubmit = async (data) => {\n        onSubmit(data)\n    }\n\n    return (\n        <Formik\n            enableReinitialize\n            className={classes.fullWidth}\n            initialValues={record}\n            onSubmit={(values, { resetForm }) =>\n                setTimeout(() => {\n                    handleSubmit(values)\n                    resetForm()\n                }, 500)\n            }\n        >\n            {(values) => (\n                <Form className={classes.fullWidth}>\n                    <Grid spacing={2} justifyContent=\"flex-end\" container>\n                        <Grid xs={12} sm={6} md={4} item>\n                            <Field\n                                as={TextField}\n                                label=\"Nome\"\n                                name=\"name\"\n                                variant=\"outlined\"\n                                className={classes.fullWidth}\n                                margin=\"dense\"\n                            />\n                        </Grid>\n                        <Grid xs={12} sm={6} md={4} item>\n                            <Field\n                                as={TextField}\n                                label=\"Valor\"\n                                name=\"value\"\n                                variant=\"outlined\"\n                                className={classes.fullWidth}\n                                margin=\"dense\"\n                                type=\"text\"\n                            />\n\n\n                        </Grid>\n                        <Grid xs={12} sm={6} md={4} item>\n                            <Field\n                                as={TextField}\n                                label=\"Usuários\"\n                                name=\"users\"\n                                variant=\"outlined\"\n                                className={classes.fullWidth}\n                                margin=\"dense\"\n                                type=\"number\"\n                            />\n                        </Grid>\n                        <Grid xs={12} sm={6} md={4} item>\n                            <Field\n                                as={TextField}\n                                label=\"Conexões\"\n                                name=\"connections\"\n                                variant=\"outlined\"\n                                className={classes.fullWidth}\n                                margin=\"dense\"\n                                type=\"number\"\n                            />\n                        </Grid>\n                        <Grid xs={12} sm={6} md={4} item>\n                            <Field\n                                as={TextField}\n                                label=\"Filas\"\n                                name=\"queues\"\n                                variant=\"outlined\"\n                                className={classes.fullWidth}\n                                margin=\"dense\"\n                                type=\"number\"\n                            />\n                        </Grid>\n                        <Grid xs={12} item>\n                            <Grid justifyContent=\"flex-end\" spacing={1} container>\n                                <Grid xs={4} md={1} item>\n                                    <ButtonWithSpinner className={classes.fullWidth} loading={loading} onClick={() => onCancel()} variant=\"contained\">\n                                        Limpar\n                                    </ButtonWithSpinner>\n                                </Grid>\n                                {record.id !== undefined ? (\n                                    <Grid xs={4} md={1} item>\n                                        <ButtonWithSpinner className={classes.fullWidth} loading={loading} onClick={() => onDelete(record)} variant=\"contained\" color=\"secondary\">\n                                            Excluir\n                                        </ButtonWithSpinner>\n                                    </Grid>\n                                ) : null}\n                                <Grid xs={4} md={1} item>\n                                    <ButtonWithSpinner className={classes.fullWidth} loading={loading} type=\"submit\" variant=\"contained\" color=\"primary\">\n                                        Salvar\n                                    </ButtonWithSpinner>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Form>\n            )\n            }\n        </Formik >\n    )\n}\n\nexport function PlansManagerGrid(props) {\n    const { records, onSelect } = props\n    const classes = useStyles()\n\n    return (\n        <Paper className={classes.tableContainer}>\n            <Table className={classes.fullWidth} size=\"small\" aria-label=\"a dense table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell align=\"center\" style={{ width: '1%' }}>#</TableCell>\n                        <TableCell align=\"left\">Nome</TableCell>\n                        <TableCell align=\"center\">Usuários</TableCell>\n                        <TableCell align=\"center\">Conexões</TableCell>\n                        <TableCell align=\"center\">Filas</TableCell>\n                        <TableCell align=\"center\">Valor</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {records.map((row) => (\n                        <TableRow key={row.id}>\n                            <TableCell align=\"center\" style={{ width: '1%' }}>\n                                <IconButton onClick={() => onSelect(row)} aria-label=\"delete\">\n                                    <EditIcon />\n                                </IconButton>\n                            </TableCell>\n                            <TableCell align=\"left\">{row.name || '-'}</TableCell>\n                            <TableCell align=\"center\">{row.users || '-'}</TableCell>\n                            <TableCell align=\"center\">{row.connections || '-'}</TableCell>\n                            <TableCell align=\"center\">{row.queues || '-'}</TableCell>\n                            <TableCell align=\"center\">{row.value.toLocaleString('pt-br', { style: 'currency', currency: 'BRL' }) || '-'}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </Paper>\n    )\n}\n\nexport default function PlansManager() {\n    const classes = useStyles()\n    const { list, save, update, remove } = usePlans()\n\n    const [showConfirmDialog, setShowConfirmDialog] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const [records, setRecords] = useState([])\n    const [record, setRecord] = useState({\n        name: '',\n        users: 0,\n        connections: 0,\n        queues: 0,\n        value: 0\n    })\n\n    useEffect(() => {\n        async function fetchData() {\n            await loadPlans()\n        }\n        fetchData()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const loadPlans = async () => {\n        setLoading(true)\n        try {\n            const planList = await list()\n            setRecords(planList)\n        } catch (e) {\n            toast.error('Não foi possível carregar a lista de registros')\n        }\n        setLoading(false)\n    }\n\n    const handleSubmit = async (data) => {\n        const datanew = {\n            id: data.id,\n            connections: data.connections,\n            name: data.name,\n            queues: data.queues,\n            users: data.users,\n            value: data.value.replace(\",\", \".\")\n        }\n        setLoading(true)\n        try {\n            if (data.id !== undefined) {\n                await update(datanew)\n            } else {\n                await save(datanew)\n            }\n            await loadPlans()\n            handleCancel()\n            toast.success('Operação realizada com sucesso!')\n        } catch (e) {\n            toast.error('Não foi possível realizar a operação. Verifique se já existe uma plano com o mesmo nome ou se os campos foram preenchidos corretamente')\n        }\n        setLoading(false)\n    }\n\n    const handleDelete = async () => {\n        setLoading(true)\n        try {\n            await remove(record.id)\n            await loadPlans()\n            handleCancel()\n            toast.success('Operação realizada com sucesso!')\n        } catch (e) {\n            toast.error('Não foi possível realizar a operação')\n        }\n        setLoading(false)\n    }\n\n    const handleOpenDeleteDialog = () => {\n        setShowConfirmDialog(true)\n    }\n\n    const handleCancel = () => {\n        setRecord({\n            name: '',\n            users: 0,\n            connections: 0,\n            queues: 0,\n            value: 0\n        })\n    }\n\n    const handleSelect = (data) => {\n        setRecord({\n            id: data.id,\n            name: data.name || '',\n            users: data.users || 0,\n            connections: data.connections || 0,\n            queues: data.queues || 0,\n            value: data.value.toLocaleString('pt-br', { minimumFractionDigits: 2 }) || 0\n        })\n    }\n\n    return (\n        <Paper className={classes.mainPaper} elevation={0}>\n            <Grid spacing={2} container>\n                <Grid xs={12} item>\n                    <PlanManagerForm\n                        initialValue={record}\n                        onDelete={handleOpenDeleteDialog}\n                        onSubmit={handleSubmit}\n                        onCancel={handleCancel}\n                        loading={loading}\n                    />\n                </Grid>\n                <Grid xs={12} item>\n                    <PlansManagerGrid\n                        records={records}\n                        onSelect={handleSelect}\n                    />\n                </Grid>\n            </Grid>\n            <ConfirmationModal\n                title=\"Exclusão de Registro\"\n                open={showConfirmDialog}\n                onClose={() => setShowConfirmDialog(false)}\n                onConfirm={() => handleDelete()}\n            >\n                Deseja realmente excluir esse registro?\n            </ConfirmationModal>\n        </Paper>\n    )\n}","import api from \"../../services/api\";\n\nconst usePlans = () => {\n\n    const findAll = async (params) => {\n        const { data } = await api.request({\n            url: `/helps`,\n            method: 'GET',\n            params\n        });\n        return data;\n    }\n\n    const list = async (params) => {\n        const { data } = await api.request({\n            url: '/helps/list',\n            method: 'GET',\n            params\n        });\n        return data;\n    }\n\n    const save = async (data) => {\n        const { data: responseData } = await api.request({\n            url: '/helps',\n            method: 'POST',\n            data\n        });\n        return responseData;\n    }\n\n    const update = async (data) => {\n        const { data: responseData } = await api.request({\n            url: `/helps/${data.id}`,\n            method: 'PUT',\n            data\n        });\n        return responseData;\n    }\n\n    const remove = async (id) => {\n        const { data } = await api.request({\n            url: `/helps/${id}`,\n            method: 'DELETE'\n        });\n        return data;\n    }\n\n    return {\n        findAll,\n        list,\n        save,\n        update,\n        remove\n    }\n}\n\nexport default usePlans;","import React, { useState, useEffect } from \"react\";\nimport {\n    makeStyles,\n    Paper,\n    Grid,\n    TextField,\n    Table,\n    TableHead,\n    TableBody,\n    TableCell,\n    TableRow,\n    IconButton\n} from \"@material-ui/core\";\nimport { Formik, Form, Field } from 'formik';\nimport ButtonWithSpinner from \"../ButtonWithSpinner\";\nimport ConfirmationModal from \"../ConfirmationModal\";\n\nimport { Edit as EditIcon } from \"@material-ui/icons\";\n\nimport { toast } from \"react-toastify\";\nimport useHelps from \"../../hooks/useHelps\";\n\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t\twidth: '100%'\n\t},\n    mainPaper: {\n\t\twidth: '100%',\n\t\tflex: 1,\n\t\tpadding: theme.spacing(2)\n    },\n\tfullWidth: {\n\t\twidth: '100%'\n\t},\n    tableContainer: {\n\t\twidth: '100%',\n\t\toverflowX: \"scroll\",\n\t\t...theme.scrollbarStyles\n    },\n\ttextfield: {\n\t\twidth: '100%'\n\t},\n    textRight: {\n        textAlign: 'right'\n    },\n    row: {\n\t\tpaddingTop: theme.spacing(2),\n\t\tpaddingBottom: theme.spacing(2)\n    },\n    control: {\n\t\tpaddingRight: theme.spacing(1),\n\t\tpaddingLeft: theme.spacing(1)\n\t},\n    buttonContainer: {\n        textAlign: 'right',\n\t\tpadding: theme.spacing(1)\n\t}\n}));\n\nexport function HelpManagerForm (props) {\n    const { onSubmit, onDelete, onCancel, initialValue, loading } = props;\n    const classes = useStyles()\n\n    const [record, setRecord] = useState(initialValue);\n\n    useEffect(() => {\n        setRecord(initialValue)\n    }, [initialValue])\n\n    const handleSubmit = async(data) => {\n        onSubmit(data)\n    }\n\n    return (\n        <Formik\n            enableReinitialize\n            className={classes.fullWidth}\n            initialValues={record}\n            onSubmit={(values, { resetForm }) =>\n                setTimeout(() => {\n                    handleSubmit(values)\n                    resetForm()\n                }, 500)\n            }\n        >\n            {(values) => (\n                <Form className={classes.fullWidth}>\n                    <Grid spacing={2} justifyContent=\"flex-end\" container>\n                        <Grid xs={12} sm={6} md={3} item>\n                            <Field\n                                as={TextField}\n                                label=\"Título\"\n                                name=\"title\"\n                                variant=\"outlined\"\n                                className={classes.fullWidth}\n                                margin=\"dense\"\n                            />\n                        </Grid>\n                        <Grid xs={12} sm={6} md={3} item>\n                            <Field\n                                as={TextField}\n                                label=\"Código do Vídeo\"\n                                name=\"video\"\n                                variant=\"outlined\"\n                                className={classes.fullWidth}\n                                margin=\"dense\"\n                            />\n                        </Grid>\n                        <Grid xs={12} sm={12} md={6} item>\n                            <Field\n                                as={TextField}\n                                label=\"Descrição\"\n                                name=\"description\"\n                                variant=\"outlined\"\n                                className={classes.fullWidth}\n                                margin=\"dense\"\n                            />\n                        </Grid>\n                        <Grid sm={3} md={1} item>\n                            <ButtonWithSpinner className={classes.fullWidth} loading={loading} onClick={() => onCancel()} variant=\"contained\">\n                                Limpar\n                            </ButtonWithSpinner>\n                        </Grid>\n                        { record.id !== undefined ? (\n                            <Grid sm={3} md={1} item>\n                                <ButtonWithSpinner className={classes.fullWidth} loading={loading} onClick={() => onDelete(record)} variant=\"contained\" color=\"secondary\">\n                                    Excluir\n                                </ButtonWithSpinner>\n                            </Grid>\n                        ) : null}\n                        <Grid sm={3} md={1} item>\n                            <ButtonWithSpinner className={classes.fullWidth} loading={loading} type=\"submit\" variant=\"contained\" color=\"primary\">\n                                Salvar\n                            </ButtonWithSpinner>\n                        </Grid>\n                    </Grid>\n                </Form>\n            )}\n        </Formik>\n    )\n}\n\nexport function HelpsManagerGrid (props) {\n    const { records, onSelect } = props\n    const classes = useStyles()\n\n    return (\n        <Paper className={classes.tableContainer}>\n            <Table className={classes.fullWidth} size=\"small\" aria-label=\"a dense table\">\n                <TableHead>\n                <TableRow>\n                    <TableCell align=\"center\" style={{width: '1%'}}>#</TableCell>\n                    <TableCell align=\"left\">Título</TableCell>\n                    <TableCell align=\"left\">Descrição</TableCell>\n                    <TableCell align=\"left\">Vídeo</TableCell>\n                </TableRow>\n                </TableHead>\n                <TableBody>\n                {records.map((row) => (\n                    <TableRow key={row.id}>\n                        <TableCell align=\"center\" style={{width: '1%'}}>\n                            <IconButton onClick={() => onSelect(row)} aria-label=\"delete\">\n                                <EditIcon />\n                            </IconButton>\n                        </TableCell>\n                        <TableCell align=\"left\">{row.title || '-'}</TableCell>\n                        <TableCell align=\"left\">{row.description || '-'}</TableCell>\n                        <TableCell align=\"left\">{row.video || '-'}</TableCell>\n                    </TableRow>\n                ))}\n                </TableBody>\n            </Table>\n        </Paper>\n    )\n}\n\nexport default function HelpsManager () {\n    const classes = useStyles()\n    const { list, save, update, remove } = useHelps()\n    \n    const [showConfirmDialog, setShowConfirmDialog] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const [records, setRecords] = useState([])\n    const [record, setRecord] = useState({\n        title: '',\n        description: '',\n        video: ''\n    })\n\n    useEffect(() => {\n        async function fetchData () {\n            await loadHelps()\n        }\n        fetchData()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const loadHelps = async () => {\n        setLoading(true)\n        try {\n            const helpList = await list()\n            setRecords(helpList)\n        } catch (e) {\n            toast.error('Não foi possível carregar a lista de registros')\n        }\n        setLoading(false)\n    }\n\n    const handleSubmit = async (data) => {\n        setLoading(true)\n        try {\n            if (data.id !== undefined) {\n                await update(data)\n            } else {\n                await save(data)\n            }\n            await loadHelps()\n            handleCancel()\n            toast.success('Operação realizada com sucesso!')\n        } catch (e) {\n            toast.error('Não foi possível realizar a operação. Verifique se já existe uma helpo com o mesmo nome ou se os campos foram preenchidos corretamente')\n        }\n        setLoading(false)\n    }\n\n    const handleDelete = async () => {\n        setLoading(true)\n        try {\n            await remove(record.id)\n            await loadHelps()\n            handleCancel()\n            toast.success('Operação realizada com sucesso!')\n        } catch (e) {\n            toast.error('Não foi possível realizar a operação')\n        }\n        setLoading(false)\n    }\n\n    const handleOpenDeleteDialog = () => {\n        setShowConfirmDialog(true)\n    }\n\n    const handleCancel = () => {\n        setRecord({\n            title: '',\n            description: '',\n            video: ''\n        })\n    }\n\n    const handleSelect = (data) => {\n        setRecord({\n            id: data.id,\n            title: data.title || '',\n            description: data.description || '',\n            video: data.video || ''\n        })\n    }\n\n    return (\n        <Paper className={classes.mainPaper} elevation={0}>\n            <Grid spacing={2} container>\n                <Grid xs={12} item>\n                    <HelpManagerForm \n                        initialValue={record} \n                        onDelete={handleOpenDeleteDialog} \n                        onSubmit={handleSubmit} \n                        onCancel={handleCancel} \n                        loading={loading}\n                    />\n                </Grid>\n                <Grid xs={12} item>\n                    <HelpsManagerGrid \n                        records={records}\n                        onSelect={handleSelect}\n                    />\n                </Grid>\n            </Grid>\n            <ConfirmationModal\n                title=\"Exclusão de Registro\"\n                open={showConfirmDialog}\n                onClose={() => setShowConfirmDialog(false)}\n                onConfirm={() => handleDelete()}\n            >\n                Deseja realmente excluir esse registro?\n            </ConfirmationModal>\n        </Paper>\n    )\n}","import api from \"../../services/api\";\n\nconst useSettings = () => {\n\n    const getAll = async (params) => {\n        const { data } = await api.request({\n            url: '/settings',\n            method: 'GET',\n            params\n        });\n        return data;\n    }\n\n    const update = async (data) => {\n        const { data: responseData } = await api.request({\n            url: `/settings/${data.key}`,\n            method: 'PUT',\n            data\n        });\n        return responseData;\n    }\n\n    return {\n\t\tgetAll,\n        update\n    }\n}\n\nexport default useSettings;","import React, { useEffect, useState } from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Title from \"../Title\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport useSettings from \"../../hooks/useSettings\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { grey, blue } from \"@material-ui/core/colors\";\nimport { Tabs, Tab } from \"@material-ui/core\";\n\n//import 'react-toastify/dist/ReactToastify.css';\n \nconst useStyles = makeStyles((theme) => ({\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  fixedHeightPaper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    height: 240,\n  },\n  tab: {\n    backgroundColor: theme.mode === 'light' ? \"#f2f2f2\" : \"#7f7f7f\",\n    borderRadius: 4,\n    width: \"100%\",    \n    \"& .MuiTabs-flexContainer\": {\n      justifyContent: \"center\"\n    }\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: 12,\n    width: \"100%\",\n  },\n  cardAvatar: {\n    fontSize: \"55px\",\n    color: grey[500],\n    backgroundColor: \"#ffffff\",\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n  },\n  cardTitle: {\n    fontSize: \"18px\",\n    color: blue[700],\n  },\n  cardSubtitle: {\n    color: grey[600],\n    fontSize: \"14px\",\n  },\n  alignRight: {\n    textAlign: \"right\",\n  },\n  fullWidth: {\n    width: \"100%\",\n  },\n  selectContainer: {\n    width: \"100%\",\n    textAlign: \"left\",\n  },\n}));\n\nexport default function Options(props) {\n  const { settings, scheduleTypeChanged } = props;\n  const classes = useStyles();\n  const [userRating, setUserRating] = useState(\"disabled\");\n  const [scheduleType, setScheduleType] = useState(\"disabled\");\n  const [callType, setCallType] = useState(\"enabled\");\n  const [chatbotType, setChatbotType] = useState(\"\");\n  const [CheckMsgIsGroup, setCheckMsgIsGroupType] = useState(\"enabled\");\n  const [outsideMessageType, setOutsideMessageType] = useState(\"disabled\");\n  const [loadingUserRating, setLoadingUserRating] = useState(false);\n  const [loadingScheduleType, setLoadingScheduleType] = useState(false);\n  const [loadingCallType, setLoadingCallType] = useState(false);\n  const [loadingChatbotType, setLoadingChatbotType] = useState(false);\n  const [loadingCheckMsgIsGroup, setCheckMsgIsGroup] = useState(false);\n\n  const [loadingOutsideMessageType, setLoadingOutsideMessageType] = useState(false);\n  const [loadingOutsideQueueType, setLoadingOutsideQueueType] = useState(false);\n\n\n  const [ipixcType, setIpIxcType] = useState(\"\");\n  const [loadingIpIxcType, setLoadingIpIxcType] = useState(false);\n  const [tokenixcType, setTokenIxcType] = useState(\"\");\n  const [loadingTokenIxcType, setLoadingTokenIxcType] = useState(false);\n\n  const [ipmkauthType, setIpMkauthType] = useState(\"\");\n  const [loadingIpMkauthType, setLoadingIpMkauthType] = useState(false);\n  const [clientidmkauthType, setClientIdMkauthType] = useState(\"\");\n  const [loadingClientIdMkauthType, setLoadingClientIdMkauthType] = useState(false);\n  const [clientsecretmkauthType, setClientSecrectMkauthType] = useState(\"\");\n  const [loadingClientSecrectMkauthType, setLoadingClientSecrectMkauthType] = useState(false);\n\n  const [asaasType, setAsaasType] = useState(\"\");\n  const [loadingAsaasType, setLoadingAsaasType] = useState(false);\n\n  const { update } = useSettings();\n\n  useEffect(() => {\n    if (Array.isArray(settings) && settings.length) {\n      const userRating = settings.find((s) => s.key === \"userRating\");\n      if (userRating) {\n        setUserRating(userRating.value);\n      }\n      const scheduleType = settings.find((s) => s.key === \"scheduleType\");\n      if (scheduleType) {\n        setScheduleType(scheduleType.value);\n      }\n      const callType = settings.find((s) => s.key === \"call\");\n      if (callType) {\n        setCallType(callType.value);\n      }\n      const CheckMsgIsGroup = settings.find((s) => s.key === \"CheckMsgIsGroup\");\n      if (CheckMsgIsGroup) {\n        setCheckMsgIsGroupType(CheckMsgIsGroup.value);\n      }\n      const chatbotType = settings.find((s) => s.key === \"chatBotType\");\n      if (chatbotType) {\n        setChatbotType(chatbotType.value);\n      }\n\n      const ipixcType = settings.find((s) => s.key === \"ipixc\");\n      if (ipixcType) {\n        setIpIxcType(ipixcType.value);\n      }\n\n      const tokenixcType = settings.find((s) => s.key === \"tokenixc\");\n      if (tokenixcType) {\n        setTokenIxcType(tokenixcType.value);\n      }\n\n      const ipmkauthType = settings.find((s) => s.key === \"ipmkauth\");\n      if (ipmkauthType) {\n        setIpMkauthType(ipmkauthType.value);\n      }\n\n      const clientidmkauthType = settings.find((s) => s.key === \"clientidmkauth\");\n      if (clientidmkauthType) {\n        setClientIdMkauthType(clientidmkauthType.value);\n      }\n\n      const clientsecretmkauthType = settings.find((s) => s.key === \"clientsecretmkauth\");\n      if (clientsecretmkauthType) {\n        setClientSecrectMkauthType(clientsecretmkauthType.value);\n      }\n\n      const asaasType = settings.find((s) => s.key === \"asaas\");\n      if (asaasType) {\n        setAsaasType(asaasType.value);\n      }\n    \n      const outsideMessageType = settings.find((s) => s.key === \"outsidemessage\");\n      if (outsideMessageType) {\n        setOutsideMessageType(outsideMessageType.value);\n      }\n    \n    \n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [settings]);\n\n  async function handleChangeUserRating(value) {\n    setUserRating(value);\n    setLoadingUserRating(true);\n    await update({\n      key: \"userRating\",\n      value,\n    });\n    toast.success(\"Operação atualizada com sucesso.\");\n    setLoadingUserRating(false);\n  }\n\n  async function handleScheduleType(value) {\n    setScheduleType(value);\n    setLoadingScheduleType(true);\n    await update({\n      key: \"scheduleType\",\n      value,\n    });\n    //toast.success(\"Oraçãpeo atualizada com sucesso.\");\n    toast.success('Operação atualizada com sucesso.', {\n      position: \"top-right\",\n      autoClose: 2000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: false,\n      draggable: true,\n      theme: \"light\",\n      });\n    setLoadingScheduleType(false);\n    if (typeof scheduleTypeChanged === \"function\") {\n      scheduleTypeChanged(value);\n    }\n  }\n\n  async function handleCallType(value) {\n    setCallType(value);\n    setLoadingCallType(true);\n    await update({\n      key: \"call\",\n      value,\n    });\n    toast.success(\"Operação atualizada com sucesso.\");\n    setLoadingCallType(false);\n  }\n\n  async function handleChatbotType(value) {\n    setChatbotType(value);\n    setLoadingChatbotType(true);\n    await update({\n      key: \"chatBotType\",\n      value,\n    });\n    toast.success(\"Operação atualizada com sucesso.\");\n    setLoadingChatbotType(false);\n  }\n\n  async function handleGroupType(value) {\n    setCheckMsgIsGroupType(value);\n    setCheckMsgIsGroup(true);\n    await update({\n      key: \"CheckMsgIsGroup\",\n      value,\n    });\n    toast.success(\"Operação atualizada com sucesso.\");\n    setCheckMsgIsGroup(false);\n    /*     if (typeof scheduleTypeChanged === \"function\") {\n          scheduleTypeChanged(value);\n        } */\n  }\n\n  async function handleChangeIPIxc(value) {\n    setIpIxcType(value);\n    setLoadingIpIxcType(true);\n    await update({\n      key: \"ipixc\",\n      value,\n    });\n    toast.success(\"Operação atualizada com sucesso.\");\n    setLoadingIpIxcType(false);\n  }\n\n  async function handleChangeTokenIxc(value) {\n    setTokenIxcType(value);\n    setLoadingTokenIxcType(true);\n    await update({\n      key: \"tokenixc\",\n      value,\n    });\n    toast.success(\"Operação atualizada com sucesso.\");\n    setLoadingTokenIxcType(false);\n  }\n\n  async function handleChangeIpMkauth(value) {\n    setIpMkauthType(value);\n    setLoadingIpMkauthType(true);\n    await update({\n      key: \"ipmkauth\",\n      value,\n    });\n    toast.success(\"Operação atualizada com sucesso.\");\n    setLoadingIpMkauthType(false);\n  }\n\n  async function handleOutsideMessageType(value) {\n    setOutsideMessageType(value);\n    setLoadingOutsideMessageType(true);\n    await update({\n      key: \"outsidemessage\",\n      value,\n    });\n    toast.success(\"Operação atualizada com sucesso.\");\n    setLoadingOutsideMessageType(false);\n  }\n\n  async function handleChangeClientIdMkauth(value) {\n    setClientIdMkauthType(value);\n    setLoadingClientIdMkauthType(true);\n    await update({\n      key: \"clientidmkauth\",\n      value,\n    });\n    toast.success(\"Operação atualizada com sucesso.\");\n    setLoadingClientIdMkauthType(false);\n  }\n\n  async function handleChangeClientSecrectMkauth(value) {\n    setClientSecrectMkauthType(value);\n    setLoadingClientSecrectMkauthType(true);\n    await update({\n      key: \"clientsecretmkauth\",\n      value,\n    });\n    toast.success(\"Operação atualizada com sucesso.\");\n    setLoadingClientSecrectMkauthType(false);\n  }\n\n  async function handleChangeAsaas(value) {\n    setAsaasType(value);\n    setLoadingAsaasType(true);\n    await update({\n      key: \"asaas\",\n      value,\n    });\n    toast.success(\"Operação atualizada com sucesso.\");\n    setLoadingAsaasType(false);\n  }\n  return (\n    <>\n      <Grid spacing={3} container>\n        {/* <Grid xs={12} item>\n                    <Title>Configurações Gerais</Title>\n                </Grid> */}\n        <Grid xs={12} sm={6} md={4} item>\n          <FormControl className={classes.selectContainer}>\n            <InputLabel id=\"ratings-label\">Avaliações</InputLabel>\n            <Select\n              labelId=\"ratings-label\"\n              value={userRating}\n              onChange={async (e) => {\n                handleChangeUserRating(e.target.value);\n              }}\n            >\n              <MenuItem value={\"disabled\"}>Desabilitadas</MenuItem>\n              <MenuItem value={\"enabled\"}>Habilitadas</MenuItem>\n            </Select>\n            <FormHelperText>\n              {loadingUserRating && \"Atualizando...\"}\n            </FormHelperText>\n          </FormControl>\n        </Grid>\n        <Grid xs={12} sm={6} md={4} item>\n          <FormControl className={classes.selectContainer}>\n            <InputLabel id=\"schedule-type-label\">\n              Gerenciamento de Expediente\n            </InputLabel>\n            <Select\n              labelId=\"schedule-type-label\"\n              value={scheduleType}\n              onChange={async (e) => {\n                handleScheduleType(e.target.value);\n              }}\n            >\n              <MenuItem value={\"disabled\"}>Desabilitado</MenuItem>\n              <MenuItem value={\"queue\"}>Gerenciamento Por Fila</MenuItem>\n              <MenuItem value={\"company\"}>Gerenciamento Por Empresa</MenuItem>\n            </Select>\n            <FormHelperText>\n              {loadingScheduleType && \"Atualizando...\"}\n            </FormHelperText>\n          </FormControl>\n        </Grid>\n        <Grid xs={12} sm={6} md={4} item>\n          <FormControl className={classes.selectContainer}>\n            <InputLabel id=\"group-type-label\">\n              Ignorar Mensagens de Grupos\n            </InputLabel>\n            <Select\n              labelId=\"group-type-label\"\n              value={CheckMsgIsGroup}\n              onChange={async (e) => {\n                handleGroupType(e.target.value);\n              }}\n            >\n              <MenuItem value={\"disabled\"}>Desativado</MenuItem>\n              <MenuItem value={\"enabled\"}>Ativado</MenuItem>\n            </Select>\n            <FormHelperText>\n              {loadingScheduleType && \"Atualizando...\"}\n            </FormHelperText>\n          </FormControl>\n        </Grid>\n        <Grid xs={12} sm={6} md={4} item>\n          <FormControl className={classes.selectContainer}>\n            <InputLabel id=\"call-type-label\">\n              Aceitar Chamada\n            </InputLabel>\n            <Select\n              labelId=\"call-type-label\"\n              value={callType}\n              onChange={async (e) => {\n                handleCallType(e.target.value);\n              }}\n            >\n              <MenuItem value={\"disabled\"}>Não Aceitar</MenuItem>\n              <MenuItem value={\"enabled\"}>Aceitar</MenuItem>\n            </Select>\n            <FormHelperText>\n              {loadingCallType && \"Atualizando...\"}\n            </FormHelperText>\n          </FormControl>\n        </Grid>\n        <Grid xs={12} sm={6} md={4} item>\n          <FormControl className={classes.selectContainer}>\n            <InputLabel id=\"chatbot-type-label\">\n              Tipo Chatbot\n            </InputLabel>\n            <Select\n              labelId=\"chatbot-type-label\"\n              value={chatbotType}\n              onChange={async (e) => {\n                handleChatbotType(e.target.value);\n              }}\n            >\n              <MenuItem value={\"text\"}>Texto</MenuItem>\n            </Select>\n            <FormHelperText>\n              {loadingChatbotType && \"Atualizando...\"}\n            </FormHelperText>\n          </FormControl>\n        </Grid>\n\t\t\n\t\t<Grid xs={12} sm={6} md={4} item>\n          <FormControl className={classes.selectContainer}>\n            <InputLabel id=\"outsidemessage-type-label\">\n              Abrir Tickets Fora do Expediente?\n            </InputLabel>\n            <Select\n              labelId=\"outsidemessage-type-label\"\n              value={outsideMessageType}\n              onChange={async (e) => {\n                handleOutsideMessageType(e.target.value);\n              }}\n            >\n              <MenuItem value={\"disabled\"}>Não</MenuItem>\n              <MenuItem value={\"enabled\"}>Sim</MenuItem>\n            </Select>\n            <FormHelperText>\n              {loadingOutsideMessageType && \"Atualizando...\"}\n            </FormHelperText>\n          </FormControl>\n        </Grid>\n\n\n\n      </Grid>\n\n      {/*\n\n      <Grid spacing={3} container>\n        <Tabs\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          scrollButtons=\"on\"\n          variant=\"scrollable\"\n          className={classes.tab}\n          style={{\n            marginBottom: 20,\n            marginTop: 20\n          }}\n        >\n          <Tab\n\n            label=\"INTEGRAÇÕES\" />\n\n        </Tabs>\n\n      </Grid> \n\n      */}\n\n      \n      {/*-----------------IXC-----------------*/}\n\n      {/*\n      <Grid spacing={3} container\n        style={{ marginBottom: 10 }}>\n        <Tabs\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          scrollButtons=\"on\"\n          variant=\"scrollable\"\n          className={classes.tab}\n        >\n          <Tab\n\n            label=\"IXC\" />\n\n        </Tabs>\n        <Grid xs={12} sm={6} md={6} item>\n          <FormControl className={classes.selectContainer}>\n            <TextField\n              id=\"ipixc\"\n              name=\"ipixc\"\n              margin=\"dense\"\n              label=\"IP do IXC\"\n              variant=\"outlined\"\n              value={ipixcType}\n              onChange={async (e) => {\n                handleChangeIPIxc(e.target.value);\n              }}\n            >\n            </TextField>\n            <FormHelperText>\n              {loadingIpIxcType && \"Atualizando...\"}\n            </FormHelperText>\n          </FormControl>\n        </Grid>\n        <Grid xs={12} sm={6} md={6} item>\n          <FormControl className={classes.selectContainer}>\n            <TextField\n              id=\"tokenixc\"\n              name=\"tokenixc\"\n              margin=\"dense\"\n              label=\"Token do IXC\"\n              variant=\"outlined\"\n              value={tokenixcType}\n              onChange={async (e) => {\n                handleChangeTokenIxc(e.target.value);\n              }}\n            >\n            </TextField>\n            <FormHelperText>\n              {loadingTokenIxcType && \"Atualizando...\"}\n            </FormHelperText>\n          </FormControl>\n        </Grid>\n      </Grid>\n\n      */}\n\n      {/*-----------------MK-AUTH-----------------*/}\n\n      {/*\n      <Grid spacing={3} container\n        style={{ marginBottom: 10 }}>\n        <Tabs\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          scrollButtons=\"on\"\n          variant=\"scrollable\"\n          className={classes.tab}\n        >\n          <Tab label=\"MK-AUTH\" />\n\n        </Tabs>\n        <Grid xs={12} sm={12} md={4} item>\n          <FormControl className={classes.selectContainer}>\n            <TextField\n              id=\"ipmkauth\"\n              name=\"ipmkauth\"\n              margin=\"dense\"\n              label=\"Ip Mk-Auth\"\n              variant=\"outlined\"\n              value={ipmkauthType}\n              onChange={async (e) => {\n                handleChangeIpMkauth(e.target.value);\n              }}\n            >\n            </TextField>\n            <FormHelperText>\n              {loadingIpMkauthType && \"Atualizando...\"}\n            </FormHelperText>\n          </FormControl>\n        </Grid>\n        <Grid xs={12} sm={12} md={4} item>\n          <FormControl className={classes.selectContainer}>\n            <TextField\n              id=\"clientidmkauth\"\n              name=\"clientidmkauth\"\n              margin=\"dense\"\n              label=\"Client Id\"\n              variant=\"outlined\"\n              value={clientidmkauthType}\n              onChange={async (e) => {\n                handleChangeClientIdMkauth(e.target.value);\n              }}\n            >\n            </TextField>\n            <FormHelperText>\n              {loadingClientIdMkauthType && \"Atualizando...\"}\n            </FormHelperText>\n          </FormControl>\n        </Grid>\n        <Grid xs={12} sm={12} md={4} item>\n          <FormControl className={classes.selectContainer}>\n            <TextField\n              id=\"clientsecretmkauth\"\n              name=\"clientsecretmkauth\"\n              margin=\"dense\"\n              label=\"Client Secret\"\n              variant=\"outlined\"\n              value={clientsecretmkauthType}\n              onChange={async (e) => {\n                handleChangeClientSecrectMkauth(e.target.value);\n              }}\n            >\n            </TextField>\n            <FormHelperText>\n              {loadingClientSecrectMkauthType && \"Atualizando...\"}\n            </FormHelperText>\n          </FormControl>\n        </Grid>\n      </Grid>\n\n      */}\n\n      {/*-----------------ASAAS-----------------*/}\n\n      {/*\n      <Grid spacing={3} container\n        style={{ marginBottom: 10 }}>\n        <Tabs\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          scrollButtons=\"on\"\n          variant=\"scrollable\"\n          className={classes.tab}\n        >\n          <Tab label=\"ASAAS\" />\n\n        </Tabs>\n        <Grid xs={12} sm={12} md={12} item>\n          <FormControl className={classes.selectContainer}>\n            <TextField\n              id=\"asaas\"\n              name=\"asaas\"\n              margin=\"dense\"\n              label=\"Token Asaas\"\n              variant=\"outlined\"\n              value={asaasType}\n              onChange={async (e) => {\n                handleChangeAsaas(e.target.value);\n              }}\n            >\n            </TextField>\n            <FormHelperText>\n              {loadingAsaasType && \"Atualizando...\"}\n            </FormHelperText>\n          </FormControl>\n        </Grid>\n      </Grid> */}\n\n    </>\n  );\n}\n","const OnlyForSuperUser = ({ user, yes, no }) => user.super ? yes() : no();\n\nOnlyForSuperUser.defaultProps = {\n    user: {},\n\tyes: () => null,\n\tno: () => null,\n};\n\nexport default OnlyForSuperUser;","import React, { useState, useEffect } from \"react\";\nimport MainContainer from \"../../components/MainContainer\";\nimport MainHeader from \"../../components/MainHeader\";\nimport Title from \"../../components/Title\";\nimport { makeStyles, Paper, Tabs, Tab } from \"@material-ui/core\";\n\nimport TabPanel from \"../../components/TabPanel\";\n\nimport SchedulesForm from \"../../components/SchedulesForm\";\nimport CompaniesManager from \"../../components/CompaniesManager\";\nimport PlansManager from \"../../components/PlansManager\";\nimport HelpsManager from \"../../components/HelpsManager\";\nimport Options from \"../../components/Settings/Options\";\n\nimport { i18n } from \"../../translate/i18n.js\";\nimport { toast } from \"react-toastify\";\n\nimport useCompanies from \"../../hooks/useCompanies\";\nimport useAuth from \"../../hooks/useAuth.js\";\nimport useSettings from \"../../hooks/useSettings\";\n\nimport OnlyForSuperUser from \"../../components/OnlyForSuperUser\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flex: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n  mainPaper: {\n    ...theme.scrollbarStyles,\n    overflowY: \"scroll\",\n    flex: 1,\n  },\n  tab: {\n    backgroundColor: theme.mode === 'light' ? \"#f2f2f2\" : \"#7f7f7f\",\n    borderRadius: 4,\n  },\n  paper: {\n    ...theme.scrollbarStyles,\n    overflowY: \"scroll\",\n    padding: theme.spacing(2),\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n  container: {\n    width: \"100%\",\n    maxHeight: \"100%\",\n  },\n  control: {\n    padding: theme.spacing(1),\n  },\n  textfield: {\n    width: \"100%\",\n  },\n}));\n\nconst SettingsCustom = () => {\n  const classes = useStyles();\n  const [tab, setTab] = useState(\"options\");\n  const [schedules, setSchedules] = useState([]);\n  const [company, setCompany] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [currentUser, setCurrentUser] = useState({});\n  const [settings, setSettings] = useState({});\n  const [schedulesEnabled, setSchedulesEnabled] = useState(false);\n\n  const { getCurrentUserInfo } = useAuth();\n  const { find, updateSchedules } = useCompanies();\n  const { getAll: getAllSettings } = useSettings();\n\n  useEffect(() => {\n    async function findData() {\n      setLoading(true);\n      try {\n        const companyId = localStorage.getItem(\"companyId\");\n        const company = await find(companyId);\n        const settingList = await getAllSettings();\n        setCompany(company);\n        setSchedules(company.schedules);\n        setSettings(settingList);\n\n        if (Array.isArray(settingList)) {\n          const scheduleType = settingList.find(\n            (d) => d.key === \"scheduleType\"\n          );\n          if (scheduleType) {\n            setSchedulesEnabled(scheduleType.value === \"company\");\n          }\n        }\n\n        const user = await getCurrentUserInfo();\n        setCurrentUser(user);\n      } catch (e) {\n        toast.error(e);\n      }\n      setLoading(false);\n    }\n    findData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleTabChange = (event, newValue) => {\n      async function findData() {\n        setLoading(true);\n        try {\n          const companyId = localStorage.getItem(\"companyId\");\n          const company = await find(companyId);\n          const settingList = await getAllSettings();\n          setCompany(company);\n          setSchedules(company.schedules);\n          setSettings(settingList);\n  \n          if (Array.isArray(settingList)) {\n            const scheduleType = settingList.find(\n              (d) => d.key === \"scheduleType\"\n            );\n            if (scheduleType) {\n              setSchedulesEnabled(scheduleType.value === \"company\");\n            }\n          }\n  \n          const user = await getCurrentUserInfo();\n          setCurrentUser(user);\n        } catch (e) {\n          toast.error(e);\n        }\n        setLoading(false);\n      }\n      findData();\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n\n    setTab(newValue);\n  };\n\n  const handleSubmitSchedules = async (data) => {\n    setLoading(true);\n    try {\n      setSchedules(data);\n      await updateSchedules({ id: company.id, schedules: data });\n      toast.success(\"Horários atualizados com sucesso.\");\n    } catch (e) {\n      toast.error(e);\n    }\n    setLoading(false);\n  };\n\n  const isSuper = () => {\n    return currentUser.super;\n  };\n\n  return (\n    <MainContainer className={classes.root}>\n      <MainHeader>\n        <Title>{i18n.t(\"settings.title\")}</Title>\n      </MainHeader>\n      <Paper className={classes.mainPaper} elevation={1}>\n        <Tabs\n          value={tab}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          scrollButtons=\"on\"\n          variant=\"scrollable\"\n          onChange={handleTabChange}\n          className={classes.tab}\n        >\n          <Tab label=\"Opções\" value={\"options\"} />\n          {schedulesEnabled && <Tab label=\"Horários\" value={\"schedules\"} />}\n          {isSuper() ? <Tab label=\"Empresas\" value={\"companies\"} /> : null}\n          {isSuper() ? <Tab label=\"Planos\" value={\"plans\"} /> : null}\n          {isSuper() ? <Tab label=\"Ajuda\" value={\"helps\"} /> : null}\n        </Tabs>\n        <Paper className={classes.paper} elevation={0}>\n          <TabPanel\n            className={classes.container}\n            value={tab}\n            name={\"schedules\"}\n          >\n            <SchedulesForm\n              loading={loading}\n              onSubmit={handleSubmitSchedules}\n              initialValues={schedules}\n            />\n          </TabPanel>\n          <OnlyForSuperUser\n            user={currentUser}\n            yes={() => (\n              <TabPanel\n                className={classes.container}\n                value={tab}\n                name={\"companies\"}\n              >\n                <CompaniesManager />\n              </TabPanel>\n            )}\n          />\n          <OnlyForSuperUser\n            user={currentUser}\n            yes={() => (\n              <TabPanel\n                className={classes.container}\n                value={tab}\n                name={\"plans\"}\n              >\n                <PlansManager />\n              </TabPanel>\n            )}\n          />\n          <OnlyForSuperUser\n            user={currentUser}\n            yes={() => (\n              <TabPanel\n                className={classes.container}\n                value={tab}\n                name={\"helps\"}\n              >\n                <HelpsManager />\n              </TabPanel>\n            )}\n          />\n          <TabPanel className={classes.container} value={tab} name={\"options\"}>\n            <Options\n              settings={settings}\n              scheduleTypeChanged={(value) =>\n                setSchedulesEnabled(value === \"company\")\n              }\n            />\n          </TabPanel>\n        </Paper>\n      </Paper>\n    </MainContainer>\n  );\n};\n\nexport default SettingsCustom;\n","import React from 'react';\nimport { at } from 'lodash';\nimport { useField } from 'formik';\nimport { TextField } from '@material-ui/core';\n\nexport default function InputField(props) {\n  const { errorText, ...rest } = props;\n  const [field, meta] = useField(props);\n\n  function _renderHelperText() {\n    const [touched, error] = at(meta, 'touched', 'error');\n    if (touched && error) {\n      return error;\n    }\n  }\n\n  return (\n    <TextField\n      type=\"text\"\n      error={meta.touched && meta.error && true}\n      helperText={_renderHelperText()}\n      {...field}\n      {...rest}\n    />\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { at } from 'lodash';\nimport { useField } from 'formik';\nimport {\n  InputLabel,\n  FormControl,\n  Select,\n  MenuItem,\n  FormHelperText\n} from '@material-ui/core';\n\nfunction SelectField(props) {\n  const { label, data, ...rest } = props;\n  const [field, meta] = useField(props);\n  const { value: selectedValue } = field;\n  const [touched, error] = at(meta, 'touched', 'error');\n  const isError = touched && error && true;\n  function _renderHelperText() {\n    if (isError) {\n      return <FormHelperText>{error}</FormHelperText>;\n    }\n  }\n\n  return (\n    <FormControl {...rest} error={isError}>\n      <InputLabel>{label}</InputLabel>\n      <Select {...field} value={selectedValue ? selectedValue : ''}>\n        {data.map((item, index) => (\n          <MenuItem key={index} value={item.value}>\n            {item.label}\n          </MenuItem>\n        ))}\n      </Select>\n      {_renderHelperText()}\n    </FormControl>\n  );\n}\n\nSelectField.defaultProps = {\n  data: []\n};\n\nSelectField.propTypes = {\n  data: PropTypes.array.isRequired\n};\n\nexport default SelectField;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { InputField, SelectField } from \"../../FormFields\";\nimport { AuthContext } from \"../../../context/Auth/AuthContext\";\n\nconst countries = [\n  {\n    value: \"BR\",\n    label: \"Brasil\",\n  },\n  {\n    value: \"usa\",\n    label: \"United States\",\n  },\n];\n\nexport default function AddressForm(props) {\n\n  const { user } = useContext(AuthContext);\n  const [billingName, setBillingName] = useState(user.company.billingName);\n  const [addressZipCode, setAddressZipCode] = useState(user.company.addressZipCode);\n  const [addressStreet, setAddressStreet] = useState(user.company.addressStreet);\n  const [addressState, setAddressState] = useState(user.company.addressState);\n  const [addressCity, setAddressCity] = useState(user.company.addressCity);\n  const [addressDistrict, setAddressDistrict] = useState(user.company.addressDistrict);\n\n  const {\n    formField: {\n      firstName,\n      address1,\n      city,\n      state,\n      zipcode,\n      country,\n    },\n    setFieldValue\n  } = props;\n  useEffect(() => {\n    setFieldValue(\"firstName\", billingName)\n    setFieldValue(\"zipcode\", addressZipCode)\n    setFieldValue(\"address2\", addressStreet)\n    setFieldValue(\"state\", addressState)\n    setFieldValue(\"city\", addressCity)\n    setFieldValue(\"country\", addressDistrict)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Vamos precisar de algumas informações\n      </Typography>\n      <Grid container spacing={3}>\n\n        <Grid item xs={6} sm={6}>\n          <InputField name={firstName.name} label={firstName.label} fullWidth\n            value={billingName}\n            onChange={(e) => {\n              setBillingName(e.target.value)\n              setFieldValue(\"firstName\", e.target.value)\n            }}\n          />\n        </Grid>\n        <Grid item xs={6} sm={6}>\n          <SelectField\n            name={country.name}\n            label={country.label}\n            data={countries}\n            fullWidth\n            value={addressDistrict}\n            onChange={(e) => {\n              setAddressDistrict(e.target.value)\n              setFieldValue(\"country\", e.target.value)\n            }\n            }\n          />\n        </Grid>\n\n        <Grid item xs={4}>\n          <InputField\n            name={zipcode.name}\n            label={zipcode.label}\n            fullWidth\n            value={addressZipCode}\n            onChange={(e) => {\n              setAddressZipCode(e.target.value)\n              setFieldValue(\"zipcode\", e.target.value)\n            }}\n          />\n        </Grid>\n        <Grid item xs={8}>\n          <InputField\n            name={address1.name}\n            label={address1.label}\n            fullWidth\n            value={addressStreet}\n            onChange={(e) => {\n              setAddressStreet(e.target.value)\n              setFieldValue(\"address2\", e.target.value)\n\n            }}\n          />\n        </Grid>\n\n        <Grid item xs={4}>\n          <InputField\n            name={state.name}\n            label={state.label}\n            fullWidth\n            value={addressState}\n            onChange={(e) => {\n              setAddressState(e.target.value)\n              setFieldValue(\"state\", e.target.value)\n\n            }}\n          />\n        </Grid>\n        <Grid item xs={8}>\n          <InputField\n            name={city.name}\n            label={city.label}\n            fullWidth\n            value={addressCity}\n            onChange={(e) => {\n              setAddressCity(e.target.value)\n              setFieldValue(\"city\", e.target.value)\n            }}\n          />\n        </Grid>\n\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import React, { useState, useEffect, useReducer } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Grid from '@material-ui/core/Grid';\nimport StarIcon from '@material-ui/icons/StarBorder';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nimport usePlans from \"../../../hooks/usePlans\";\nimport useCompanies from \"../../../hooks/useCompanies\";\n\nconst useStyles = makeStyles((theme) => ({\n  '@global': {\n    ul: {\n      margin: 0,\n      padding: 0,\n      listStyle: 'none',\n    },\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n\n\n  cardHeader: {\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[700],\n  },\n  cardPricing: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'baseline',\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    borderTop: `1px solid ${theme.palette.divider}`,\n    marginTop: theme.spacing(8),\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    [theme.breakpoints.up('sm')]: {\n      paddingTop: theme.spacing(6),\n      paddingBottom: theme.spacing(6),\n    },\n  },\n\n  customCard: {\n    display: \"flex\",\n    marginTop: \"16px\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n  },\n  custom: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  }\n}));\n\n\nexport default function Pricing(props) {\n  const {\n    setFieldValue,\n    setActiveStep,\n    activeStep,\n  } = props;\n\n \n\n  const { list, finder } = usePlans();\n  const { find } = useCompanies();\n\n  const classes = useStyles();\n  const [usersPlans, setUsersPlans] = React.useState(3);\n  const [companiesPlans, setCompaniesPlans] = useState(0);\n  const [connectionsPlans, setConnectionsPlans] = React.useState(3);\n  const [storagePlans, setStoragePlans] = React.useState([]);\n  const [customValuePlans, setCustomValuePlans] = React.useState(49.00);\n  const [loading, setLoading] = React.useState(false);\n  const companyId = localStorage.getItem(\"companyId\");\n\n  useEffect(() => {\n    async function fetchData() {\n      await loadCompanies();\n    }\n    fetchData();\n  }, [])\n\n  const loadCompanies = async () => {\n    setLoading(true);\n    try {\n      const companiesList = await find(companyId);\n      setCompaniesPlans(companiesList.planId);\n      await loadPlans(companiesList.planId);\n    } catch (e) {\n      console.log(e);\n      // toast.error(\"Não foi possível carregar a lista de registros\");\n    }\n    setLoading(false);\n  };\n  const loadPlans = async (companiesPlans) => {\n    setLoading(true);\n    try {\n      const plansCompanies = await finder(companiesPlans);\n      const plans = []\n\n      //plansCompanies.forEach((plan) => {\n      plans.push({\n        title: plansCompanies.name,\n        planId: plansCompanies.id,\n        price: plansCompanies.value,\n        description: [\n          `${plansCompanies.users} Usuários`,\n          `${plansCompanies.connections} Conexão`,\n          `${plansCompanies.queues} Filas`\n        ],\n        users: plansCompanies.users,\n        connections: plansCompanies.connections,\n        queues: plansCompanies.queues,\n        buttonText: 'SELECIONAR',\n        buttonVariant: 'outlined',\n      })\n\n      // setStoragePlans(data);\n      //});\n      setStoragePlans(plans);\n    } catch (e) {\n      console.log(e);\n      // toast.error(\"Não foi possível carregar a lista de registros\");\n    }\n    setLoading(false);\n  };\n\n\n  const tiers = storagePlans\n  return (\n    <React.Fragment>\n      <Grid container spacing={3}>\n        {tiers.map((tier) => (\n          // Enterprise card is full width at sm breakpoint\n          <Grid item key={tier.title} xs={12} sm={tier.title === 'Enterprise' ? 12 : 12} md={12}>\n            <Card>\n              <CardHeader\n                title={tier.title}\n                subheader={tier.subheader}\n                titleTypographyProps={{ align: 'center' }}\n                subheaderTypographyProps={{ align: 'center' }}\n                action={tier.title === 'Pro' ? <StarIcon /> : null}\n                className={classes.cardHeader}\n              />\n              <CardContent>\n                <div className={classes.cardPricing}>\n                  <Typography component=\"h2\" variant=\"h3\" color=\"textPrimary\">\n                    {\n\n                      <React.Fragment>\n                        R${tier.price.toLocaleString('pt-br', { minimumFractionDigits: 2 })}\n                      </React.Fragment>\n                    }\n                  </Typography>\n                  <Typography variant=\"h6\" color=\"textSecondary\">\n                    /mês\n                  </Typography>\n                </div>\n                <ul>\n                  {tier.description.map((line) => (\n                    <Typography component=\"li\" variant=\"subtitle1\" align=\"center\" key={line}>\n                      {line}\n                    </Typography>\n                  ))}\n                </ul>\n              </CardContent>\n              <CardActions>\n                <Button\n                  fullWidth\n                  variant={tier.buttonVariant}\n                  color=\"primary\"\n                  onClick={() => {\n                    if (tier.custom) {\n                      setFieldValue(\"plan\", JSON.stringify({\n                        users: usersPlans,\n                        connections: connectionsPlans,\n                        price: customValuePlans,\n                      }));\n                    } else {\n                      setFieldValue(\"plan\", JSON.stringify(tier));\n                    }\n                    setActiveStep(activeStep + 1);\n                  }\n                  }\n                >\n                  {tier.buttonText}\n                </Button>\n              </CardActions>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    </React.Fragment>\n  );\n}","import { makeStyles } from '@material-ui/core/styles';\nexport default makeStyles(theme => ({\n  listItem: {\n    padding: theme.spacing(1, 0)\n  },\n  total: {\n    fontWeight: '700'\n  },\n  title: {\n    marginTop: theme.spacing(2)\n  }\n}));\n","import React from 'react';\nimport { Typography, Grid } from '@material-ui/core';\nimport useStyles from './styles';\n\nfunction PaymentDetails(props) {\n  const { formValues } = props;\n  const classes = useStyles();\n  const { plan } = formValues;\n\n  const newPlan = JSON.parse(plan);\n  const { users, connections, price } = newPlan;\n  return (\n    <Grid item xs={12} sm={12}>\n      <Typography variant=\"h6\" gutterBottom className={classes.title}>\n        Detalhes do plano\n      </Typography>\n      <Typography gutterBottom>Usuários: {users}</Typography>\n      <Typography gutterBottom>Whatsapps: {connections}</Typography>\n      <Typography gutterBottom>Cobrança: Mensal</Typography>\n      <Typography gutterBottom>Total: R${price.toLocaleString('pt-br', {minimumFractionDigits: 2})}</Typography>\n    </Grid>\n  );\n}\n\nexport default PaymentDetails;\n","import ReviewOrder from './ReviewOrder';\nexport default ReviewOrder;\n","import React from 'react';\nimport { useFormikContext } from 'formik';\nimport { Typography, Grid } from '@material-ui/core';\nimport ShippingDetails from './ShippingDetails';\n\nexport default function ReviewOrder() {\n  const { values: formValues } = useFormikContext();\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Resumo da assinatura\n      </Typography>\n      <Grid container spacing={2}>\n        <ShippingDetails formValues={formValues} />\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  footer {\n    margin-top: 30px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n\n    @media (max-width: 768px) {\n      flex-direction: column;\n      .checkout-buttons {\n        display: flex;\n        flex-direction: column-reverse;\n        width: 100%;\n\n        button {\n          width: 100%;\n          margin-top: 16px;\n          margin-left: 0;\n        }\n      }\n    }\n\n    button {\n      margin-left: 16px;\n    }\n  }\n`;\nexport const Total = styled.div`\n  display: flex;\n  align-items: baseline;\n\n  span {\n    color: #333;\n    font-weight: bold;\n  }\n\n  strong {\n    color: #333;\n    font-size: 28px;\n    margin-left: 5px;\n  }\n\n  @media (max-width: 768px) {\n    min-width: 100%;\n    justify-content: space-between;\n  }\n`;\n\nexport const SuccessContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  > h2 {\n    text-align: center;\n  }\n\n  > svg {\n    margin-top: 16px;\n  }\n\n  > span {\n    margin-top: 24px;\n    text-align: center;\n  }\n\n  > p,\n  strong {\n    margin-top: 8px;\n    font-size: 9px;\n    color: #999;\n  }\n\n  .copy-button {\n    font-size: 14px;\n    cursor: pointer;\n    text-align: center;\n    user-select: none;\n    min-height: 56px;\n    display: inline-flex;\n    -webkit-box-pack: center;\n    justify-content: center;\n    -webkit-box-align: center;\n    align-items: center;\n    background-color: #f9f9f9;\n    color: #000;\n    -webkit-appearance: none !important;\n    outline: none;\n    margin-top: 16px;\n    width: 256px;\n    font-weight: 600;\n    text-transform: uppercase;\n    border: none;\n\n    > span {\n      margin-right: 8px;\n    }\n  }\n`;\n\nexport const CheckoutWrapper = styled.div`\n  width: 100%;\n  margin: 0 auto 0;\n  max-width: 1110px;\n  display: flex;\n  flex-direction: column;\n  -webkit-box-align: center;\n  align-items: center;\n  padding: 50px 95px;\n  background: #fff;\n  @media (max-width: 768px) {\n    padding: 16px 24px;\n`;","import React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport QRCode from 'react-qr-code';\nimport { SuccessContent, Total } from './style';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { FaCopy, FaCheckCircle } from 'react-icons/fa';\nimport { socketConnection } from \"../../../services/socket\";\nimport { useDate } from \"../../../hooks/useDate\";\nimport { toast } from \"react-toastify\";\n\nfunction CheckoutSuccess(props) {\n\n  const { pix } = props;\n  const [pixString,] = useState(pix?.qrcode?.qrcode || '');\n  const [stripeURL,] = useState(pix.stripeURL);\n  const [asaasURL,] = useState(pix.asaasURL);\n  const [mercadopagoURL,] = useState(pix.mercadopagoURL);\n  const [valorext,] = useState(pix.valorext);\n  const [copied, setCopied] = useState(false);\n  const history = useHistory();\n\n  const { dateToClient } = useDate();\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketConnection({ companyId });\n    socket.on(`company-${companyId}-payment`, (data) => {\n\n      if (data.action === \"CONCLUIDA\") {\n        toast.success(`Sua licença foi renovada até ${dateToClient(data.company.dueDate)}!`);\n        setTimeout(() => {\n          history.push(\"/\");\n        }, 4000);\n      }\n    });\n  }, [history]);\n\n  const handleCopyQR = () => {\n    setTimeout(() => {\n      setCopied(false);\n    }, 1 * 1000);\n    setCopied(true);\n  };\n\n  return (\n    <React.Fragment>\n      <Total>\n        <p><span>TOTAL</span></p>\n        <strong>R$ {valorext.toLocaleString('pt-br', { minimumFractionDigits: 2 })}</strong>\n      </Total>\n\n\t\n\n    <SuccessContent>\n  \n  \t{pixString && (\n    <>\n  \n    <QRCode value={pixString} />\n    <CopyToClipboard text={pixString} onCopy={handleCopyQR}>\n      <button className=\"copy-button\" type=\"button\">\n        {copied ? (\n          <>\n            <span>Copiado</span>\n            <FaCheckCircle size={18} />\n          </>\n        ) : (\n          <>\n            <span>Copiar código QR PIX</span>\n            <FaCopy size={18} />\n          </>\n        )}\n      </button>\n    </CopyToClipboard>\n    <span>\n      Para finalizar, basta realizar o pagamento escaneando ou colando o\n      código Pix acima ou escolha Pagar com Cartão de Crédito abaixo.\n    </span>\n\t<span><p> </p></span>\n    \n    </>\n    )}\n    \n    {stripeURL && (\n    <>\n\t<button onClick={() => window.open(stripeURL, '_blank')} type=\"button\"\n\n\tstyle={{\n    color: '#3c6afb',\n    background: '#ffffff',\n    border: '1px solid #3c6afb',\n    padding: '6px 16px',\n    fontSize: '18px',\n    minWidth: '50%',\n    boxSizing: 'border-box',\n    transition: 'background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    fontWeight: '500',\n    lineHeight: '1.75',\n    borderRadius: '4px',\n    letterSpacing: '0.02857em',\n    textTransform: 'uppercase',\n    // Add any additional styles here\n  \t}}\n\n\t>\n      Pagar com Cartão de Crédito\n    </button>\n\t<span><p> </p></span>\n    </>\n    )}\n    \n    \n    {mercadopagoURL && (\n    <>\n    <button onClick={() => window.open(mercadopagoURL, '_blank')} type=\"button\"\n\n\tstyle={{\n    color: '#3c6afb',\n    background: '#ffffff',\n    border: '1px solid #3c6afb',\n    padding: '6px 16px',\n    fontSize: '18px',\n    minWidth: '50%',\n    boxSizing: 'border-box',\n    transition: 'background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    fontWeight: '500',\n    lineHeight: '1.75',\n    borderRadius: '4px',\n    letterSpacing: '0.02857em',\n    textTransform: 'uppercase',\n    // Add any additional styles here\n  \t}}\n\n\t>\n      Pagar com MercadoPago\n    </button>\n\t<span><p> </p></span>\n    </>\n    )}\n    \n    {asaasURL && (\n    <>\n    <button onClick={() => window.open(asaasURL, '_blank')} type=\"button\"\n\n\tstyle={{\n    color: '#3c6afb',\n    background: '#ffffff',\n    border: '1px solid #3c6afb',\n    padding: '6px 16px',\n    fontSize: '18px',\n    minWidth: '50%',\n    boxSizing: 'border-box',\n    transition: 'background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    fontWeight: '500',\n    lineHeight: '1.75',\n    borderRadius: '4px',\n    letterSpacing: '0.02857em',\n    textTransform: 'uppercase',\n    // Add any additional styles here\n  \t}}\n\n\t>\n      Pagar com Asaas\n    </button>\n\t<span><p> </p></span>\n    </>\n    )}\n    \n    \n</SuccessContent>\n    </React.Fragment>\n  );\n}\n\nexport default CheckoutSuccess;","import CheckoutSuccess from './CheckoutSuccess';\nexport default CheckoutSuccess;\n","export default {\n  formId: 'checkoutForm',\n  formField: {\n    firstName: {\n      name: 'firstName',\n      label: 'Nome completo*',\n      requiredErrorMsg: 'O nome completo é obrigatório'\n    },\n    lastName: {\n      name: 'lastName',\n      label: 'Last name*',\n      requiredErrorMsg: 'Last name is required'\n    },\n    address1: {\n      name: 'address2',\n      label: 'Endereço*',\n      requiredErrorMsg: 'O Endereço é obrigatório'\n    },\n\n    city: {\n      name: 'city',\n      label: 'Cidade*',\n      requiredErrorMsg: 'Cidade é obrigatória'\n    },\n    state: {\n      name: 'state',\n      label: 'Estado*',\n      requiredErrorMsg: 'Cidade é obrigatória'\n    },\n    zipcode: {\n      name: 'zipcode',\n      label: 'CEP*',\n      requiredErrorMsg: 'CEP é obrigatório',\n      invalidErrorMsg: 'Formato de CEP inválido'\n    },\n    country: {\n      name: 'country',\n      label: 'País*',\n      requiredErrorMsg: 'País é obrigatório'\n    },\n    useAddressForPaymentDetails: {\n      name: 'useAddressForPaymentDetails',\n      label: 'Use this address for payment details'\n    },\n    invoiceId: {\n      name: 'invoiceId',\n      label: 'Use this invoiceId'\n    },\n    nameOnCard: {\n      name: 'nameOnCard',\n      label: 'Name on card*',\n      requiredErrorMsg: 'Name on card is required'\n    },\n    cardNumber: {\n      name: 'cardNumber',\n      label: 'Card number*',\n      requiredErrorMsg: 'Card number is required',\n      invalidErrorMsg: 'Card number is not valid (e.g. 4111111111111)'\n    },\n    expiryDate: {\n      name: 'expiryDate',\n      label: 'Expiry date*',\n      requiredErrorMsg: 'Expiry date is required',\n      invalidErrorMsg: 'Expiry date is not valid'\n    },\n    cvv: {\n      name: 'cvv',\n      label: 'CVV*',\n      requiredErrorMsg: 'CVV is required',\n      invalidErrorMsg: 'CVV is invalid (e.g. 357)'\n    }\n  }\n};\n","import * as Yup from 'yup';\nimport checkoutFormModel from './checkoutFormModel';\nconst {\n  formField: {\n    firstName,\n    address1,\n    city,\n    zipcode,\n    country,\n  }\n} = checkoutFormModel;\n\n\nexport default [\n  Yup.object().shape({\n    [firstName.name]: Yup.string().required(`${firstName.requiredErrorMsg}`),\n    [address1.name]: Yup.string().required(`${address1.requiredErrorMsg}`),\n    [city.name]: Yup.string()\n      .nullable()\n      .required(`${city.requiredErrorMsg}`),\n    [zipcode.name]: Yup.string()\n      .required(`${zipcode.requiredErrorMsg}`),\n\n    [country.name]: Yup.string()\n      .nullable()\n      .required(`${country.requiredErrorMsg}`)\n  }),\n\n];\n","import checkoutFormModel from './checkoutFormModel';\nconst {\n  formField: {\n    firstName,\n    lastName,\n    address1,\n    city,\n    state,\n    zipcode,\n    country,\n    useAddressForPaymentDetails,\n    nameOnCard,\n    cardNumber,\n    invoiceId,\n    cvv\n  }\n} = checkoutFormModel;\n\nexport default {\n  [firstName.name]: '',\n  [lastName.name]: '',\n  [address1.name]: '',\n  [city.name]: '',\n  [state.name]: '',\n  [zipcode.name]: '',\n  [country.name]: '',\n  [useAddressForPaymentDetails.name]: false,\n  [nameOnCard.name]: '',\n  [cardNumber.name]: '',\n  [invoiceId.name]: '',\n  [cvv.name]: ''\n};\n","import { makeStyles } from '@material-ui/core/styles';\nexport default makeStyles(theme => ({\n  stepper: {\n    padding: theme.spacing(3, 0, 5)\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end'\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1)\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative'\n  },\n  buttonProgress: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%'\n  }\n}));\n","import CheckoutPage from './CheckoutPage';\nexport default CheckoutPage;\n","import React, { useContext, useState } from \"react\";\nimport {\n  Stepper,\n  Step,\n  StepLabel,\n  Button,\n  Typography,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { Formik, Form } from \"formik\";\n\nimport AddressForm from \"./Forms/AddressForm\";\nimport PaymentForm from \"./Forms/PaymentForm\";\nimport ReviewOrder from \"./ReviewOrder\";\nimport CheckoutSuccess from \"./CheckoutSuccess\";\n\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\nimport { toast } from \"react-toastify\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\n\n\nimport validationSchema from \"./FormModel/validationSchema\";\nimport checkoutFormModel from \"./FormModel/checkoutFormModel\";\nimport formInitialValues from \"./FormModel/formInitialValues\";\n\nimport useStyles from \"./styles\";\n\n\nexport default function CheckoutPage(props) {\n  const steps = [\"Dados\", \"Personalizar\", \"Revisar\"];\n  const { formId, formField } = checkoutFormModel;\n  \n  \n  \n  const classes = useStyles();\n  const [activeStep, setActiveStep] = useState(1);\n  const [datePayment, setDatePayment] = useState(null);\n  const [invoiceId, ] = useState(props.Invoice.id);\n  const currentValidationSchema = validationSchema[activeStep];\n  const isLastStep = activeStep === steps.length - 1;\n  const { user } = useContext(AuthContext);\n\nfunction _renderStepContent(step, setFieldValue, setActiveStep, values ) {\n\n  switch (step) {\n    case 0:\n      return <AddressForm formField={formField} values={values} setFieldValue={setFieldValue}  />;\n    case 1:\n      return <PaymentForm \n      formField={formField} \n      setFieldValue={setFieldValue} \n      setActiveStep={setActiveStep} \n      activeStep={step} \n      invoiceId={invoiceId}\n      values={values}\n      />;\n    case 2:\n      return <ReviewOrder />;\n    default:\n      return <div>Not Found</div>;\n  }\n}\n\n\n  async function _submitForm(values, actions) {\n    try {\n      const plan = JSON.parse(values.plan);\n      const newValues = {\n        firstName: values.firstName,\n        lastName: values.lastName,\n        address2: values.address2,\n        city: values.city,\n        state: values.state,\n        zipcode: values.zipcode,\n        country: values.country,\n        useAddressForPaymentDetails: values.useAddressForPaymentDetails,\n        nameOnCard: values.nameOnCard,\n        cardNumber: values.cardNumber,\n        cvv: values.cvv,\n        plan: values.plan,\n        price: plan.price,\n        users: plan.users,\n        connections: plan.connections,\n        invoiceId: invoiceId\n      }\n\n      const { data } = await api.post(\"/subscription\", newValues);\n      setDatePayment(data)\n      actions.setSubmitting(true);\n      setActiveStep(activeStep + 1);\n      toast.success(\"Assinatura realizada com sucesso!, aguardando a realização do pagamento\");\n    } catch (err) {\n      actions.setSubmitting(false);\n     \n      toastError(err);\n    }\n  }\n\n  function _handleSubmit(values, actions) {\n    if (isLastStep) {\n      _submitForm(values, actions);\n    } else {\n      setActiveStep(activeStep + 1);\n      actions.setTouched({});\n      actions.setSubmitting(false);\n    }\n  }\n\n  function _handleBack() {\n    setActiveStep(activeStep - 1);\n  }\n\n  return (\n    <React.Fragment>\n      <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n        Falta pouco!\n      </Typography>\n      <Stepper activeStep={activeStep} className={classes.stepper}>\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      <React.Fragment>\n        {activeStep === steps.length ? (\n          <CheckoutSuccess pix={datePayment} />\n        ) : (\n          <Formik\n            initialValues={{\n              ...user, \n              ...formInitialValues\n            }}\n            validationSchema={currentValidationSchema}\n            onSubmit={_handleSubmit}\n          >\n            {({ isSubmitting, setFieldValue, values }) => (\n              <Form id={formId}>\n                {_renderStepContent(activeStep, setFieldValue, setActiveStep, values)}\n\n                <div className={classes.buttons}>\n                  {activeStep !== 1 && (\n                    <Button onClick={_handleBack} className={classes.button}>\n                      VOLTAR\n                    </Button>\n                  )}\n                  <div className={classes.wrapper}>\n                    {activeStep !== 1 && (\n                      <Button\n                        disabled={isSubmitting}\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                      >\n                        {isLastStep ? \"PAGAR\" : \"PRÓXIMO\"}\n                      </Button>\n                    )}\n                    {isSubmitting && (\n                      <CircularProgress\n                        size={24}\n                        className={classes.buttonProgress}\n                      />\n                    )}\n                  </div>\n                </div>\n              </Form>\n            )}\n          </Formik>\n        )}\n      </React.Fragment>\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useRef } from \"react\";\n\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport CheckoutPage from \"../CheckoutPage/\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  textField: {\n    marginRight: theme.spacing(1),\n    flex: 1,\n  },\n\n  extraAttr: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n\n  btnWrapper: {\n    position: \"relative\",\n  },\n\n  buttonProgress: {\n    color: green[500],\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n\n\nconst ContactModal = ({ open, onClose, Invoice, contactId, initialValues, onSave }) => {\n  const classes = useStyles();\n  const isMounted = useRef(true);\n\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  return (\n    <div className={classes.root}>\n      <Dialog open={open} onClose={handleClose} maxWidth=\"md\" scroll=\"paper\">\n        <DialogContent dividers>\n          <CheckoutPage\n            Invoice={Invoice}\n          />\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default ContactModal;\n","import React, { useState, useEffect, useReducer, useContext } from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { toast } from \"react-toastify\";\n\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport MainContainer from \"../../components/MainContainer\";\nimport MainHeader from \"../../components/MainHeader\";\nimport Title from \"../../components/Title\";\nimport SubscriptionModal from \"../../components/SubscriptionModal\";\nimport api from \"../../services/api\";\nimport TableRowSkeleton from \"../../components/TableRowSkeleton\";\n\nimport toastError from \"../../errors/toastError\";\n\nimport moment from \"moment\";\n\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_INVOICES\") {\n    const invoices = action.payload;\n    const newUsers = [];\n\n    invoices.forEach((user) => {\n      const userIndex = state.findIndex((u) => u.id === user.id);\n      if (userIndex !== -1) {\n        state[userIndex] = user;\n      } else {\n        newUsers.push(user);\n      }\n    });\n\n    return [...state, ...newUsers];\n  }\n\n  if (action.type === \"UPDATE_USERS\") {\n    const user = action.payload;\n    const userIndex = state.findIndex((u) => u.id === user.id);\n\n    if (userIndex !== -1) {\n      state[userIndex] = user;\n      return [...state];\n    } else {\n      return [user, ...state];\n    }\n  }\n\n  if (action.type === \"DELETE_USER\") {\n    const userId = action.payload;\n\n    const userIndex = state.findIndex((u) => u.id === userId);\n    if (userIndex !== -1) {\n      state.splice(userIndex, 1);\n    }\n    return [...state];\n  }\n\n  if (action.type === \"RESET\") {\n    return [];\n  }\n};\n\nconst useStyles = makeStyles((theme) => ({\n  mainPaper: {\n    flex: 1,\n    padding: theme.spacing(1),\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n}));\n\nconst Invoices = () => {\n  const classes = useStyles();\n\n  const history = useHistory();\n  const { user } = useContext(AuthContext);\n\n  const [loading, setLoading] = useState(false);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [hasMore, setHasMore] = useState(false);\n  const [searchParam, ] = useState(\"\");\n  const [invoices, dispatch] = useReducer(reducer, []);\n  const [storagePlans, setStoragePlans] = React.useState([]);\n  const [selectedContactId, setSelectedContactId] = useState(null);\n  const [contactModalOpen, setContactModalOpen] = useState(false);\n\n\n   // trava para nao acessar pagina que não pode  \n   useEffect(() => {\n    async function fetchData() {\n      if (user.profile !== \"admin\") {\n        toast.error(\"Acesso não permitido\");\n        setTimeout(() => {\n          history.push(`/`)\n        }, 100);\n      }\n    }\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n\n  const handleOpenContactModal = (invoices) => {\n    setStoragePlans(invoices);\n    setSelectedContactId(null);\n    setContactModalOpen(true);\n  };\n\n\n  const handleCloseContactModal = () => {\n    setSelectedContactId(null);\n    setContactModalOpen(false);\n  };\n  useEffect(() => {\n    dispatch({ type: \"RESET\" });\n    setPageNumber(1);\n  }, [searchParam]);\n\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      const fetchInvoices = async () => {\n        try {\n          const { data } = await api.get(\"/invoices/all\", {\n            params: { searchParam, pageNumber },\n          });\n          dispatch({ type: \"LOAD_INVOICES\", payload: data });\n          setHasMore(data.hasMore);\n          setLoading(false);\n        } catch (err) {\n          toastError(err);\n        }\n      };\n      fetchInvoices();\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n  }, [searchParam, pageNumber]);\n\n\n  const loadMore = () => {\n    setPageNumber((prevState) => prevState + 1);\n  };\n\n  const handleScroll = (e) => {\n    if (!hasMore || loading) return;\n    const { scrollTop, scrollHeight, clientHeight } = e.currentTarget;\n    if (scrollHeight - (scrollTop + 100) < clientHeight) {\n      loadMore();\n    }\n  };\n  const rowStyle = (record) => {\n    const hoje = moment(moment()).format(\"DD/MM/yyyy\");\n    const vencimento = moment(record.dueDate).format(\"DD/MM/yyyy\");\n    var diff = moment(vencimento, \"DD/MM/yyyy\").diff(moment(hoje, \"DD/MM/yyyy\"));\n    var dias = moment.duration(diff).asDays();    \n    if (dias < 0 && record.status !== \"paid\") {\n      return { backgroundColor: \"#ffbcbc9c\" };\n    }\n  };\n\n  const rowStatus = (record) => {\n    const hoje = moment(moment()).format(\"DD/MM/yyyy\");\n    const vencimento = moment(record.dueDate).format(\"DD/MM/yyyy\");\n    var diff = moment(vencimento, \"DD/MM/yyyy\").diff(moment(hoje, \"DD/MM/yyyy\"));\n    var dias = moment.duration(diff).asDays();    \n    const status = record.status;\n    if (status === \"paid\") {\n      return \"Pago\";\n    }\n    if (dias < 0) {\n      return \"Vencido\";\n    } else {\n      return \"Em Aberto\"\n    }\n\n  }\n\n  return (\n    <MainContainer>\n      <SubscriptionModal\n        open={contactModalOpen}\n        onClose={handleCloseContactModal}\n        aria-labelledby=\"form-dialog-title\"\n        Invoice={storagePlans}\n        contactId={selectedContactId}\n\n      ></SubscriptionModal>\n      <MainHeader>\n        <Title>Faturas</Title>\n      </MainHeader>\n      <Paper\n        className={classes.mainPaper}\n        variant=\"outlined\"\n        onScroll={handleScroll}\n      >\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">Id</TableCell>\n              <TableCell align=\"center\">Detalhes</TableCell>\n              <TableCell align=\"center\">Valor</TableCell>\n              <TableCell align=\"center\">Data Venc.</TableCell>\n              <TableCell align=\"center\">Status</TableCell>\n              <TableCell align=\"center\">Ação</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <>\n              {invoices.map((invoices) => (\n                <TableRow style={rowStyle(invoices)} key={invoices.id}>\n                  <TableCell align=\"center\">{invoices.id}</TableCell>\n                  <TableCell align=\"center\">{invoices.detail}</TableCell>\n                  <TableCell style={{ fontWeight: 'bold' }} align=\"center\">{invoices.value.toLocaleString('pt-br', { style: 'currency', currency: 'BRL' })}</TableCell>\n                  <TableCell align=\"center\">{moment(invoices.dueDate).format(\"DD/MM/YYYY\")}</TableCell>\n                  <TableCell style={{ fontWeight: 'bold' }} align=\"center\">{rowStatus(invoices)}</TableCell>\n                  <TableCell align=\"center\">\n                    {rowStatus(invoices) !== \"Pago\" ?\n                      <Button\n                        size=\"small\"\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        onClick={() => handleOpenContactModal(invoices)}\n                      >\n                        PAGAR\n                      </Button> :\n                      <Button\n                        size=\"small\"\n                        variant=\"outlined\" \n                        /* color=\"secondary\"\n                        disabled */\n                      >\n                        PAGO \n                      </Button>}\n\n                  </TableCell>\n                </TableRow>\n              ))}\n              {loading && <TableRowSkeleton columns={4} />}\n            </>\n          </TableBody>\n        </Table>\n      </Paper>\n    </MainContainer>\n  );\n};\n\nexport default Invoices;\n","import React, { useState, useEffect, useReducer, useContext } from \"react\";\n\n\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { toast } from \"react-toastify\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nimport MainContainer from \"../../components/MainContainer\";\nimport MainHeader from \"../../components/MainHeader\";\nimport MainHeaderButtonsWrapper from \"../../components/MainHeaderButtonsWrapper\";\nimport Title from \"../../components/Title\";\n\nimport api from \"../../services/api\";\nimport { i18n } from \"../../translate/i18n\";\nimport TableRowSkeleton from \"../../components/TableRowSkeleton\";\nimport UserModal from \"../../components/UserModal\";\nimport ConfirmationModal from \"../../components/ConfirmationModal\";\nimport toastError from \"../../errors/toastError\";\nimport { socketConnection } from \"../../services/socket\";\n\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_USERS\") {\n    const users = action.payload;\n    const newUsers = [];\n\n    users.forEach((user) => {\n      const userIndex = state.findIndex((u) => u.id === user.id);\n      if (userIndex !== -1) {\n        state[userIndex] = user;\n      } else {\n        newUsers.push(user);\n      }\n    });\n\n    return [...state, ...newUsers];\n  }\n\n  if (action.type === \"UPDATE_USERS\") {\n    const user = action.payload;\n    const userIndex = state.findIndex((u) => u.id === user.id);\n\n    if (userIndex !== -1) {\n      state[userIndex] = user;\n      return [...state];\n    } else {\n      return [user, ...state];\n    }\n  }\n\n  if (action.type === \"DELETE_USER\") {\n    const userId = action.payload;\n\n    const userIndex = state.findIndex((u) => u.id === userId);\n    if (userIndex !== -1) {\n      state.splice(userIndex, 1);\n    }\n    return [...state];\n  }\n\n  if (action.type === \"RESET\") {\n    return [];\n  }\n};\n\nconst useStyles = makeStyles((theme) => ({\n  mainPaper: {\n    flex: 1,\n    padding: theme.spacing(1),\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n}));\n\nconst Users = () => {\n  const classes = useStyles();\n\n  const history = useHistory();\n  const { user } = useContext(AuthContext);\n\n  const [loading, setLoading] = useState(false);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [hasMore, setHasMore] = useState(false);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [deletingUser, setDeletingUser] = useState(null);\n  const [userModalOpen, setUserModalOpen] = useState(false);\n  const [confirmModalOpen, setConfirmModalOpen] = useState(false);\n  const [searchParam, setSearchParam] = useState(\"\");\n  const [users, dispatch] = useReducer(reducer, []);\n\n\n  // trava para nao acessar pagina que não pode  \n  useEffect(() => {\n    async function fetchData() {\n      if (user.profile !== \"admin\") {\n        toast.error(\"Acesso não permitido\");\n        setTimeout(() => {\n          history.push(`/`)\n        }, 100);\n      }\n    }\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    dispatch({ type: \"RESET\" });\n    setPageNumber(1);\n  }, [searchParam]);\n\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      const fetchUsers = async () => {\n        try {\n          const { data } = await api.get(\"/users/\", {\n            params: { searchParam, pageNumber },\n          });\n          dispatch({ type: \"LOAD_USERS\", payload: data.users });\n          setHasMore(data.hasMore);\n          setLoading(false);\n        } catch (err) {\n          toastError(err);\n        }\n      };\n      fetchUsers();\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n  }, [searchParam, pageNumber]);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketConnection({ companyId });\n\n    socket.on(`company-${companyId}-user`, (data) => {\n      if (data.action === \"update\" || data.action === \"create\") {\n        dispatch({ type: \"UPDATE_USERS\", payload: data.user });\n      }\n\n      if (data.action === \"delete\") {\n        dispatch({ type: \"DELETE_USER\", payload: +data.userId });\n      }\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  const handleOpenUserModal = () => {\n    setSelectedUser(null);\n    setUserModalOpen(true);\n  };\n\n  const handleCloseUserModal = () => {\n    setSelectedUser(null);\n    setUserModalOpen(false);\n  };\n\n  const handleSearch = (event) => {\n    setSearchParam(event.target.value.toLowerCase());\n  };\n\n  const handleEditUser = (user) => {\n    setSelectedUser(user);\n    setUserModalOpen(true);\n  };\n\n  const handleDeleteUser = async (userId) => {\n    try {\n      await api.delete(`/users/${userId}`);\n      toast.success(i18n.t(\"users.toasts.deleted\"));\n    } catch (err) {\n      toastError(err);\n    }\n    setDeletingUser(null);\n    setSearchParam(\"\");\n    setPageNumber(1);\n  };\n\n  const loadMore = () => {\n    setPageNumber((prevState) => prevState + 1);\n  };\n\n  const handleScroll = (e) => {\n    if (!hasMore || loading) return;\n    const { scrollTop, scrollHeight, clientHeight } = e.currentTarget;\n    if (scrollHeight - (scrollTop + 100) < clientHeight) {\n      loadMore();\n    }\n  };\n\n  return (\n    <MainContainer>\n      <ConfirmationModal\n        title={\n          deletingUser &&\n          `${i18n.t(\"users.confirmationModal.deleteTitle\")} ${deletingUser.name\n          }?`\n        }\n        open={confirmModalOpen}\n        onClose={setConfirmModalOpen}\n        onConfirm={() => handleDeleteUser(deletingUser.id)}\n      >\n        {i18n.t(\"users.confirmationModal.deleteMessage\")}\n      </ConfirmationModal>\n      <UserModal\n        open={userModalOpen}\n        onClose={handleCloseUserModal}\n        aria-labelledby=\"form-dialog-title\"\n        userId={selectedUser && selectedUser.id}\n      />\n      <MainHeader>\n        <Title>{i18n.t(\"users.title\")}</Title>\n        <MainHeaderButtonsWrapper>\n          <TextField\n            placeholder={i18n.t(\"contacts.searchPlaceholder\")}\n            type=\"search\"\n            value={searchParam}\n            onChange={handleSearch}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon style={{ color: \"gray\" }} />\n                </InputAdornment>\n              ),\n            }}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleOpenUserModal}\n          >\n            {i18n.t(\"users.buttons.add\")}\n          </Button>\n        </MainHeaderButtonsWrapper>\n      </MainHeader>\n      <Paper\n        className={classes.mainPaper}\n        variant=\"outlined\"\n        onScroll={handleScroll}\n      >\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">{'Id'}</TableCell>\n              <TableCell align=\"center\">{i18n.t(\"users.table.name\")}</TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"users.table.email\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"users.table.profile\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"users.table.actions\")}\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <>\n              {users.map((user) => (\n                <TableRow key={user.id}>\n                  <TableCell align=\"center\">{user.id}</TableCell>\n                  <TableCell align=\"center\">{user.name}</TableCell>\n                  <TableCell align=\"center\">{user.email}</TableCell>\n                  <TableCell align=\"center\">{user.profile}</TableCell>\n                  <TableCell align=\"center\">\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => handleEditUser(user)}\n                    >\n                      <EditIcon />\n                    </IconButton>\n\n                    <IconButton\n                      size=\"small\"\n                      onClick={(e) => {\n                        setConfirmModalOpen(true);\n                        setDeletingUser(user);\n                      }}\n                    >\n                      <DeleteOutlineIcon />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n              {loading && <TableRowSkeleton columns={4} />}\n            </>\n          </TableBody>\n        </Table>\n      </Paper>\n    </MainContainer>\n  );\n};\n\nexport default Users;\n","import React, {\n    useState,\n    useEffect,\n    useReducer,\n    useContext,\n    useRef,\n} from \"react\";\n\nimport { socketConnection } from \"../../services/socket\";\nimport { toast } from \"react-toastify\";\nimport { useHistory } from \"react-router-dom\";\nimport { CSVLink } from \"react-csv\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport WhatsAppIcon from \"@material-ui/icons/WhatsApp\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Archive from \"@material-ui/icons/Archive\"\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport BlockIcon from \"@material-ui/icons/Block\";\n\nimport api from \"../../services/api\";\nimport TableRowSkeleton from \"../../components/TableRowSkeleton\";\nimport ContactModal from \"../../components/ContactModal\";\nimport ConfirmationModal from \"../../components/ConfirmationModal/\";\n\nimport { i18n } from \"../../translate/i18n\";\nimport MainHeader from \"../../components/MainHeader\";\nimport Title from \"../../components/Title\";\nimport MainHeaderButtonsWrapper from \"../../components/MainHeaderButtonsWrapper\";\nimport MainContainer from \"../../components/MainContainer\";\nimport toastError from \"../../errors/toastError\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { Can } from \"../../components/Can\";\nimport NewTicketModal from \"../../components/NewTicketModal\";\nimport PopupState, { bindTrigger, bindMenu } from \"material-ui-popup-state\";\nimport * as XLSX from \"xlsx\";\n\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\n\nimport {\n    ArrowDropDown,\n    Backup,\n    CloudDownload,\n    ContactPhone,\n} from \"@material-ui/icons\";\nimport { Divider, Menu, MenuItem } from \"@material-ui/core\";\n\nconst reducer = (state, action) => {\n    if (action.type === \"LOAD_CONTACTS\") {\n        const contacts = action.payload;\n        const newContacts = [];\n\n        contacts.forEach((contact) => {\n            const contactIndex = state.findIndex((c) => c.id === contact.id);\n            if (contactIndex !== -1) {\n                state[contactIndex] = contact;\n            } else {\n                newContacts.push(contact);\n            }\n        });\n\n        return [...state, ...newContacts];\n    }\n\n    if (action.type === \"UPDATE_CONTACTS\") {\n        const contact = action.payload;\n        const contactIndex = state.findIndex((c) => c.id === contact.id);\n\n        if (contactIndex !== -1) {\n            state[contactIndex] = contact;\n            return [...state];\n        } else {\n            return [contact, ...state];\n        }\n    }\n\n    if (action.type === \"DELETE_CONTACT\") {\n        const contactId = action.payload;\n\n        const contactIndex = state.findIndex((c) => c.id === contactId);\n        if (contactIndex !== -1) {\n            state.splice(contactIndex, 1);\n        }\n        return [...state];\n    }\n\n    if (action.type === \"RESET\") {\n        return [];\n    }\n};\n\nconst useStyles = makeStyles((theme) => ({\n    mainPaper: {\n        flex: 1,\n        padding: theme.spacing(1),\n        overflowY: \"scroll\",\n        ...theme.scrollbarStyles,\n    },\n}));\n\nconst Contacts = () => {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const { user } = useContext(AuthContext);\n\n    const [loading, setLoading] = useState(false);\n    const [pageNumber, setPageNumber] = useState(1);\n    const [searchParam, setSearchParam] = useState(\"\");\n    const [contacts, dispatch] = useReducer(reducer, []);\n    const [selectedContactId, setSelectedContactId] = useState(null);\n    const [contactModalOpen, setContactModalOpen] = useState(false);\n    const [deletingContact, setDeletingContact] = useState(null);\n    const [ImportContacts, setImportContacts] = useState(null);\n    const [blockingContact, setBlockingContact] = useState(null);\n    const [unBlockingContact, setUnBlockingContact] = useState(null);\n    const [confirmOpen, setConfirmOpen] = useState(false);\n    const [confirmChatsOpen, setConfirmChatsOpen] = useState(false);\n    const [hasMore, setHasMore] = useState(false);\n    const [newTicketModalOpen, setNewTicketModalOpen] = useState(false);\n    const [contactTicket, setContactTicket] = useState({});\n    const fileUploadRef = useRef(null);\n\n    const [listContactsToExport, setListContactsToExport] = useState([]);\n\n\n    const handleImportExcel = async () => {\n        try {\n            const formData = new FormData();\n            formData.append(\"file\", fileUploadRef.current.files[0]);\n            await api.request({\n                url: `/contacts/upload`,\n                method: \"POST\",\n                data: formData,\n            });\n            history.go(0);\n        } catch (err) {\n            toastError(err);\n        }\n    };\n\n    const handleExportExcel = async () => {\n        try {\n            const { data } = await api.post(\"/contacts/export\", {});\n\n            const url = `${process.env.REACT_APP_BACKEND_URL}/public/${data}`;\n\n            window.open(url, \"_blank\");\n        } catch (err) {\n            toastError(err);\n        }\n    };\n\n    const teste = async () => {\n        return <CSVLink\n            className={classes.csvbtn}\n            separator=\";\"\n            filename={'contacts.csv'}\n            data={\n                contacts.map((contact) => ({\n                    name: contact.name,\n                    number: contact.number,\n                    email: contact.email\n                }))\n            }>\n            <Button\n                variant=\"contained\"\n                color=\"primary\">\n                <Archive />\n                &nbsp; {i18n.t(\"contacts.buttons.export\")}\n            </Button>\n        </CSVLink>\n    }\n\n    useEffect(() => {\n        dispatch({ type: \"RESET\" });\n        setPageNumber(1);\n    }, [searchParam]);\n\n    useEffect(() => {\n        setLoading(true);\n        const delayDebounceFn = setTimeout(() => {\n            const fetchContacts = async () => {\n                try {\n                    const { data } = await api.get(\"/contacts/\", {\n                        params: { searchParam, pageNumber },\n                    });\n                    dispatch({ type: \"LOAD_CONTACTS\", payload: data.contacts });\n                    setHasMore(data.hasMore);\n                    setLoading(false);\n                } catch (err) {\n                    toastError(err);\n                }\n            };\n            fetchContacts();\n        }, 500);\n        return () => clearTimeout(delayDebounceFn);\n    }, [searchParam, pageNumber]);\n\n    useEffect(() => {\n        const companyId = localStorage.getItem(\"companyId\");\n        const socket = socketConnection({ companyId });\n\n        socket.on(`company-${companyId}-contact`, (data) => {\n            if (data.action === \"update\" || data.action === \"create\") {\n                dispatch({ type: \"UPDATE_CONTACTS\", payload: data.contact });\n            }\n\n            if (data.action === \"delete\") {\n                dispatch({ type: \"DELETE_CONTACT\", payload: +data.contactId });\n            }\n        });\n\n        return () => {\n            socket.disconnect();\n        };\n    }, []);\n\n    useEffect(() => {\n        handleGetContactsToExport();\n    }, []);\n\n    const handleCloseOrOpenTicket = (ticket) => {\n        setNewTicketModalOpen(false);\n        if (ticket !== undefined && ticket.uuid !== undefined) {\n            history.push(`/tickets/${ticket.uuid}`);\n        }\n    };\n\n    const handleSearch = (event) => {\n        setSearchParam(event.target.value.toLowerCase());\n    };\n\n    const handleOpenContactModal = () => {\n        setSelectedContactId(null);\n        setContactModalOpen(true);\n    };\n\n    const handleCloseContactModal = () => {\n        setSelectedContactId(null);\n        setContactModalOpen(false);\n    };\n\n    const handleSaveTicket = async (contactId) => {\n        if (!contactId) return;\n        setLoading(true);\n        try {\n            const { data: ticket } = await api.post(\"/tickets\", {\n                contactId: contactId,\n                userId: user?.id,\n                status: \"open\",\n            });\n            history.push(`/tickets/${ticket.uuid}`);\n        } catch (err) {\n            toastError(err);\n        }\n        setLoading(false);\n    };\n\n    const hadleEditContact = (contactId) => {\n        setSelectedContactId(contactId);\n        setContactModalOpen(true);\n    };\n\n    const handleDeleteContact = async (contactId) => {\n        try {\n            await api.delete(`/contacts/${contactId}`);\n            toast.success(i18n.t(\"contacts.toasts.deleted\"));\n        } catch (err) {\n            toastError(err);\n        }\n        setDeletingContact(null);\n        setSearchParam(\"\");\n        setPageNumber(1);\n    };\n\n    const handleBlockContact = async (contactId) => {\n        try {\n            await api.put(`/contacts/block/${contactId}`, { active: false });\n            toast.success(\"Contato bloqueado\");\n        } catch (err) {\n            toastError(err);\n        }\n        setDeletingContact(null);\n        setSearchParam(\"\");\n        setPageNumber(1);\n    };\n\n    const handleUnBlockContact = async (contactId) => {\n        try {\n            await api.put(`/contacts/block/${contactId}`, { active: true });\n            toast.success(\"Contato desbloqueado\");\n        } catch (err) {\n            toastError(err);\n        }\n        setDeletingContact(null);\n        setSearchParam(\"\");\n        setPageNumber(1);\n    };\n\n    const handleimportContact = async () => {\n        try {\n            await api.post(\"/contacts/import\");\n            history.go(0);\n            setImportContacts(false);\n        } catch (err) {\n            toastError(err);\n            setImportContacts(false);\n        }\n    };\n\n    const handleimportChats = async () => {\n        try {\n            await api.post(\"/contacts/import/chats\");\n            history.go(0);\n        } catch (err) {\n            toastError(err);\n        }\n    };\n\n    const loadMore = () => {\n        setPageNumber((prevState) => prevState + 1);\n    };\n\n    const handleScroll = (e) => {\n        if (!hasMore || loading) return;\n        const { scrollTop, scrollHeight, clientHeight } = e.currentTarget;\n        if (scrollHeight - (scrollTop + 100) < clientHeight) {\n            loadMore();\n        }\n    };\n\n    function getDateLastMessage(contact) {\n        if (!contact) return null;\n        if (!contact.tickets) return null;\n\n        if (contact.tickets.length > 0) {\n            const date = new Date(\n                contact.tickets[contact.tickets.length - 1].updatedAt\n            );\n\n            const day =\n                date.getDate() > 9 ? date.getDate() : `0${date.getDate()}`;\n            const month = date.getMonth() + 1;\n            const year = date.getFullYear();\n\n            const hours = date.getHours();\n            const minutes = date.getMinutes();\n\n            return `${day}/${month}/${year} ${hours}:${minutes}`;\n        }\n\n        return null;\n    }\n\n    const handleGetContactsToExport = async () => {\n\n        try {\n            const { data } = await api.get('/contacts/list');\n            setListContactsToExport(data);\n\n        } catch (error) {\n            console.log('erro ao buscar contatos para exportação', error);\n        }\n\n    };\n\n    const handleDownloadModelToExport = (closeAction) => {\n        const allDatas = [];\n\n        allDatas.push({\n            name: \"Contato 1\",\n            number: \"5511999999999\",\n            email: \"email@email.com\",\n        });\n\n        allDatas.push({\n            name: \"Contato 2\",\n            number: \"5511999999999\",\n            email: \"email@email.com\",\n        });\n\n        const exportData = allDatas.map((e) => {\n            return { name: e.name, number: e.number, email: e.email };\n        });\n\n        let wb = XLSX.utils.book_new();\n        let ws = XLSX.utils.json_to_sheet(exportData);\n        XLSX.utils.book_append_sheet(wb, ws, \"Contatos\");\n        XLSX.writeFile(wb, \"exemplo_upload.xlsx\");\n\n    }\n\n\n\n    return (\n        <MainContainer className={classes.mainContainer}>\n            <NewTicketModal\n                modalOpen={newTicketModalOpen}\n                initialContact={contactTicket}\n                onClose={(ticket) => {\n                    handleCloseOrOpenTicket(ticket);\n                }}\n            />\n            <ContactModal\n                open={contactModalOpen}\n                onClose={handleCloseContactModal}\n                aria-labelledby=\"form-dialog-title\"\n                contactId={selectedContactId}\n            ></ContactModal>\n            <ConfirmationModal\n                title={\n                    deletingContact\n                        ? `${i18n.t(\n                            \"contacts.confirmationModal.deleteTitle\"\n                        )} ${deletingContact.name}?`\n                        : blockingContact\n                            ? `Bloquear Contato ${blockingContact.name}?`\n                            : unBlockingContact\n                                ? `Desbloquear Contato ${unBlockingContact.name}?`\n                                : ImportContacts\n                                    ? `${i18n.t(\"contacts.confirmationModal.importTitlte\")}`\n                                    : `${i18n.t(\n                                        \"contactListItems.confirmationModal.importTitlte\"\n                                    )}`\n                }\n                open={confirmOpen}\n                onClose={setConfirmOpen}\n                onConfirm={(e) =>\n                    deletingContact\n                        ? handleDeleteContact(deletingContact.id)\n                        : blockingContact\n                            ? handleBlockContact(blockingContact.id)\n                            : unBlockingContact\n                                ? handleUnBlockContact(unBlockingContact.id)\n                                : ImportContacts\n                                    ? handleimportContact()\n                                    : handleImportExcel()\n                }\n            >\n                {deletingContact\n                    ? `${i18n.t(\"contacts.confirmationModal.deleteMessage\")}`\n                    : blockingContact\n                        ? `Tem certeza que deseja bloquear este contato?`\n                        : unBlockingContact\n                            ? `Tem certeza que deseja desbloquear este contato?`\n                            : ImportContacts\n                                ? `${i18n.t(\"contacts.confirmationModal.importMessage\")}`\n                                : `${i18n.t(\n                                    \"contactListItems.confirmationModal.importMessage\"\n                                )}`}\n            </ConfirmationModal>\n            <ConfirmationModal\n                title={\"Importar Conversas\"}\n                open={confirmChatsOpen}\n                onClose={setConfirmChatsOpen}\n                onConfirm={(e) => handleimportChats()}\n            >\n                Deseja importar todas as conversas do telefone?\n            </ConfirmationModal>\n            <MainHeader>\n                <Title>{i18n.t(\"contacts.title\")} ({contacts.length})</Title>\n                <MainHeaderButtonsWrapper>\n                    <TextField\n                        placeholder={i18n.t(\"contacts.searchPlaceholder\")}\n                        type=\"search\"\n                        value={searchParam}\n                        onChange={handleSearch}\n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <SearchIcon color=\"secondary\" />\n                                </InputAdornment>\n                            ),\n                        }}\n                    />\n                    <PopupState variant=\"popover\" popupId=\"demo-popup-menu\">\n                        {(popupState) => (\n                            <React.Fragment>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    {...bindTrigger(popupState)}\n                                >\n                                    Importar / Exportar\n                                    <ArrowDropDown />\n                                </Button>\n                                <Menu {...bindMenu(popupState)}>\n                                    <MenuItem\n                                        onClick={() => {\n                                            setConfirmOpen(true);\n                                            setImportContacts(true);\n                                            popupState.close();\n                                        }}\n                                    >\n                                        <ContactPhone\n                                            fontSize=\"small\"\n                                            color=\"primary\"\n                                            style={{\n                                                marginRight: 10,\n                                            }}\n                                        />\n                                        Importar Agenda\n                                    </MenuItem>\n                                    <MenuItem\n                                        onClick={() => {\n                                            fileUploadRef.current.value = null;\n                                            fileUploadRef.current.click();\n                                        }}\n                                    >\n                                        <Backup\n                                            fontSize=\"small\"\n                                            color=\"primary\"\n                                            style={{\n                                                marginRight: 10,\n                                            }}\n                                        />\n                                        Importar Excel\n                                    </MenuItem>\n\n                                    <Divider variant=\"middle\" />\n\n                                    <CSVLink style={{ textDecoration: 'none', color: 'inherit' }} separator=\";\" filename={'contatos.csv'} data={listContactsToExport.map((contact) => ({ name: contact.name, number: contact.number, email: contact.email }))}>\n                                        <MenuItem onClick={() => {\n                                            popupState.close();\n                                        }}><CloudDownloadIcon fontSize=\"small\" color=\"primary\" style={{ marginRight: 10, }} />Exportar CSV</MenuItem>\n                                    </CSVLink>\n\n                                    <MenuItem onClick={() => {\n                                        handleDownloadModelToExport();\n                                        popupState.close();\n                                    }}><CloudDownloadIcon fontSize=\"small\" color=\"primary\" style={{ marginRight: 10, }} />Modelo Importação</MenuItem>\n\n                                    {/* <MenuItem\n                                        onClick={() => {\n                                            <>\n                                                <CSVLink\n                                                    className={classes.csvbtn}\n                                                    separator=\";\"\n                                                    filename={'contacts.xlsx'}\n                                                    data={\n                                                        contacts.map((contact) => ({\n                                                            name: contact.name,\n                                                            number: contact.number,\n                                                            email: contact.email\n                                                        }))\n                                                    }>\n                                                    <Button\n                                                        variant=\"contained\"\n                                                        color=\"primary\">\n                                                        <Archive />\n                                                        &nbsp; {i18n.t(\"contacts.buttons.export\")}\n                                                    </Button>\n                                                </CSVLink>\n                                            </>\n\n                                            // handleExportExcel();\n                                            // popupState.close();\n                                        }}\n                                    >\n                                        <CloudDownload\n                                            fontSize=\"small\"\n                                            color=\"primary\"\n                                            style={{\n                                                marginRight: 10,\n                                            }}\n                                        />\n                                        Exportar Excel\n                                    </MenuItem> */}\n                                </Menu>\n\n                            </React.Fragment>\n                        )}\n                    </PopupState>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={handleOpenContactModal}\n                    >\n                        {i18n.t(\"contacts.buttons.add\")}\n                    </Button>\n                </MainHeaderButtonsWrapper>\n            </MainHeader>\n            <Paper\n                className={classes.mainPaper}\n                variant=\"outlined\"\n                onScroll={handleScroll}\n            >\n                <>\n                    <input\n                        style={{ display: \"none\" }}\n                        id=\"upload\"\n                        name=\"file\"\n                        type=\"file\"\n                        accept=\".xls,.xlsx\"\n                        onChange={() => {\n                            setConfirmOpen(true);\n                        }}\n                        ref={fileUploadRef}\n                    />\n                </>\n                <Table size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell padding=\"checkbox\" />\n                            <TableCell>\n                                {i18n.t(\"contacts.table.name\")}\n                            </TableCell>\n                            <TableCell align=\"center\">\n                                {i18n.t(\"contacts.table.whatsapp\")}\n                            </TableCell>\n                            <TableCell align=\"center\">\n                                {i18n.t(\"contacts.table.email\")}\n                            </TableCell>\n                            <TableCell align=\"center\">\n                                {\"Ultima mensagem\"}\n                            </TableCell>\n                            <TableCell align=\"center\">{\"Status\"}</TableCell>\n                            <TableCell align=\"center\">\n                                {i18n.t(\"contacts.table.actions\")}\n                            </TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        <>\n                            {contacts.map((contact) => (\n                                <TableRow key={contact.id}>\n                                    <TableCell style={{ paddingRight: 0 }}>\n                                        {<Avatar src={contact.profilePicUrl} />}\n                                    </TableCell>\n                                    <TableCell>{contact.name}</TableCell>\n                                    <TableCell align=\"center\">\n                                        {contact.number}\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        {contact.email}\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        {getDateLastMessage(contact)}\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        {contact.active ? (\n                                            <CheckCircleIcon\n                                                style={{ color: \"green\" }}\n                                                fontSize=\"small\"\n                                            />\n                                        ) : (\n                                            <CancelIcon\n                                                style={{ color: \"red\" }}\n                                                fontSize=\"small\"\n                                            />\n                                        )}\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        <IconButton\n                                            size=\"small\"\n                                            onClick={() => {\n                                                setContactTicket(contact);\n                                                setNewTicketModalOpen(true);\n                                                // handleSaveTicket(contact.id);\n                                            }}\n                                        >\n                                            <WhatsAppIcon color=\"secondary\" />\n                                        </IconButton>\n\n                                        <IconButton\n                                            size=\"small\"\n                                            onClick={() =>\n                                                hadleEditContact(contact.id)\n                                            }\n                                        >\n                                            <EditIcon color=\"secondary\" />\n                                        </IconButton>\n                                        <IconButton\n                                            size=\"small\"\n                                            onClick={\n                                                contact.active\n                                                    ? () => {\n                                                        setConfirmOpen(true);\n                                                        setBlockingContact(\n                                                            contact\n                                                        );\n                                                    }\n                                                    : () => {\n                                                        setConfirmOpen(true);\n                                                        setUnBlockingContact(\n                                                            contact\n                                                        );\n                                                    }\n                                            }\n                                        >\n                                            {contact.active ? (\n                                                <BlockIcon color=\"secondary\" />\n                                            ) : (\n                                                <CheckCircleIcon color=\"secondary\" />\n                                            )}\n                                        </IconButton>\n                                        <Can\n                                            role={user.profile}\n                                            perform=\"contacts-page:deleteContact\"\n                                            yes={() => (\n                                                <IconButton\n                                                    size=\"small\"\n                                                    onClick={(e) => {\n                                                        setConfirmOpen(true);\n                                                        setDeletingContact(\n                                                            contact\n                                                        );\n                                                    }}\n                                                >\n                                                    <DeleteOutlineIcon color=\"secondary\" />\n                                                </IconButton>\n                                            )}\n                                        />\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                            {loading && <TableRowSkeleton avatar columns={3} />}\n                        </>\n                    </TableBody>\n                </Table>\n            </Paper>\n        </MainContainer >\n    );\n};\n\nexport default Contacts;","import { Dialog } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\n\nimport { BlockPicker } from \"react-color\";\n\nconst ColorPicker = ({ onChange, currentColor, handleClose, open }) => {\n\tconst [selectedColor, setSelectedColor] = useState(currentColor);\n\n\tconst handleChange = color => {\n\t\tsetSelectedColor(color.hex);\n\t\thandleClose();\n\t};\n\n\tconst colors = [\n\t\t\"#B80000\",\n\t\t\"#DB3E00\",\n\t\t\"#FCCB00\",\n\t\t\"#008B02\",\n\t\t\"#006B76\",\n\t\t\"#1273DE\",\n\t\t\"#004DCF\",\n\t\t\"#5300EB\",\n\t\t\"#EB9694\",\n\t\t\"#FAD0C3\",\n\t\t\"#FEF3BD\",\n\t\t\"#C1E1C5\",\n\t\t\"#BEDADC\",\n\t\t\"#C4DEF6\",\n\t\t\"#BED3F3\",\n\t\t\"#D4C4FB\",\n\t\t\"#4D4D4D\",\n\t\t\"#999999\",\n\t\t\"#F44E3B\",\n\t\t\"#FE9200\",\n\t\t\"#FCDC00\",\n\t\t\"#DBDF00\",\n\t\t\"#A4DD00\",\n\t\t\"#68CCCA\",\n\t\t\"#73D8FF\",\n\t\t\"#AEA1FF\",\n\t\t\"#FDA1FF\",\n\t\t\"#333333\",\n\t\t\"#808080\",\n\t\t\"#cccccc\",\n\t\t\"#D33115\",\n\t\t\"#E27300\",\n\t\t\"#FCC400\",\n\t\t\"#B0BC00\",\n\t\t\"#68BC00\",\n\t\t\"#16A5A5\",\n\t\t\"#009CE0\",\n\t\t\"#7B64FF\",\n\t\t\"#FA28FF\",\n\t\t\"#666666\",\n\t\t\"#B3B3B3\",\n\t\t\"#9F0500\",\n\t\t\"#C45100\",\n\t\t\"#FB9E00\",\n\t\t\"#808900\",\n\t\t\"#194D33\",\n\t\t\"#0C797D\",\n\t\t\"#0062B1\",\n\t\t\"#653294\",\n\t\t\"#AB149E\",\n\t];\n\n\treturn (\n\t\t<Dialog\n\t\t\tonClose={handleClose}\n\t\t\taria-labelledby=\"simple-dialog-title\"\n\t\t\topen={open}\n\t\t>\n\t\t\t<BlockPicker\n\t\t\t\twidth={\"100%\"}\n\t\t\t\ttriangle=\"hide\"\n\t\t\t\tcolor={selectedColor}\n\t\t\t\tcolors={colors}\n\t\t\t\tonChange={handleChange}\n\t\t\t\tonChangeComplete={color => onChange(color.hex)}\n\t\t\t/>\n\t\t</Dialog>\n\t);\n};\n\nexport default ColorPicker;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Button, IconButton, StepContent, TextField } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    //height: 400,\n    [theme.breakpoints.down(\"sm\")]: {\n      maxHeight: \"20vh\",\n    },\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  input: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  addButton: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nexport function QueueOptionStepper({ queueId, options, updateOptions }) {\n  const classes = useStyles();\n  const [activeOption, setActiveOption] = useState(-1);\n\n  const handleOption = (index) => async () => {\n    setActiveOption(index);\n    const option = options[index];\n\n    if (option !== undefined && option.id !== undefined) {\n      try {\n        const { data } = await api.request({\n          url: \"/queue-options\",\n          method: \"GET\",\n          params: { queueId, parentId: option.id },\n        });\n        const optionList = data.map((option) => {\n          return {\n            ...option,\n            children: [],\n            edition: false,\n          };\n        });\n        option.children = optionList;\n        updateOptions();\n      } catch (e) {\n        toastError(e);\n      }\n    }\n  };\n\n  const handleSave = async (option) => {\n    try {\n      if (option.id) {\n        await api.request({\n          url: `/queue-options/${option.id}`,\n          method: \"PUT\",\n          data: option,\n        });\n      } else {\n        const { data } = await api.request({\n          url: `/queue-options`,\n          method: \"POST\",\n          data: option,\n        });\n        option.id = data.id;\n      }\n      option.edition = false;\n      updateOptions();\n    } catch (e) {\n      toastError(e);\n    }\n  };\n\n  const handleEdition = (index) => {\n    options[index].edition = !options[index].edition;\n    updateOptions();\n  };\n\n  const handleDeleteOption = async (index) => {\n    const option = options[index];\n    if (option !== undefined && option.id !== undefined) {\n      try {\n        await api.request({\n          url: `/queue-options/${option.id}`,\n          method: \"DELETE\",\n        });\n      } catch (e) {\n        toastError(e);\n      }\n    }\n    options.splice(index, 1);\n    options.forEach(async (option, order) => {\n      option.option = order + 1;\n      await handleSave(option);\n    });\n    updateOptions();\n  };\n\n  const handleOptionChangeTitle = (event, index) => {\n    options[index].title = event.target.value;\n    updateOptions();\n  };\n\n  const handleOptionChangeMessage = (event, index) => {\n    options[index].message = event.target.value;\n    updateOptions();\n  };\n\n  const renderTitle = (index) => {\n    const option = options[index];\n    if (option.edition) {\n      return (\n        <>\n          <TextField\n            value={option.title}\n            onChange={(event) => handleOptionChangeTitle(event, index)}\n            size=\"small\"\n            className={classes.input}\n            placeholder=\"Título da opção\"\n          />\n          {option.edition && (\n            <>\n              <IconButton\n                color=\"primary\"\n                variant=\"outlined\"\n                size=\"small\"\n                className={classes.button}\n                onClick={() => handleSave(option)}\n              >\n                <SaveIcon />\n              </IconButton>\n              <IconButton\n                variant=\"outlined\"\n                color=\"secondary\"\n                size=\"small\"\n                className={classes.button}\n                onClick={() => handleDeleteOption(index)}\n              >\n                <DeleteOutlineIcon />\n              </IconButton>\n            </>\n          )}\n        </>\n      );\n    }\n    return (\n      <>\n        <Typography>\n          {option.title !== \"\" ? option.title : \"Título não definido\"}\n          <IconButton\n            variant=\"outlined\"\n            size=\"small\"\n            className={classes.button}\n            onClick={() => handleEdition(index)}\n          >\n            <EditIcon />\n          </IconButton>\n        </Typography>\n      </>\n    );\n  };\n\n  const renderMessage = (index) => {\n    const option = options[index];\n    if (option.edition) {\n      return (\n        <>\n          <TextField\n            style={{ width: \"100%\" }}\n            multiline\n            value={option.message}\n            onChange={(event) => handleOptionChangeMessage(event, index)}\n            size=\"small\"\n            className={classes.input}\n            placeholder=\"Digite o texto da opção\"\n          />\n        </>\n      );\n    }\n    return (\n      <>\n        <Typography onClick={() => handleEdition(index)}>\n          {option.message}\n        </Typography>\n      </>\n    );\n  };\n\n  const handleAddOption = (index) => {\n    const optionNumber = options[index].children.length + 1;\n    options[index].children.push({\n      title: \"\",\n      message: \"\",\n      edition: false,\n      option: optionNumber,\n      queueId,\n      parentId: options[index].id,\n      children: [],\n    });\n    updateOptions();\n  };\n\n  const renderStep = (option, index) => {\n    return (\n      <Step key={index}>\n        <StepLabel style={{ cursor: \"pointer\" }} onClick={handleOption(index)}>\n          {renderTitle(index)}\n        </StepLabel>\n        <StepContent>\n          {renderMessage(index)}\n\n          {option.id !== undefined && (\n            <>\n              <Button\n                color=\"primary\"\n                size=\"small\"\n                onClick={() => handleAddOption(index)}\n                startIcon={<AddIcon />}\n                variant=\"outlined\"\n                className={classes.addButton}\n              >\n                Adicionar\n              </Button>\n            </>\n          )}\n          <QueueOptionStepper\n            queueId={queueId}\n            options={option.children}\n            updateOptions={updateOptions}\n          />\n        </StepContent>\n      </Step>\n    );\n  };\n\n  const renderStepper = () => {\n    return (\n      <Stepper\n        style={{ marginBottom: 0, paddingBottom: 0 }}\n        nonLinear\n        activeStep={activeOption}\n        orientation=\"vertical\"\n      >\n        {options.map((option, index) => renderStep(option, index))}\n      </Stepper>\n    );\n  };\n\n  return renderStepper();\n}\n\nexport function QueueOptions({ queueId }) {\n  const classes = useStyles();\n  const [options, setOptions] = useState([]);\n\n  useEffect(() => {\n    if (queueId) {\n      const fetchOptions = async () => {\n        try {\n          const { data } = await api.request({\n            url: \"/queue-options\",\n            method: \"GET\",\n            params: { queueId, parentId: -1 },\n          });\n          const optionList = data.map((option) => {\n            return {\n              ...option,\n              children: [],\n              edition: false,\n            };\n          });\n          setOptions(optionList);\n        } catch (e) {\n          toastError(e);\n        }\n      };\n      fetchOptions();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const renderStepper = () => {\n    if (options.length > 0) {\n      return (\n        <QueueOptionStepper\n          queueId={queueId}\n          updateOptions={updateOptions}\n          options={options}\n        />\n      );\n    }\n  };\n\n  const updateOptions = () => {\n    setOptions([...options]);\n  };\n\n  const addOption = () => {\n    const newOption = {\n      title: \"\",\n      message: \"\",\n      edition: false,\n      option: options.length + 1,\n      queueId,\n      parentId: null,\n      children: [],\n    };\n    setOptions([...options, newOption]);\n  };\n\n  return (\n    <div className={classes.root}>\n      <br />\n      <Typography>\n        Opções\n        <Button\n          color=\"primary\"\n          size=\"small\"\n          onClick={addOption}\n          startIcon={<AddIcon />}\n          style={{ marginLeft: 10 }}\n          variant=\"outlined\"\n        >\n          Adicionar\n        </Button>\n      </Typography>\n      {renderStepper()}\n    </div>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\n\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field } from \"formik\";\nimport { toast } from \"react-toastify\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport { i18n } from \"../../translate/i18n\";\n\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\nimport ColorPicker from \"../ColorPicker\";\nimport {\n  IconButton,\n  InputAdornment,\n  Paper,\n  Tab,\n  Tabs,\n  FormControlLabel,\n  Select,\n  Switch,\n  MenuItem\n} from \"@material-ui/core\";\nimport { Colorize } from \"@material-ui/icons\";\nimport { QueueOptions } from \"../QueueOptions\";\nimport SchedulesForm from \"../SchedulesForm\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  textField: {\n    marginRight: theme.spacing(1),\n    flex: 1,\n  },\n\n  btnWrapper: {\n    position: \"relative\",\n  },\n\n  buttonProgress: {\n    color: green[500],\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  colorAdorment: {\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst QueueSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n  color: Yup.string().min(3, \"Too Short!\").max(9, \"Too Long!\").required(),\n  greetingMessage: Yup.string(),\n});\n\nconst QueueModal = ({ open, onClose, queueId }) => {\n  const classes = useStyles();\n\n  const initialState = {\n    name: \"\",\n    color: \"\",\n    greetingMessage: \"\",\n    outOfHoursMessage: \"\",\n    tempoRoteador: \"\",\n    ativarRoteador: false,\n  };\n\n  const [colorPickerModalOpen, setColorPickerModalOpen] = useState(false);\n  const [queue, setQueue] = useState(initialState);\n  const [tab, setTab] = useState(0);\n  const [schedulesEnabled, setSchedulesEnabled] = useState(false);\n  const greetingRef = useRef();\n\n  const [schedules, setSchedules] = useState([\n    { weekday: \"Segunda-feira\",weekdayEn: \"monday\",startTime: \"08:00\",endTime: \"18:00\",},\n    { weekday: \"Terça-feira\",weekdayEn: \"tuesday\",startTime: \"08:00\",endTime: \"18:00\",},\n    { weekday: \"Quarta-feira\",weekdayEn: \"wednesday\",startTime: \"08:00\",endTime: \"18:00\",},\n    { weekday: \"Quinta-feira\",weekdayEn: \"thursday\",startTime: \"08:00\",endTime: \"18:00\",},\n    { weekday: \"Sexta-feira\", weekdayEn: \"friday\",startTime: \"08:00\",endTime: \"18:00\",},\n    { weekday: \"Sábado\", weekdayEn: \"saturday\",startTime: \"08:00\",endTime: \"12:00\",},\n    { weekday: \"Domingo\", weekdayEn: \"sunday\",startTime: \"00:00\",endTime: \"00:00\",},\n  ]);\n\n  useEffect(() => {\n    api.get(`/settings`).then(({ data }) => {\n      if (Array.isArray(data)) {\n        const scheduleType = data.find((d) => d.key === \"scheduleType\");\n        if (scheduleType) {\n          setSchedulesEnabled(scheduleType.value === \"queue\");\n        }\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      if (!queueId) return;\n      try {\n        const { data } = await api.get(`/queue/${queueId}`);\n        setQueue((prevState) => {\n          return { ...prevState, ...data };\n        });\n        setSchedules(data.schedules);\n      } catch (err) {\n        toastError(err);\n      }\n    })();\n\n    return () => {\n      setQueue({\n        name: \"\",\n        color: \"\",\n        greetingMessage: \"\",\n        tempoRoteador: \"\",\n        ativarRoteador: false\n      });\n    };\n  }, [queueId, open]);\n\n  const handleClose = () => {\n    onClose();\n    setQueue(initialState);\n  };\n\n  const handleSaveQueue = async (values) => {\n    try {\n      if (queueId) {\n        await api.put(`/queue/${queueId}`, { ...values, schedules });\n      } else {\n        await api.post(\"/queue\", { ...values, schedules });\n      }\n      toast.success(\"Queue saved successfully\");\n      handleClose();\n    } catch (err) {\n      toastError(err);\n    }\n  };\n\n  const handleSaveSchedules = async (values) => {\n    toast.success(\"Clique em salvar para registar as alterações\");\n    setSchedules(values);\n    setTab(0);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Dialog\n        maxWidth=\"md\"\n        fullWidth={true}\n        open={open}\n        onClose={handleClose}\n        scroll=\"paper\"\n      >\n        <DialogTitle>\n          {queueId\n            ? `${i18n.t(\"queueModal.title.edit\")}`\n            : `${i18n.t(\"queueModal.title.add\")}`}\n        </DialogTitle>\n        <Tabs\n          value={tab}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          onChange={(_, v) => setTab(v)}\n          aria-label=\"disabled tabs example\"\n        >\n          <Tab label=\"Dados da Fila\" />\n          {schedulesEnabled && <Tab label=\"Horários de Atendimento\" />}\n        </Tabs>\n        {tab === 0 && (\n          <Paper>\n            <Formik\n              initialValues={queue}\n              enableReinitialize={true}\n              validationSchema={QueueSchema}\n              onSubmit={(values, actions) => {\n                setTimeout(() => {\n                  handleSaveQueue(values);\n                  actions.setSubmitting(false);\n                }, 400);\n              }}\n            >\n              {({ touched, errors, isSubmitting, values }) => (\n                <Form>\n                  <DialogContent dividers>\n                    <Field\n                      as={TextField}\n                      label={i18n.t(\"queueModal.form.name\")}\n                      autoFocus\n                      name=\"name\"\n                      error={touched.name && Boolean(errors.name)}\n                      helperText={touched.name && errors.name}\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      className={classes.textField}\n                    />\n                    <Field\n                      as={TextField}\n                      label={i18n.t(\"queueModal.form.color\")}\n                      name=\"color\"\n                      id=\"color\"\n                      onFocus={() => {\n                        setColorPickerModalOpen(true);\n                        greetingRef.current.focus();\n                      }}\n                      error={touched.color && Boolean(errors.color)}\n                      helperText={touched.color && errors.color}\n                      InputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            <div\n                              style={{ backgroundColor: values.color }}\n                              className={classes.colorAdorment}\n                            ></div>\n                          </InputAdornment>\n                        ),\n                        endAdornment: (\n                          <IconButton\n                            size=\"small\"\n                            color=\"default\"\n                            onClick={() => setColorPickerModalOpen(true)}\n                          >\n                            <Colorize />\n                          </IconButton>\n                        ),\n                      }}\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      className={classes.textField}\n                    />\n                    <ColorPicker\n                      open={colorPickerModalOpen}\n                      handleClose={() => setColorPickerModalOpen(false)}\n                      onChange={(color) => {\n                        values.color = color;\n                        setQueue(() => {\n                          return { ...values, color };\n                        });\n                      }}\n                    />\n                    <FormControlLabel \n                      control={\n                        <Field\n                          as={Switch}\n                          color=\"primary\"\n                          name=\"ativarRoteador\"\n                          checked={values.ativarRoteador}\n                        />\n                      }\n                      label=\"Rodízio\"\n                    />\n                    <Field\n  \t\t\t\t\t\tas={Select}\n  \t\t\t\t\t\tlabel=\"Tempo de Rodízio\"\n  \t\t\t\t\t\tname=\"tempoRoteador\"\n  \t\t\t\t\t\terror={touched.tempoRoteador && Boolean(errors.tempoRoteador)}\n  \t\t\t\t\t\thelperText={touched.tempoRoteador && errors.tempoRoteador}\n  \t\t\t\t\t\tvariant=\"outlined\"\n  \t\t\t\t\t\tmargin=\"dense\"\n  \t\t\t\t\t\tclassName={classes.selectField}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MenuItem value=\"0\" selected disabled>Tempo de Rodízio</MenuItem>\n                        <MenuItem value=\"2\">2 minutos</MenuItem>\n  \t\t\t\t\t\t<MenuItem value=\"5\">5 minutos</MenuItem>\n  \t\t\t\t\t\t<MenuItem value=\"10\">10 minutos</MenuItem>\n  \t\t\t\t\t\t<MenuItem value=\"15\">15 minutos</MenuItem>\n                        <MenuItem value=\"30\">30 minutos</MenuItem>\n  \t\t\t\t\t\t<MenuItem value=\"45\">45 minutos</MenuItem>\n  \t\t\t\t\t\t<MenuItem value=\"60\">60 minutos</MenuItem>\n\t\t\t\t    </Field>\n                    <div style={{ marginTop: 5 }}>\n                          <Field\n                            as={TextField}\n                            label={i18n.t(\"queueModal.form.greetingMessage\")}\n                            type=\"greetingMessage\"\n                            multiline\n                            inputRef={greetingRef}\n                            rows={5}\n                            fullWidth\n                            name=\"greetingMessage\"\n                            error={\n                              touched.greetingMessage &&\n                              Boolean(errors.greetingMessage)\n                            }\n                            helperText={\n                              touched.greetingMessage && errors.greetingMessage\n                            }\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                          />\n                        {schedulesEnabled && (\n                            <Field\n                              as={TextField}\n                              label={i18n.t(\"queueModal.form.outOfHoursMessage\")}\n                              type=\"outOfHoursMessage\"\n                              multiline\n                              rows={5}\n                              fullWidth\n                              name=\"outOfHoursMessage\"\n                              error={\n                                touched.outOfHoursMessage &&\n                                Boolean(errors.outOfHoursMessage)\n                              }\n                              helperText={\n                                touched.outOfHoursMessage && errors.outOfHoursMessage\n                              }\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                            />\n                        )}\n                    </div>\n                    <QueueOptions queueId={queueId} />\n                  </DialogContent>\n                  <DialogActions>\n                    <Button\n                      onClick={handleClose}\n                      color=\"secondary\"\n                      disabled={isSubmitting}\n                      variant=\"outlined\"\n                    >\n                      {i18n.t(\"queueModal.buttons.cancel\")}\n                    </Button>\n                    <Button\n                      type=\"submit\"\n                      color=\"primary\"\n                      disabled={isSubmitting}\n                      variant=\"contained\"\n                      className={classes.btnWrapper}\n                    >\n                      {queueId\n                        ? `${i18n.t(\"queueModal.buttons.okEdit\")}`\n                        : `${i18n.t(\"queueModal.buttons.okAdd\")}`}\n                      {isSubmitting && (\n                        <CircularProgress\n                          size={24}\n                          className={classes.buttonProgress}\n                        />\n                      )}\n                    </Button>\n                  </DialogActions>\n                </Form>\n              )}\n            </Formik>\n          </Paper>\n        )}\n        {tab === 1 && (\n          <Paper style={{ padding: 20 }}>\n            <SchedulesForm\n              loading={false}\n              onSubmit={handleSaveSchedules}\n              initialValues={schedules}\n              labelSaveButton=\"Adicionar\"\n            />\n          </Paper>\n        )}\n      </Dialog>\n    </div>\n  );\n};\n\nexport default QueueModal;\n","import React, { useEffect, useReducer, useState, useContext } from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { toast } from \"react-toastify\";\n\nimport {\n  Button,\n  IconButton,\n  makeStyles,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n} from \"@material-ui/core\";\n\nimport MainContainer from \"../../components/MainContainer\";\nimport MainHeader from \"../../components/MainHeader\";\nimport MainHeaderButtonsWrapper from \"../../components/MainHeaderButtonsWrapper\";\nimport TableRowSkeleton from \"../../components/TableRowSkeleton\";\nimport Title from \"../../components/Title\";\nimport { i18n } from \"../../translate/i18n\";\nimport toastError from \"../../errors/toastError\";\nimport api from \"../../services/api\";\nimport { DeleteOutline, Edit } from \"@material-ui/icons\";\nimport QueueModal from \"../../components/QueueModal\";\nimport ConfirmationModal from \"../../components/ConfirmationModal\";\nimport { socketConnection } from \"../../services/socket\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainPaper: {\n    flex: 1,\n    padding: theme.spacing(1),\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n  customTableCell: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_QUEUES\") {\n    const queues = action.payload;\n    const newQueues = [];\n\n    queues.forEach((queue) => {\n      const queueIndex = state.findIndex((q) => q.id === queue.id);\n      if (queueIndex !== -1) {\n        state[queueIndex] = queue;\n      } else {\n        newQueues.push(queue);\n      }\n    });\n\n    return [...state, ...newQueues];\n  }\n\n  if (action.type === \"UPDATE_QUEUES\") {\n    const queue = action.payload;\n    const queueIndex = state.findIndex((u) => u.id === queue.id);\n\n    if (queueIndex !== -1) {\n      state[queueIndex] = queue;\n      return [...state];\n    } else {\n      return [queue, ...state];\n    }\n  }\n\n  if (action.type === \"DELETE_QUEUE\") {\n    const queueId = action.payload;\n    const queueIndex = state.findIndex((q) => q.id === queueId);\n    if (queueIndex !== -1) {\n      state.splice(queueIndex, 1);\n    }\n    return [...state];\n  }\n\n  if (action.type === \"RESET\") {\n    return [];\n  }\n};\n\nconst Queues = () => {\n  const classes = useStyles();\n\n  const history = useHistory();\n  const { user } = useContext(AuthContext);\n\n  const [queues, dispatch] = useReducer(reducer, []);\n  const [loading, setLoading] = useState(false);\n\n  const [queueModalOpen, setQueueModalOpen] = useState(false);\n  const [selectedQueue, setSelectedQueue] = useState(null);\n  const [confirmModalOpen, setConfirmModalOpen] = useState(false);\n\n\n  // trava para nao acessar pagina que não pode  \n  useEffect(() => {\n    async function fetchData() {\n      if (user.profile !== \"admin\") {\n        toast.error(\"Acesso não permitido\");\n        setTimeout(() => {\n          history.push(`/`)\n        }, 100);\n      }\n    }\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n\n  useEffect(() => {\n    (async () => {\n      setLoading(true);\n      try {\n        const { data } = await api.get(\"/queue\");\n        dispatch({ type: \"LOAD_QUEUES\", payload: data });\n\n        setLoading(false);\n      } catch (err) {\n        toastError(err);\n        setLoading(false);\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketConnection({ companyId });\n\n    socket.on(`company-${companyId}-queue`, (data) => {\n      if (data.action === \"update\" || data.action === \"create\") {\n        dispatch({ type: \"UPDATE_QUEUES\", payload: data.queue });\n      }\n\n      if (data.action === \"delete\") {\n        dispatch({ type: \"DELETE_QUEUE\", payload: data.queueId });\n      }\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  const handleOpenQueueModal = () => {\n    setQueueModalOpen(true);\n    setSelectedQueue(null);\n  };\n\n  const handleCloseQueueModal = () => {\n    setQueueModalOpen(false);\n    setSelectedQueue(null);\n  };\n\n  const handleEditQueue = (queue) => {\n    setSelectedQueue(queue);\n    setQueueModalOpen(true);\n  };\n\n  const handleCloseConfirmationModal = () => {\n    setConfirmModalOpen(false);\n    setSelectedQueue(null);\n  };\n\n  const handleDeleteQueue = async (queueId) => {\n    try {\n      await api.delete(`/queue/${queueId}`);\n      toast.success(i18n.t(\"Queue deleted successfully!\"));\n    } catch (err) {\n      toastError(err);\n    }\n    setSelectedQueue(null);\n  };\n\n  return (\n    <MainContainer>\n      <ConfirmationModal\n        title={\n          selectedQueue &&\n          `${i18n.t(\"queues.confirmationModal.deleteTitle\")} ${selectedQueue.name\n          }?`\n        }\n        open={confirmModalOpen}\n        onClose={handleCloseConfirmationModal}\n        onConfirm={() => handleDeleteQueue(selectedQueue.id)}\n      >\n        {i18n.t(\"queues.confirmationModal.deleteMessage\")}\n      </ConfirmationModal>\n      <QueueModal\n        open={queueModalOpen}\n        onClose={handleCloseQueueModal}\n        queueId={selectedQueue?.id}\n      />\n      <MainHeader>\n        <Title>{i18n.t(\"queues.title\")}</Title>\n        <MainHeaderButtonsWrapper>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleOpenQueueModal}\n          >\n            {i18n.t(\"queues.buttons.add\")}\n          </Button>\n        </MainHeaderButtonsWrapper>\n      </MainHeader>\n      <Paper className={classes.mainPaper} variant=\"outlined\">\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">  Id</TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"queues.table.name\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"queues.table.color\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"queues.table.greeting\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"queues.table.actions\")}\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <>\n              {queues.map((queue) => (\n                <TableRow key={queue.id}>\n                  <TableCell align=\"center\">{queue.id}</TableCell>\n                  <TableCell align=\"center\">{queue.name}</TableCell>\n                  <TableCell align=\"center\">\n                    <div className={classes.customTableCell}>\n                      <span\n                        style={{\n                          backgroundColor: queue.color,\n                          width: 60,\n                          height: 20,\n                          alignSelf: \"center\",\n                        }}\n                      />\n                    </div>\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <div className={classes.customTableCell}>\n                      <Typography\n                        style={{ width: 300, align: \"center\" }}\n                        noWrap\n                        variant=\"body2\"\n                      >\n                        {queue.greetingMessage}\n                      </Typography>\n                    </div>\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => handleEditQueue(queue)}\n                    >\n                      <Edit />\n                    </IconButton>\n\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => {\n                        setSelectedQueue(queue);\n                        setConfirmModalOpen(true);\n                      }}\n                    >\n                      <DeleteOutline />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n              {loading && <TableRowSkeleton columns={4} />}\n            </>\n          </TableBody>\n        </Table>\n      </Paper>\n    </MainContainer>\n  );\n};\n\nexport default Queues;\n","import React, { useState, useEffect, useContext } from \"react\";\n\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field } from \"formik\";\nimport { toast } from \"react-toastify\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { Colorize } from \"@material-ui/icons\";\nimport { ColorBox } from 'material-ui-color';\nimport { FormControlLabel, Switch } from '@material-ui/core';\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Checkbox from '@material-ui/core/Checkbox';\n\n\nimport { i18n } from \"../../translate/i18n\";\n\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { IconButton, InputAdornment, FormControl } from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t\tdisplay: \"flex\",\n\t\tflexWrap: \"wrap\",\n\t},\n\tmultFieldLine: {\n\t\tdisplay: \"flex\",\n\t\t\"& > *:not(:last-child)\": {\n\t\t\tmarginRight: theme.spacing(1),\n\t\t},\n\t},\n\n\tbtnWrapper: {\n\t\tposition: \"relative\",\n\t},\n\n\tbuttonProgress: {\n\t\tcolor: green[500],\n\t\tposition: \"absolute\",\n\t\ttop: \"50%\",\n\t\tleft: \"50%\",\n\t\tmarginTop: -12,\n\t\tmarginLeft: -12,\n\t},\n\tformControl: {\n\t\tmargin: theme.spacing(1),\n\t\tminWidth: 120,\n\t},\n\tcolorAdorment: {\n\t\twidth: 20,\n\t\theight: 20,\n\t},\n    multFieldLine: {\n    \tdisplay: 'flex',\n    \tflexDirection: 'row',\n    \talignItems: 'center',\n  \t},\n}));\n\nconst TagSchema = Yup.object().shape({\n\tname: Yup.string()\n\t\t.min(3, \"Mensagem muito curta\")\n\t\t.required(\"Obrigatório\")\n});\n\nconst TagModal = ({ open, onClose, tagId, reload }) => {\n\tconst classes = useStyles();\n\tconst { user } = useContext(AuthContext);\n\tconst [colorPickerModalOpen, setColorPickerModalOpen] = useState(false);\n    //console.log(user);\n\n\n\tconst initialState = {\n\t\tname: \"\",\n\t\tcolor: \"\",\n        kanban: 0\n\t};\n\n\tconst [tag, setTag] = useState(initialState);\n\n\tuseEffect(() => {\n\t\ttry {\n\t\t\t(async () => {\n\t\t\t\tif (!tagId) return;\n\n\t\t\t\tconst { data } = await api.get(`/tags/${tagId}`);\n                //console.log(data);\n\t\t\t\tsetTag(prevState => {\n\t\t\t\t\treturn { ...prevState, ...data };\n\t\t\t\t});\n\t\t\t})()\n\t\t} catch (err) {\n\t\t\ttoastError(err);\n\t\t}\n\t}, [tagId, open]);\n\n\tconst handleClose = () => {\n\t\tsetTag(initialState);\n\t\tsetColorPickerModalOpen(false);\n\t\tonClose();\n\t};\n\n\tconst handleSaveTag = async values => {\n\t\tconst tagData = { ...values, userId: user.id };\n\t\ttry {\n\t\t\tif (tagId) {\n\t\t\t\tawait api.put(`/tags/${tagId}`, tagData);\n\t\t\t} else {\n\t\t\t\tawait api.post(\"/tags\", tagData);\n\t\t\t}\n\t\t\ttoast.success(i18n.t(\"tagModal.success\"));\n\t\t\tif (typeof reload == 'function') {\n\t\t\t\treload();\n\t\t\t}\n\t\t} catch (err) {\n\t\t\ttoastError(err);\n\t\t}\n\t\thandleClose();\n\t};\n\n\nconst handleKanbanChange = (e) => {\n    const kanbanValue = e.target.checked ? 1 : 0;\n    setTag((prev) => ({\n      ...prev,\n      kanban: kanbanValue,\n    }));\n  };\n\treturn (\n    \t\n\t\t<div className={classes.root}>\n\t\t\t<Dialog\n\t\t\t\topen={open}\n\t\t\t\tonClose={handleClose}\n\t\t\t\tmaxWidth=\"xs\"\n\t\t\t\tfullWidth\n\t\t\t\tscroll=\"paper\"\n\t\t\t>\n\t\t\t\t<DialogTitle id=\"form-dialog-title\">\n\t\t\t\t\t{ (tagId ? `${i18n.t(\"tagModal.title.edit\")}` : `${i18n.t(\"tagModal.title.add\")}`) }\n\t\t\t\t</DialogTitle>\n\t\t\t\t<Formik\n\t\t\t\t\tinitialValues={tag}\n\t\t\t\t\tenableReinitialize={true}\n\t\t\t\t\tvalidationSchema={TagSchema}\n\t\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\thandleSaveTag(values);\n\t\t\t\t\t\t\tactions.setSubmitting(false);\n\t\t\t\t\t\t}, 400);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{({ touched, errors, isSubmitting, values }) => (\n\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t<DialogContent dividers>\n\t\t\t\t\t\t\t\t<div className={classes.multFieldLine}>\n\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\tas={TextField}\n\t\t\t\t\t\t\t\t\t\tlabel={i18n.t(\"tagModal.form.name\")}\n\t\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\t\terror={touched.name && Boolean(errors.name)}\n\t\t\t\t\t\t\t\t\t\thelperText={touched.name && errors.name}\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setTag(prev => ({ ...prev, name: e.target.value }))}\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<div className={classes.multFieldLine}>\n\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\tas={TextField}\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tlabel={i18n.t(\"tagModal.form.color\")}\n\t\t\t\t\t\t\t\t\t\tname=\"color\"\n\t\t\t\t\t\t\t\t\t\tid=\"color\"\n\t\t\t\t\t\t\t\t\t\terror={touched.color && Boolean(errors.color)}\n\t\t\t\t\t\t\t\t\t\thelperText={touched.color && errors.color}\n\t\t\t\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\t\t\t\tstartAdornment: (\n\t\t\t\t\t\t\t\t\t\t\t\t<InputAdornment position=\"start\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ backgroundColor: values.color }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.colorAdorment}\n\t\t\t\t\t\t\t\t\t\t\t\t\t></div>\n\t\t\t\t\t\t\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\tendAdornment: (\n\t\t\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"default\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setColorPickerModalOpen(!colorPickerModalOpen)}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Colorize />\n\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n                                {(user.profile === \"admin\" || user.profile === \"supervisor\") && (\n                                <>\n\t\t\t\t\t\t\t\t<div className={classes.multFieldLine}>\n        \t\t\t\t\t\t\t<FormControlLabel\n          \t\t\t\t\t\t\t\tcontrol={\n            \t\t\t\t\t\t\t\t<Checkbox\n             \t\t\t\t\t\t\t\t\tchecked={tag.kanban === 1}\n             \t\t\t\t\t\t\t\t\tonChange={handleKanbanChange}\n              \t\t\t\t\t\t\t\t\tname=\"kanban\"\n              \t\t\t\t\t\t\t\t\tcolor=\"primary\"\n            \t\t\t\t\t\t\t\t/>\n          \t\t\t\t\t\t\t\t}\n          \t\t\t\t\t\t\t\tlabel=\"Kanban\"\n          \t\t\t\t\t\t\t\tlabelPlacement=\"start\"\n        \t\t\t\t\t\t\t/>\n      \t\t\t\t\t\t\t</div>\n      \t\t\t\t\t\t\t<br />\n                                </>\n\t\t\t\t\t\t\t\t)}\n                                \n\t\t\t\t\t\t\t\t{ colorPickerModalOpen && (\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<ColorBox\n\t\t\t\t\t\t\t\t\t\t\tdisableAlpha={true}\n\t\t\t\t\t\t\t\t\t\t\thslGradient={false}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{margin: '20px auto 0'}}\n\t\t\t\t\t\t\t\t\t\t\tvalue={tag.color}\n\t\t\t\t\t\t\t\t\t\t\tonChange={val => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetTag(prev => ({ ...prev, color: `#${val.hex}` }));\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tonClick={handleClose}\n\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{i18n.t(\"tagModal.buttons.cancel\")}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tclassName={classes.btnWrapper}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{tagId\n\t\t\t\t\t\t\t\t\t\t? `${i18n.t(\"tagModal.buttons.okEdit\")}`\n\t\t\t\t\t\t\t\t\t\t: `${i18n.t(\"tagModal.buttons.okAdd\")}`}\n\t\t\t\t\t\t\t\t\t{isSubmitting && (\n\t\t\t\t\t\t\t\t\t\t<CircularProgress\n\t\t\t\t\t\t\t\t\t\t\tsize={24}\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.buttonProgress}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t)}\n\t\t\t\t</Formik>\n\t\t\t</Dialog>\n\t\t</div>\n        \n\t);\n};\n\nexport default TagModal;","import React, {\n  useState,\n  useEffect,\n  useReducer,\n  useCallback,\n  useContext,\n} from \"react\";\nimport { toast } from \"react-toastify\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport FlagIcon from '@material-ui/icons/Flag';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nimport MainContainer from \"../../components/MainContainer\";\nimport MainHeader from \"../../components/MainHeader\";\nimport MainHeaderButtonsWrapper from \"../../components/MainHeaderButtonsWrapper\";\nimport Title from \"../../components/Title\";\n\nimport api from \"../../services/api\";\nimport { i18n } from \"../../translate/i18n\";\nimport TableRowSkeleton from \"../../components/TableRowSkeleton\";\nimport TagModal from \"../../components/TagModal\";\nimport ConfirmationModal from \"../../components/ConfirmationModal\";\nimport toastError from \"../../errors/toastError\";\nimport { Chip } from \"@material-ui/core\";\nimport { socketConnection } from \"../../services/socket\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\n\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_TAGS\") {\n    const tags = action.payload;\n    const newTags = [];\n\n    tags.forEach((tag) => {\n      const tagIndex = state.findIndex((s) => s.id === tag.id);\n      if (tagIndex !== -1) {\n        state[tagIndex] = tag;\n      } else {\n        newTags.push(tag);\n      }\n    });\n\n    return [...state, ...newTags];\n  }\n\n  if (action.type === \"UPDATE_TAGS\") {\n    const tag = action.payload;\n    const tagIndex = state.findIndex((s) => s.id === tag.id);\n\n    if (tagIndex !== -1) {\n      state[tagIndex] = tag;\n      return [...state];\n    } else {\n      return [tag, ...state];\n    }\n  }\n\n  if (action.type === \"DELETE_TAG\") {\n    const tagId = action.payload;\n\n    const tagIndex = state.findIndex((s) => s.id === tagId);\n    if (tagIndex !== -1) {\n      state.splice(tagIndex, 1);\n    }\n    return [...state];\n  }\n\n  if (action.type === \"RESET\") {\n    return [];\n  }\n};\n\nconst useStyles = makeStyles((theme) => ({\n  mainPaper: {\n    flex: 1,\n    padding: theme.spacing(1),\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n}));\n\nconst Tags = () => {\n  const classes = useStyles();\n\n  const { user } = useContext(AuthContext);\n  const { id, profile, name } = user;\n\n  const [loading, setLoading] = useState(false);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [hasMore, setHasMore] = useState(false);\n  const [selectedTag, setSelectedTag] = useState(null);\n  const [deletingTag, setDeletingTag] = useState(null);\n  const [confirmModalOpen, setConfirmModalOpen] = useState(false);\n  const [searchParam, setSearchParam] = useState(\"\");\n  const [tags, dispatch] = useReducer(reducer, []);\n  const [tagModalOpen, setTagModalOpen] = useState(false);\n\n  const fetchTags = useCallback(async () => {\n    try {\n      const { data } = await api.get(\"/tags/\", {\n        params: { searchParam, pageNumber },\n      });\n      dispatch({ type: \"LOAD_TAGS\", payload: data.tags });\n      setHasMore(data.hasMore);\n      setLoading(false);\n    } catch (err) {\n      toastError(err);\n    }\n  }, [searchParam, pageNumber]);\n\n  useEffect(() => {\n    dispatch({ type: \"RESET\" });\n    setPageNumber(1);\n  }, [searchParam]);\n\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      fetchTags();\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n  }, [searchParam, pageNumber, fetchTags]);\n\n  useEffect(() => {\n    const socket = socketConnection({ companyId: user.companyId });\n\n    socket.on(\"user\", (data) => {\n      if (data.action === \"update\" || data.action === \"create\") {\n        dispatch({ type: \"UPDATE_TAGS\", payload: data.tags });\n      }\n\n      if (data.action === \"delete\") {\n        dispatch({ type: \"DELETE_USER\", payload: +data.tagId });\n      }\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, [user]);\n\n  const handleOpenTagModal = () => {\n    setSelectedTag(null);\n    setTagModalOpen(true);\n  };\n\n  const handleCloseTagModal = () => {\n    setSelectedTag(null);\n    setTagModalOpen(false);\n  };\n\n  const handleSearch = (event) => {\n    setSearchParam(event.target.value.toLowerCase());\n  };\n\n  const handleEditTag = (tag) => {\n    setSelectedTag(tag);\n    setTagModalOpen(true);\n  };\n\n  const handleDeleteTag = async (tagId) => {\n    try {\n      await api.delete(`/tags/${tagId}`);\n      toast.success(i18n.t(\"tags.toasts.deleted\"));\n    } catch (err) {\n      toastError(err);\n    }\n    setDeletingTag(null);\n    setSearchParam(\"\");\n    setPageNumber(1);\n\n    dispatch({ type: \"RESET\" });\n    setPageNumber(1);\n    await fetchTags();\n  };\n\n  const loadMore = () => {\n    setPageNumber((prevState) => prevState + 1);\n  };\n\n  const handleScroll = (e) => {\n    if (!hasMore || loading) return;\n    const { scrollTop, scrollHeight, clientHeight } = e.currentTarget;\n    if (scrollHeight - (scrollTop + 100) < clientHeight) {\n      loadMore();\n    }\n  };\n\n  return (\n    <MainContainer>\n      <ConfirmationModal\n        title={deletingTag && `${i18n.t(\"tags.confirmationModal.deleteTitle\")}`}\n        open={confirmModalOpen}\n        onClose={setConfirmModalOpen}\n        onConfirm={() => handleDeleteTag(deletingTag.id)}\n      >\n        {i18n.t(\"tags.confirmationModal.deleteMessage\")}\n      </ConfirmationModal>\n      <TagModal\n        open={tagModalOpen}\n        onClose={handleCloseTagModal}\n        reload={fetchTags}\n        aria-labelledby=\"form-dialog-title\"\n        tagId={selectedTag && selectedTag.id}\n      />\n      <MainHeader>\n        <Title>{i18n.t(\"tags.title\")}</Title>\n        <MainHeaderButtonsWrapper>\n          <TextField\n            placeholder={i18n.t(\"contacts.searchPlaceholder\")}\n            type=\"search\"\n            value={searchParam}\n            onChange={handleSearch}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon style={{ color: \"gray\" }} />\n                </InputAdornment>\n              ),\n            }}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleOpenTagModal}\n          >\n            {i18n.t(\"tags.buttons.add\")}\n          </Button>\n        </MainHeaderButtonsWrapper>\n      </MainHeader>\n      <Paper\n        className={classes.mainPaper}\n        variant=\"outlined\"\n        onScroll={handleScroll}\n      >\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">\"ID\"</TableCell>\n              <TableCell align=\"center\">{i18n.t(\"tags.table.name\")}</TableCell>\n              <TableCell align=\"center\">\"Kanban\"</TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"tags.table.tickets\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"tags.table.actions\")}\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <>\n              {tags\n    \t\t\t.sort((a, b) => b.id - a.id) // Sort the tags array in descending order based on the id\n    \t\t\t.map((tag) => (\n                <TableRow key={tag.id}>\n                  <TableCell align=\"center\">{tag.id}</TableCell>\n                  <TableCell align=\"center\">\n                    <Chip\n                      variant=\"outlined\"\n                      style={{\n                        backgroundColor: tag.color,\n                        textShadow: \"1px 1px 1px #000\",\n                        color: \"white\",\n                      }}\n                      label={tag.name}\n                      size=\"small\"\n                    />\n                  </TableCell>\n\t\t\t\t  <TableCell align=\"center\">\n  \t\t\t\t\t{tag.kanban === 1 ? (\n    \t\t\t\t\t<CheckCircleIcon style={{ color: 'green' }} />\n  \t\t\t\t\t\t) : (\n    \t\t\t\t\t''\n  \t\t\t\t\t\t)}\n\t\t\t\t  </TableCell>\n\t\t\t\t  <TableCell align=\"center\">{tag.ticketsCount}</TableCell>\n                  <TableCell align=\"center\">\n                  <>\n                  {((user.profile === \"admin\" || user.profile === \"supervisor\")) && (\n                    <IconButton size=\"small\" onClick={() => handleEditTag(tag)}>\n                      <EditIcon />\n                    </IconButton>\n                    \n                  )}\n          \n                    \n                  {((user.profile === \"admin\" || user.profile === \"supervisor\")) && (\n\n                    <IconButton\n                      size=\"small\"\n                      onClick={(e) => {\n                        setConfirmModalOpen(true);\n                        setDeletingTag(tag);\n                      }}\n                    >\n                      <DeleteOutlineIcon />\n                    </IconButton>\n                    \n                    )}\n                    \n                 </>\n                 \n                  </TableCell>\n                </TableRow>\n              ))}\n              {loading && <TableRowSkeleton columns={4} />}\n            </>\n          </TableBody>\n        </Table>\n      </Paper>\n    </MainContainer>\n  );\n};\n\nexport default Tags;","import React, { useState, useEffect, useContext } from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { toast } from \"react-toastify\";\n\n\nimport axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport { i18n } from \"../../translate/i18n\";\nimport { Button, CircularProgress, Grid, TextField, Typography } from \"@material-ui/core\";\nimport { Field, Form, Formik } from \"formik\";\nimport toastError from \"../../errors/toastError\";\nimport api from \"../../services/api\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainPaper: {\n    flex: 1,\n    padding: theme.spacing(2),\n    paddingBottom: 100\n  },\n  mainHeader: {\n    marginTop: theme.spacing(1),\n  },\n  elementMargin: {\n    marginTop: theme.spacing(2),\n  },\n  formContainer: {\n    maxWidth: 500,\n  },\n  textRight: {\n    textAlign: \"right\"\n  }\n}));\n\nconst MessagesAPI = () => {\n  const classes = useStyles();\n\n  const history = useHistory();\n  const { user } = useContext(AuthContext);\n\n  const [formMessageTextData,] = useState({ token: '',number: '', body: '' })\n  const [formMessageMediaData,] = useState({ token: '', number: '', medias: '' })\n  const [file, setFile] = useState({})\n\n\n  // trava para nao acessar pagina que não pode  \n  useEffect(() => {\n    async function fetchData() {\n      if (user.profile !== \"admin\") {\n        toast.error(\"Acesso não permitido\");\n        setTimeout(() => {\n          history.push(`/`)\n        }, 100);\n      }\n    }\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const getEndpoint = () => {\n    return process.env.REACT_APP_BACKEND_URL + '/api/messages/send'\n  }\n\n  const handleSendTextMessage = async (values) => {\n    const { number, body } = values;\n    const data = { number, body };\n    var options = {\n      method: 'POST',\n      url: `${process.env.REACT_APP_BACKEND_URL}/api/messages/send`,\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${values.token}`\n      },\n      data\n    };\n    \n    axios.request(options).then(function (response) {\n      toast.success('Mensagem enviada com sucesso');\n    }).catch(function (error) {\n      toastError(error);\n    });    \n  }\n\n  const handleSendMediaMessage = async (values) => { \n    try {\n      const firstFile =  file[0];\n      const data = new FormData();\n      data.append('number', values.number);\n      data.append('body', firstFile.name);\n      data.append('medias', firstFile);\n      var options = {\n        method: 'POST',\n        url: `${process.env.REACT_APP_BACKEND_URL}/api/messages/send`,\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `Bearer ${values.token}`\n        },\n        data\n      };\n      \n      axios.request(options).then(function (response) {\n        toast.success('Mensagem enviada com sucesso');\n      }).catch(function (error) {\n        toastError(error);\n      });      \n    } catch (err) {\n      toastError(err);\n    }\n  }\n\n  const renderFormMessageText = () => {\n    return (\n      <Formik\n        initialValues={formMessageTextData}\n        enableReinitialize={true}\n        onSubmit={(values, actions) => {\n          setTimeout(async () => {\n            await handleSendTextMessage(values);\n            actions.setSubmitting(false);\n            actions.resetForm()\n          }, 400);\n        }}\n        className={classes.elementMargin}\n      >\n        {({ isSubmitting }) => (\n          <Form className={classes.formContainer}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} md={6}>\n                <Field\n                  as={TextField}\n                  label={i18n.t(\"messagesAPI.textMessage.token\")}\n                  name=\"token\"\n                  autoFocus\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  className={classes.textField}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Field\n                  as={TextField}\n                  label={i18n.t(\"messagesAPI.textMessage.number\")}\n                  name=\"number\"\n                  autoFocus\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  className={classes.textField}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <Field\n                  as={TextField}\n                  label={i18n.t(\"messagesAPI.textMessage.body\")}\n                  name=\"body\"\n                  autoFocus\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  className={classes.textField}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.textRight}>\n                <Button\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tclassName={classes.btnWrapper}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{isSubmitting ? (\n\t\t\t\t\t\t\t\t\t\t<CircularProgress\n\t\t\t\t\t\t\t\t\t\t\tsize={24}\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.buttonProgress}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t) : 'Enviar'}\n\t\t\t\t\t\t\t\t</Button>\n              </Grid>\n            </Grid>\n          </Form>\n        )}\n      </Formik>\n    )\n  }\n\n  const renderFormMessageMedia = () => {\n    return (\n      <Formik\n        initialValues={formMessageMediaData}\n        enableReinitialize={true}\n        onSubmit={(values, actions) => {\n          setTimeout(async () => {\n            console.log(values, file)\n            await handleSendMediaMessage(values);\n            actions.setSubmitting(false);\n            actions.resetForm()\n            document.getElementById('medias').files = null\n            document.getElementById('medias').value = null\n          }, 400);\n        }}\n        className={classes.elementMargin}\n      >\n        {({ isSubmitting }) => (\n          <Form className={classes.formContainer}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} md={6}>\n                <Field\n                  as={TextField}\n                  label={i18n.t(\"messagesAPI.mediaMessage.token\")}\n                  name=\"token\"\n                  autoFocus\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  className={classes.textField}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Field\n                  as={TextField}\n                  label={i18n.t(\"messagesAPI.mediaMessage.number\")}\n                  name=\"number\"\n                  autoFocus\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  className={classes.textField}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <input type=\"file\" name=\"medias\" id=\"medias\" required onChange={(e) => setFile(e.target.files)} />\n              </Grid>\n              <Grid item xs={12} className={classes.textRight}>\n                <Button\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tclassName={classes.btnWrapper}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{isSubmitting ? (\n\t\t\t\t\t\t\t\t\t\t<CircularProgress\n\t\t\t\t\t\t\t\t\t\t\tsize={24}\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.buttonProgress}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t) : 'Enviar'}\n\t\t\t\t\t\t\t\t</Button>\n              </Grid>\n            </Grid>\n          </Form>\n        )}\n      </Formik>\n    )\n  }\n\n  return (\n    <Paper\n      className={classes.mainPaper}\n      variant=\"outlined\"\n    >\n      <Typography variant=\"h5\">\n        Documentação para envio de mensagens\n      </Typography>\n      <Typography variant=\"h6\" color=\"primary\" className={classes.elementMargin}>\n        Métodos de Envio\n      </Typography>\n      <Typography component=\"div\">\n        <ol>\n          <li>Mensagens de Texto</li>\n          <li>Mensagens de Media</li>\n        </ol>\n      </Typography>\n      <Typography variant=\"h6\" color=\"primary\" className={classes.elementMargin}>\n        Instruções\n      </Typography>\n      <Typography className={classes.elementMargin} component=\"div\">\n        <b>Observações importantes</b><br />\n        <ul>\n          <li>Antes de enviar mensagens, é necessário o cadastro do token vinculado à conexão que enviará as mensagens. <br/>Para realizar o cadastro acesse o menu \"Conexões\", clique no botão editar da conexão e insira o token no devido campo.</li>\n          <li>\n            O número para envio não deve ter mascara ou caracteres especiais e deve ser composto por:\n              <ul>\n                <li>Código do país</li>\n                <li>DDD</li>\n                <li>Número</li>\n              </ul>\n          </li>\n        </ul>\n      </Typography>\n      <Typography variant=\"h6\" color=\"primary\" className={classes.elementMargin}>\n        1. Mensagens de Texto\n      </Typography>\n      <Grid container>\n        <Grid item xs={12} sm={6}>\n          <Typography className={classes.elementMargin} component=\"div\">\n            <p>Seguem abaixo a lista de informações necessárias para envio das mensagens de texto:</p>\n            <b>Endpoint: </b> {getEndpoint()} <br />\n            <b>Método: </b> POST <br />\n            <b>Headers: </b> X_TOKEN (token cadastrado) e Content-Type (application/json) <br />\n            <b>Body: </b> {\"{ \\\"number\\\": \\\"558599999999\\\", \\\"body\\\": \\\"Sua mensagem\\\" }\"}\n          </Typography>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Typography className={classes.elementMargin}>\n            <b>Teste de Envio</b>\n          </Typography>\n          {renderFormMessageText()}\n        </Grid>\n      </Grid>\n      <Typography variant=\"h6\" color=\"primary\" className={classes.elementMargin}>\n        2. Mensagens de Media\n      </Typography>\n      <Grid container>\n        <Grid item xs={12} sm={6}>\n          <Typography className={classes.elementMargin} component=\"div\">\n            <p>Seguem abaixo a lista de informações necessárias para envio das mensagens de texto:</p>\n            <b>Endpoint: </b> {getEndpoint()} <br />\n            <b>Método: </b> POST <br />\n            <b>Headers: </b> X_TOKEN (token cadastrado) e Content-Type (multipart/form-data) <br />\n            <b>FormData: </b> <br />\n            <ul>\n              <li>\n                <b>number: </b> 558599999999\n              </li>\n              <li>\n                <b>medias: </b> arquivo\n              </li>\n            </ul>\n          </Typography>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Typography className={classes.elementMargin}>\n            <b>Teste de Envio</b>\n          </Typography>\n          {renderFormMessageMedia()}\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default MessagesAPI;","import React, { useState, useEffect, } from \"react\";\n\n\nimport {\n\tmakeStyles,\n\tPaper\n} from \"@material-ui/core\";\n\nimport MainContainer from \"../../components/MainContainer\";\nimport MainHeader from \"../../components/MainHeader\";\nimport MainHeaderButtonsWrapper from \"../../components/MainHeaderButtonsWrapper\";\nimport Title from \"../../components/Title\";\nimport { i18n } from \"../../translate/i18n\";\nimport useHelps from \"../../hooks/useHelps\";\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst useStyles = makeStyles(theme => ({\n\tmainPaper: {\n\t\twidth: '100%',\n\t\tminHeight: '200px',\n\t\toverflowY: \"scroll\",\n\t\t...theme.scrollbarStyles,\n\t},\n\theading: {\n\t  fontSize: theme.typography.pxToRem(15),\n\t  flexBasis: '33.33%',\n\t  flexShrink: 0,\n\t},\n\tsecondaryHeading: {\n\t  fontSize: theme.typography.pxToRem(15),\n\t  color: theme.palette.text.secondary,\n\t}\n}));\n\nconst Helps = () => {\n\tconst classes = useStyles();\n\n\tconst [records, setRecords] = useState([]);\n\tconst { list } = useHelps()\n\n\n\t\n\n\tuseEffect(() => {\n\t\tasync function fetchData() {\n\t\t\tconst helps = await list()\n\t\t\tsetRecords(helps)\n\t\t}\n\t\tfetchData()\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [])\n\n\tconst renderVideo = (record) => {\n\t\tconst url = `https://www.youtube.com/embed/${record.video}`;\n\t\treturn (\n\t\t\t<iframe style={{ width: 700, height: 500 }} src={url} title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n\t\t)\n\t\t\t\n\t}\n\n\tconst renderHelps = () => {\n\t\treturn <>\n\t\t\t{ records.length ? records.map((record, key) => (\n\t\t\t\t<Accordion key={key}>\n\t\t\t\t\t<AccordionSummary\n\t\t\t\t\t\texpandIcon={<ExpandMoreIcon />}\n\t\t\t\t\t\taria-controls=\"panel1a-content\"\n\t\t\t\t\t\tid=\"panel1a-header\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Typography className={classes.heading}>{ record.title }</Typography>\n          \t\t\t\t<Typography className={classes.secondaryHeading}>{ record.description }</Typography>\n\t\t\t\t\t</AccordionSummary>\n\t\t\t\t\t<AccordionDetails>\n\t\t\t\t\t\t<Typography>{ renderVideo(record) }</Typography>\n\t\t\t\t\t</AccordionDetails>\n\t\t\t\t</Accordion>\n\t\t\t)) : null }\n\t\t</>\n\t}\n\n\treturn (\n\t\t<MainContainer>\n\t\t\t<MainHeader>\n\t\t\t\t<Title>{i18n.t(\"helps.title\")}</Title>\n\t\t\t\t<MainHeaderButtonsWrapper>\n\t\t\t\t</MainHeaderButtonsWrapper>\n\t\t\t</MainHeader>\n\t\t\t<Paper className={classes.mainPaper} variant=\"outlined\">\n\t\t\t\t{ renderHelps() }\n\t\t\t</Paper>\n\t\t</MainContainer>\n\t);\n};\n\n\n\nexport default Helps;\n","import React, { useState, useEffect } from \"react\";\n\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field } from \"formik\";\nimport { toast } from \"react-toastify\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport { i18n } from \"../../translate/i18n\";\n\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  multFieldLine: {\n    display: \"flex\",\n    \"& > *:not(:last-child)\": {\n      marginRight: theme.spacing(1),\n    },\n  },\n\n  btnWrapper: {\n    position: \"relative\",\n  },\n\n  buttonProgress: {\n    color: green[500],\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nconst ContactListSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n});\n\nconst ContactListModal = ({ open, onClose, contactListId }) => {\n  const classes = useStyles();\n\n  const initialState = {\n    name: \"\",\n  };\n\n  const [contactList, setContactList] = useState(initialState);\n\n  useEffect(() => {\n    const fetchContactList = async () => {\n      if (!contactListId) return;\n      try {\n        const { data } = await api.get(`/contact-lists/${contactListId}`);\n        setContactList((prevState) => {\n          return { ...prevState, ...data };\n        });\n      } catch (err) {\n        toastError(err);\n      }\n    };\n\n    fetchContactList();\n  }, [contactListId, open]);\n\n  const handleClose = () => {\n    onClose();\n    setContactList(initialState);\n  };\n\n  const handleSaveContactList = async (values) => {\n    const contactListData = { ...values };\n    try {\n      if (contactListId) {\n        await api.put(`/contact-lists/${contactListId}`, contactListData);\n      } else {\n        await api.post(\"/contact-lists\", contactListData);\n      }\n      toast.success(i18n.t(\"contactList.dialog\"));\n    } catch (err) {\n      toastError(err);\n    }\n    handleClose();\n  };\n\n  return (\n    <div className={classes.root}>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        maxWidth=\"xs\"\n        fullWidth\n        scroll=\"paper\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          {contactListId\n            ? `${i18n.t(\"contactLists.dialog.edit\")}`\n            : `${i18n.t(\"contactLists.dialog.add\")}`}\n        </DialogTitle>\n        <Formik\n          initialValues={contactList}\n          enableReinitialize={true}\n          validationSchema={ContactListSchema}\n          onSubmit={(values, actions) => {\n            setTimeout(() => {\n              handleSaveContactList(values);\n              actions.setSubmitting(false);\n            }, 400);\n          }}\n        >\n          {({ touched, errors, isSubmitting }) => (\n            <Form>\n              <DialogContent dividers>\n                <div className={classes.multFieldLine}>\n                  <Field\n                    as={TextField}\n                    label={i18n.t(\"contactLists.dialog.name\")}\n                    autoFocus\n                    name=\"name\"\n                    error={touched.name && Boolean(errors.name)}\n                    helperText={touched.name && errors.name}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                  />\n                </div>\n              </DialogContent>\n              <DialogActions>\n                <Button\n                  onClick={handleClose}\n                  color=\"secondary\"\n                  disabled={isSubmitting}\n                  variant=\"outlined\"\n                >\n                  {i18n.t(\"contactLists.dialog.cancel\")}\n                </Button>\n                <Button\n                  type=\"submit\"\n                  color=\"primary\"\n                  disabled={isSubmitting}\n                  variant=\"contained\"\n                  className={classes.btnWrapper}\n                >\n                  {contactListId\n                    ? `${i18n.t(\"contactLists.dialog.okEdit\")}`\n                    : `${i18n.t(\"contactLists.dialog.okAdd\")}`}\n                  {isSubmitting && (\n                    <CircularProgress\n                      size={24}\n                      className={classes.buttonProgress}\n                    />\n                  )}\n                </Button>\n              </DialogActions>\n            </Form>\n          )}\n        </Formik>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default ContactListModal;\n","import React, { useState, useEffect, useReducer } from \"react\";\nimport { toast } from \"react-toastify\";\n\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport DownloadIcon from \"@material-ui/icons/GetApp\";\n\nimport MainContainer from \"../../components/MainContainer\";\nimport MainHeader from \"../../components/MainHeader\";\nimport Title from \"../../components/Title\";\n\nimport api from \"../../services/api\";\nimport { i18n } from \"../../translate/i18n\";\nimport TableRowSkeleton from \"../../components/TableRowSkeleton\";\nimport ContactListDialog from \"../../components/ContactListDialog\";\nimport ConfirmationModal from \"../../components/ConfirmationModal\";\nimport toastError from \"../../errors/toastError\";\nimport { Grid } from \"@material-ui/core\";\n\nimport planilhaExemplo from \"../../assets/planilha.xlsx\";\nimport { socketConnection } from \"../../services/socket\";\n\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_CONTACTLISTS\") {\n    const contactLists = action.payload;\n    const newContactLists = [];\n\n    contactLists.forEach((contactList) => {\n      const contactListIndex = state.findIndex((u) => u.id === contactList.id);\n      if (contactListIndex !== -1) {\n        state[contactListIndex] = contactList;\n      } else {\n        newContactLists.push(contactList);\n      }\n    });\n\n    return [...state, ...newContactLists];\n  }\n\n  if (action.type === \"UPDATE_CONTACTLIST\") {\n    const contactList = action.payload;\n    const contactListIndex = state.findIndex((u) => u.id === contactList.id);\n\n    if (contactListIndex !== -1) {\n      state[contactListIndex] = contactList;\n      return [...state];\n    } else {\n      return [contactList, ...state];\n    }\n  }\n\n  if (action.type === \"DELETE_CONTACTLIST\") {\n    const contactListId = action.payload;\n\n    const contactListIndex = state.findIndex((u) => u.id === contactListId);\n    if (contactListIndex !== -1) {\n      state.splice(contactListIndex, 1);\n    }\n    return [...state];\n  }\n\n  if (action.type === \"RESET\") {\n    return [];\n  }\n};\n\nconst useStyles = makeStyles((theme) => ({\n  mainPaper: {\n    flex: 1,\n    padding: theme.spacing(1),\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n}));\n\nconst ContactLists = () => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [loading, setLoading] = useState(false);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [hasMore, setHasMore] = useState(false);\n  const [selectedContactList, setSelectedContactList] = useState(null);\n  const [deletingContactList, setDeletingContactList] = useState(null);\n  const [contactListModalOpen, setContactListModalOpen] = useState(false);\n  const [confirmModalOpen, setConfirmModalOpen] = useState(false);\n  const [searchParam, setSearchParam] = useState(\"\");\n  const [contactLists, dispatch] = useReducer(reducer, []);\n\n  useEffect(() => {\n    dispatch({ type: \"RESET\" });\n    setPageNumber(1);\n  }, [searchParam]);\n\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      const fetchContactLists = async () => {\n        try {\n          const { data } = await api.get(\"/contact-lists/\", {\n            params: { searchParam, pageNumber },\n          });\n          dispatch({ type: \"LOAD_CONTACTLISTS\", payload: data.records });\n          setHasMore(data.hasMore);\n          setLoading(false);\n        } catch (err) {\n          toastError(err);\n        }\n      };\n      fetchContactLists();\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n  }, [searchParam, pageNumber]);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketConnection({ companyId });\n\n    socket.on(`company-${companyId}-ContactList`, (data) => {\n      if (data.action === \"update\" || data.action === \"create\") {\n        dispatch({ type: \"UPDATE_CONTACTLIST\", payload: data.record });\n      }\n\n      if (data.action === \"delete\") {\n        dispatch({ type: \"DELETE_CONTACTLIST\", payload: +data.id });\n      }\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  const handleOpenContactListModal = () => {\n    setSelectedContactList(null);\n    setContactListModalOpen(true);\n  };\n\n  const handleCloseContactListModal = () => {\n    setSelectedContactList(null);\n    setContactListModalOpen(false);\n  };\n\n  const handleSearch = (event) => {\n    setSearchParam(event.target.value.toLowerCase());\n  };\n\n  const handleEditContactList = (contactList) => {\n    setSelectedContactList(contactList);\n    setContactListModalOpen(true);\n  };\n\n  const handleDeleteContactList = async (contactListId) => {\n    try {\n      await api.delete(`/contact-lists/${contactListId}`);\n      toast.success(i18n.t(\"contactLists.toasts.deleted\"));\n    } catch (err) {\n      toastError(err);\n    }\n    setDeletingContactList(null);\n    setSearchParam(\"\");\n    setPageNumber(1);\n  };\n\n  const loadMore = () => {\n    setPageNumber((prevState) => prevState + 1);\n  };\n\n  const handleScroll = (e) => {\n    if (!hasMore || loading) return;\n    const { scrollTop, scrollHeight, clientHeight } = e.currentTarget;\n    if (scrollHeight - (scrollTop + 100) < clientHeight) {\n      loadMore();\n    }\n  };\n\n  const goToContacts = (id) => {\n    history.push(`/contact-lists/${id}/contacts`);\n  };\n\n  return (\n    <MainContainer>\n      <ConfirmationModal\n        title={\n          deletingContactList &&\n          `${i18n.t(\"contactLists.confirmationModal.deleteTitle\")} ${\n            deletingContactList.name\n          }?`\n        }\n        open={confirmModalOpen}\n        onClose={setConfirmModalOpen}\n        onConfirm={() => handleDeleteContactList(deletingContactList.id)}\n      >\n        {i18n.t(\"contactLists.confirmationModal.deleteMessage\")}\n      </ConfirmationModal>\n      <ContactListDialog\n        open={contactListModalOpen}\n        onClose={handleCloseContactListModal}\n        aria-labelledby=\"form-dialog-title\"\n        contactListId={selectedContactList && selectedContactList.id}\n      />\n      <MainHeader>\n        <Grid style={{ width: \"99.6%\" }} container>\n          <Grid xs={12} sm={8} item>\n            <Title>{i18n.t(\"contactLists.title\")}</Title>\n          </Grid>\n          <Grid xs={12} sm={4} item>\n            <Grid spacing={2} container>\n              <Grid xs={7} sm={6} item>\n                <TextField\n                  fullWidth\n                  placeholder={i18n.t(\"contacts.searchPlaceholder\")}\n                  type=\"search\"\n                  value={searchParam}\n                  onChange={handleSearch}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <SearchIcon style={{ color: \"gray\" }} />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid xs={5} sm={6} item>\n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleOpenContactListModal}\n                >\n                  {i18n.t(\"contactLists.buttons.add\")}\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </MainHeader>\n      <Paper\n        className={classes.mainPaper}\n        variant=\"outlined\"\n        onScroll={handleScroll}\n      >\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">\n                {i18n.t(\"contactLists.table.name\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"contactLists.table.contacts\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"contactLists.table.actions\")}\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <>\n              {contactLists.map((contactList) => (\n                <TableRow key={contactList.id}>\n                  <TableCell align=\"center\">{contactList.name}</TableCell>\n                  <TableCell align=\"center\">\n                    {contactList.contactsCount || 0}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <a href={planilhaExemplo} download=\"planilha.xlsx\">\n                      <IconButton size=\"small\" title=\"Baixar Planilha Exemplo\">\n                        <DownloadIcon />\n                      </IconButton>\n                    </a>\n\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => goToContacts(contactList.id)}\n                    >\n                      <PeopleIcon />\n                    </IconButton>\n\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => handleEditContactList(contactList)}\n                    >\n                      <EditIcon />\n                    </IconButton>\n\n                    <IconButton\n                      size=\"small\"\n                      onClick={(e) => {\n                        setConfirmModalOpen(true);\n                        setDeletingContactList(contactList);\n                      }}\n                    >\n                      <DeleteOutlineIcon />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n              {loading && <TableRowSkeleton columns={3} />}\n            </>\n          </TableBody>\n        </Table>\n      </Paper>\n    </MainContainer>\n  );\n};\n\nexport default ContactLists;\n","import React, { useState, useEffect, useRef, useContext } from \"react\";\n\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field } from \"formik\";\nimport { toast } from \"react-toastify\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport { i18n } from \"../../translate/i18n\";\n\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\nimport { useParams } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  textField: {\n    marginRight: theme.spacing(1),\n    flex: 1,\n  },\n\n  extraAttr: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n\n  btnWrapper: {\n    position: \"relative\",\n  },\n\n  buttonProgress: {\n    color: green[500],\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n\nconst ContactSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n  number: Yup.string().min(8, \"Too Short!\").max(50, \"Too Long!\"),\n  email: Yup.string().email(\"Invalid email\"),\n});\n\nconst ContactListItemModal = ({\n  open,\n  onClose,\n  contactId,\n  initialValues,\n  onSave,\n}) => {\n  const classes = useStyles();\n  const isMounted = useRef(true);\n\n  const {\n    user: { companyId },\n  } = useContext(AuthContext);\n  const { contactListId } = useParams();\n\n  const initialState = {\n    name: \"\",\n    number: \"\",\n    email: \"\",\n  };\n\n  const [contact, setContact] = useState(initialState);\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    const fetchContact = async () => {\n      if (initialValues) {\n        setContact((prevState) => {\n          return { ...prevState, ...initialValues };\n        });\n      }\n\n      if (!contactId) return;\n\n      try {\n        const { data } = await api.get(`/contact-list-items/${contactId}`);\n        if (isMounted.current) {\n          setContact(data);\n        }\n      } catch (err) {\n        toastError(err);\n      }\n    };\n\n    fetchContact();\n  }, [contactId, open, initialValues]);\n\n  const handleClose = () => {\n    onClose();\n    setContact(initialState);\n  };\n\n  const handleSaveContact = async (values) => {\n    try {\n      if (contactId) {\n        await api.put(`/contact-list-items/${contactId}`, {\n          ...values,\n          companyId,\n          contactListId,\n        });\n        handleClose();\n      } else {\n        const { data } = await api.post(\"/contact-list-items\", {\n          ...values,\n          companyId,\n          contactListId,\n        });\n        if (onSave) {\n          onSave(data);\n        }\n        handleClose();\n      }\n      toast.success(i18n.t(\"contactModal.success\"));\n    } catch (err) {\n      toastError(err);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Dialog open={open} onClose={handleClose} maxWidth=\"lg\" scroll=\"paper\">\n        <DialogTitle id=\"form-dialog-title\">\n          {contactId\n            ? `${i18n.t(\"contactModal.title.edit\")}`\n            : `${i18n.t(\"contactModal.title.add\")}`}\n        </DialogTitle>\n        <Formik\n          initialValues={contact}\n          enableReinitialize={true}\n          validationSchema={ContactSchema}\n          onSubmit={(values, actions) => {\n            setTimeout(() => {\n              handleSaveContact(values);\n              actions.setSubmitting(false);\n            }, 400);\n          }}\n        >\n          {({ values, errors, touched, isSubmitting }) => (\n            <Form>\n              <DialogContent dividers>\n                <Typography variant=\"subtitle1\" gutterBottom>\n                  {i18n.t(\"contactModal.form.mainInfo\")}\n                </Typography>\n                <Field\n                  as={TextField}\n                  label={i18n.t(\"contactModal.form.name\")}\n                  name=\"name\"\n                  autoFocus\n                  error={touched.name && Boolean(errors.name)}\n                  helperText={touched.name && errors.name}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  className={classes.textField}\n                />\n                <Field\n                  as={TextField}\n                  label={i18n.t(\"contactModal.form.number\")}\n                  name=\"number\"\n                  error={touched.number && Boolean(errors.number)}\n                  helperText={touched.number && errors.number}\n                  placeholder=\"5513912344321\"\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                />\n                <div>\n                  <Field\n                    as={TextField}\n                    label={i18n.t(\"contactModal.form.email\")}\n                    name=\"email\"\n                    error={touched.email && Boolean(errors.email)}\n                    helperText={touched.email && errors.email}\n                    placeholder=\"Email address\"\n                    fullWidth\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                  />\n                </div>\n              </DialogContent>\n              <DialogActions>\n                <Button\n                  onClick={handleClose}\n                  color=\"secondary\"\n                  disabled={isSubmitting}\n                  variant=\"outlined\"\n                >\n                  {i18n.t(\"contactModal.buttons.cancel\")}\n                </Button>\n                <Button\n                  type=\"submit\"\n                  color=\"primary\"\n                  disabled={isSubmitting}\n                  variant=\"contained\"\n                  className={classes.btnWrapper}\n                >\n                  {contactId\n                    ? `${i18n.t(\"contactModal.buttons.okEdit\")}`\n                    : `${i18n.t(\"contactModal.buttons.okAdd\")}`}\n                  {isSubmitting && (\n                    <CircularProgress\n                      size={24}\n                      className={classes.buttonProgress}\n                    />\n                  )}\n                </Button>\n              </DialogActions>\n            </Form>\n          )}\n        </Formik>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default ContactListItemModal;\n","import api from \"../../services/api\";\n\nconst useContactLists = () => {\n  const save = async (data) => {\n    const { data: responseData } = await api.request({\n      url: \"/contact-lists\",\n      method: \"POST\",\n      data,\n    });\n    return responseData;\n  };\n\n  const update = async (data) => {\n    const { data: responseData } = await api.request({\n      url: `/contact-lists/${data.id}`,\n      method: \"PUT\",\n      data,\n    });\n    return responseData;\n  };\n\n  const deleteRecord = async (id) => {\n    const { data } = await api.request({\n      url: `/contact-lists/${id}`,\n      method: \"DELETE\",\n    });\n    return data;\n  };\n\n  const findById = async (id) => {\n    const { data } = await api.request({\n      url: `/contact-lists/${id}`,\n      method: \"GET\",\n    });\n    return data;\n  };\n\n  const list = async (params) => {\n    const { data } = await api.request({\n      url: \"/contact-lists/list\",\n      method: \"GET\",\n      params,\n    });\n    return data;\n  };\n\n  return {\n    findById,\n    save,\n    update,\n    deleteRecord,\n    list,\n  };\n};\n\nexport default useContactLists;\n","import React, {\n  useState,\n  useEffect,\n  useReducer,\n  useContext,\n  useRef,\n} from \"react\";\n\nimport { toast } from \"react-toastify\";\nimport { useParams, useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport BlockIcon from \"@material-ui/icons/Block\";\n\nimport api from \"../../services/api\";\nimport TableRowSkeleton from \"../../components/TableRowSkeleton\";\nimport ContactListItemModal from \"../../components/ContactListItemModal\";\nimport ConfirmationModal from \"../../components/ConfirmationModal/\";\n\nimport { i18n } from \"../../translate/i18n\";\nimport MainHeader from \"../../components/MainHeader\";\nimport Title from \"../../components/Title\";\nimport MainContainer from \"../../components/MainContainer\";\nimport toastError from \"../../errors/toastError\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { Can } from \"../../components/Can\";\nimport useContactLists from \"../../hooks/useContactLists\";\nimport { Grid } from \"@material-ui/core\";\n\nimport planilhaExemplo from \"../../assets/planilha.xlsx\";\nimport { socketConnection } from \"../../services/socket\";\n\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_CONTACTS\") {\n    const contacts = action.payload;\n    const newContacts = [];\n\n    contacts.forEach((contact) => {\n      const contactIndex = state.findIndex((c) => c.id === contact.id);\n      if (contactIndex !== -1) {\n        state[contactIndex] = contact;\n      } else {\n        newContacts.push(contact);\n      }\n    });\n\n    return [...state, ...newContacts];\n  }\n\n  if (action.type === \"UPDATE_CONTACTS\") {\n    const contact = action.payload;\n    const contactIndex = state.findIndex((c) => c.id === contact.id);\n\n    if (contactIndex !== -1) {\n      state[contactIndex] = contact;\n      return [...state];\n    } else {\n      return [contact, ...state];\n    }\n  }\n\n  if (action.type === \"DELETE_CONTACT\") {\n    const contactId = action.payload;\n\n    const contactIndex = state.findIndex((c) => c.id === contactId);\n    if (contactIndex !== -1) {\n      state.splice(contactIndex, 1);\n    }\n    return [...state];\n  }\n\n  if (action.type === \"RESET\") {\n    return [];\n  }\n};\n\nconst useStyles = makeStyles((theme) => ({\n  mainPaper: {\n    flex: 1,\n    padding: theme.spacing(1),\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n}));\n\nconst ContactListItems = () => {\n  const classes = useStyles();\n\n  const { user } = useContext(AuthContext);\n  const { contactListId } = useParams();\n  const history = useHistory();\n\n  const [loading, setLoading] = useState(false);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [searchParam, setSearchParam] = useState(\"\");\n  const [contacts, dispatch] = useReducer(reducer, []);\n  const [selectedContactId, setSelectedContactId] = useState(null);\n  const [contactListItemModalOpen, setContactListItemModalOpen] =\n    useState(false);\n  const [deletingContact, setDeletingContact] = useState(null);\n  const [confirmOpen, setConfirmOpen] = useState(false);\n  const [hasMore, setHasMore] = useState(false);\n  const [contactList, setContactList] = useState({});\n  const fileUploadRef = useRef(null);\n\n  const { findById: findContactList } = useContactLists();\n\n  useEffect(() => {\n    findContactList(contactListId).then((data) => {\n      setContactList(data);\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [contactListId]);\n\n  useEffect(() => {\n    dispatch({ type: \"RESET\" });\n    setPageNumber(1);\n  }, [searchParam]);\n\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      const fetchContacts = async () => {\n        try {\n          const { data } = await api.get(`contact-list-items`, {\n            params: { searchParam, pageNumber, contactListId },\n          });\n          dispatch({ type: \"LOAD_CONTACTS\", payload: data.contacts });\n          setHasMore(data.hasMore);\n          setLoading(false);\n        } catch (err) {\n          toastError(err);\n        }\n      };\n      fetchContacts();\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n  }, [searchParam, pageNumber, contactListId]);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketConnection({ companyId });\n\n    socket.on(`company-${companyId}-ContactListItem`, (data) => {\n      if (data.action === \"update\" || data.action === \"create\") {\n        dispatch({ type: \"UPDATE_CONTACTS\", payload: data.record });\n      }\n\n      if (data.action === \"delete\") {\n        dispatch({ type: \"DELETE_CONTACT\", payload: +data.id });\n      }\n\n      if (data.action === \"reload\") {\n        dispatch({ type: \"LOAD_CONTACTS\", payload: data.records });\n      }\n    });\n\n    socket.on(\n      `company-${companyId}-ContactListItem-${contactListId}`,\n      (data) => {\n        if (data.action === \"reload\") {\n          dispatch({ type: \"LOAD_CONTACTS\", payload: data.records });\n        }\n      }\n    );\n\n    return () => {\n      socket.disconnect();\n    };\n  }, [contactListId]);\n\n  const handleSearch = (event) => {\n    setSearchParam(event.target.value.toLowerCase());\n  };\n\n  const handleOpenContactListItemModal = () => {\n    setSelectedContactId(null);\n    setContactListItemModalOpen(true);\n  };\n\n  const handleCloseContactListItemModal = () => {\n    setSelectedContactId(null);\n    setContactListItemModalOpen(false);\n  };\n\n  const hadleEditContact = (contactId) => {\n    setSelectedContactId(contactId);\n    setContactListItemModalOpen(true);\n  };\n\n  const handleDeleteContact = async (contactId) => {\n    try {\n      await api.delete(`/contact-list-items/${contactId}`);\n      toast.success(i18n.t(\"contacts.toasts.deleted\"));\n    } catch (err) {\n      toastError(err);\n    }\n    setDeletingContact(null);\n    setSearchParam(\"\");\n    setPageNumber(1);\n  };\n\n  const handleImportContacts = async () => {\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", fileUploadRef.current.files[0]);\n      await api.request({\n        url: `contact-lists/${contactListId}/upload`,\n        method: \"POST\",\n        data: formData,\n      });\n    } catch (err) {\n      toastError(err);\n    }\n  };\n\n  const loadMore = () => {\n    setPageNumber((prevState) => prevState + 1);\n  };\n\n  const handleScroll = (e) => {\n    if (!hasMore || loading) return;\n    const { scrollTop, scrollHeight, clientHeight } = e.currentTarget;\n    if (scrollHeight - (scrollTop + 100) < clientHeight) {\n      loadMore();\n    }\n  };\n\n  const goToContactLists = () => {\n    history.push(\"/contact-lists\");\n  };\n\n  return (\n    <MainContainer className={classes.mainContainer}>\n      <ContactListItemModal\n        open={contactListItemModalOpen}\n        onClose={handleCloseContactListItemModal}\n        aria-labelledby=\"form-dialog-title\"\n        contactId={selectedContactId}\n      ></ContactListItemModal>\n      <ConfirmationModal\n        title={\n          deletingContact\n            ? `${i18n.t(\"contactListItems.confirmationModal.deleteTitle\")} ${\n                deletingContact.name\n              }?`\n            : `${i18n.t(\"contactListItems.confirmationModal.importTitlte\")}`\n        }\n        open={confirmOpen}\n        onClose={setConfirmOpen}\n        onConfirm={() =>\n          deletingContact\n            ? handleDeleteContact(deletingContact.id)\n            : handleImportContacts()\n        }\n      >\n        {deletingContact ? (\n          `${i18n.t(\"contactListItems.confirmationModal.deleteMessage\")}`\n        ) : (\n          <>\n            {i18n.t(\"contactListItems.confirmationModal.importMessage\")}\n            <a href={planilhaExemplo} download=\"planilha.xlsx\">\n              Clique aqui para baixar planilha exemplo.\n            </a>\n          </>\n        )}\n      </ConfirmationModal>\n      <MainHeader>\n        <Grid style={{ width: \"99.6%\" }} container>\n          <Grid xs={12} sm={5} item>\n            <Title>{contactList.name}</Title>\n          </Grid>\n          <Grid xs={12} sm={7} item>\n            <Grid spacing={2} container>\n              <Grid xs={12} sm={6} item>\n                <TextField\n                  fullWidth\n                  placeholder={i18n.t(\"contactListItems.searchPlaceholder\")}\n                  type=\"search\"\n                  value={searchParam}\n                  onChange={handleSearch}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <SearchIcon style={{ color: \"gray\" }} />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid xs={4} sm={2} item>\n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={goToContactLists}\n                >\n                  {i18n.t(\"contactListItems.buttons.lists\")}\n                </Button>\n              </Grid>\n              <Grid xs={4} sm={2} item>\n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => {\n                    fileUploadRef.current.value = null;\n                    fileUploadRef.current.click();\n                  }}\n                >\n                  {i18n.t(\"contactListItems.buttons.import\")}\n                </Button>\n              </Grid>\n              <Grid xs={4} sm={2} item>\n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleOpenContactListItemModal}\n                >\n                  {i18n.t(\"contactListItems.buttons.add\")}\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </MainHeader>\n      <Paper\n        className={classes.mainPaper}\n        variant=\"outlined\"\n        onScroll={handleScroll}\n      >\n        <>\n          <input\n            style={{ display: \"none\" }}\n            id=\"upload\"\n            name=\"file\"\n            type=\"file\"\n            accept=\".xls,.xlsx\"\n            onChange={() => {\n              setConfirmOpen(true);\n            }}\n            ref={fileUploadRef}\n          />\n        </>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\" style={{ width: \"0%\" }}>\n                #\n              </TableCell>\n              <TableCell>{i18n.t(\"contactListItems.table.name\")}</TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"contactListItems.table.number\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"contactListItems.table.email\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"contactListItems.table.actions\")}\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <>\n              {contacts.map((contact) => (\n                <TableRow key={contact.id}>\n                  <TableCell align=\"center\" style={{ width: \"0%\" }}>\n                    <IconButton>\n                      {contact.isWhatsappValid ? (\n                        <CheckCircleIcon\n                          titleAccess=\"Whatsapp Válido\"\n                          htmlColor=\"green\"\n                        />\n                      ) : (\n                        <BlockIcon\n                          titleAccess=\"Whatsapp Inválido\"\n                          htmlColor=\"grey\"\n                        />\n                      )}\n                    </IconButton>\n                  </TableCell>\n                  <TableCell>{contact.name}</TableCell>\n                  <TableCell align=\"center\">{contact.number}</TableCell>\n                  <TableCell align=\"center\">{contact.email}</TableCell>\n                  <TableCell align=\"center\">\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => hadleEditContact(contact.id)}\n                    >\n                      <EditIcon />\n                    </IconButton>\n                    <Can\n                      role={user.profile}\n                      perform=\"contacts-page:deleteContact\"\n                      yes={() => (\n                        <IconButton\n                          size=\"small\"\n                          onClick={() => {\n                            setConfirmOpen(true);\n                            setDeletingContact(contact);\n                          }}\n                        >\n                          <DeleteOutlineIcon />\n                        </IconButton>\n                      )}\n                    />\n                  </TableCell>\n                </TableRow>\n              ))}\n              {loading && <TableRowSkeleton columns={4} />}\n            </>\n          </TableBody>\n        </Table>\n      </Paper>\n    </MainContainer>\n  );\n};\n\nexport default ContactListItems;\n","import React, { useContext, useState, useEffect, useRef } from \"react\";\n\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field } from \"formik\";\nimport { toast } from \"react-toastify\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport AttachFileIcon from \"@material-ui/icons/AttachFile\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { i18n } from \"../../translate/i18n\";\nimport { head } from \"lodash\";\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\n\nimport {\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\nimport ConfirmationModal from \"../ConfirmationModal\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  multFieldLine: {\n    display: \"flex\",\n    \"& > *:not(:last-child)\": {\n      marginRight: theme.spacing(1),\n    },\n  },\n\n  btnWrapper: {\n    position: \"relative\",\n  },\n\n  buttonProgress: {\n    color: green[500],\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  colorAdorment: {\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst QuickeMessageSchema = Yup.object().shape({\n  shortcode: Yup.string().required(\"Obrigatório\"),\n  message: Yup.string().required(\"Obrigatório\"),\n});\n\nconst QuickMessageDialog = ({ open, onClose, quickemessageId, reload }) => {\n  const classes = useStyles();\n  const { user } = useContext(AuthContext);\n  const { profile } = user;\n  const initialState = {\n    shortcode: \"\",\n    message: \"\",\n    geral: false,\n    status: true,\n  };\n\n  const [confirmationOpen, setConfirmationOpen] = useState(false);\n  const [quickemessage, setQuickemessage] = useState(initialState);\n  const [attachment, setAttachment] = useState(null);\n  const attachmentFile = useRef(null);\n\n  \n\n  useEffect(() => {\n    try {\n      (async () => {\n        if (!quickemessageId) return;\n\n        const { data } = await api.get(`/quick-messages/${quickemessageId}`);\n        setQuickemessage((prevState) => {\n          return { ...prevState, ...data };\n        });\n      })();\n    } catch (err) {\n      toastError(err);\n    }\n  }, [quickemessageId, open]);\n\n  const handleClose = () => {\n    setQuickemessage(initialState);\n    setAttachment(null);\n    onClose();\n  };\n\n  const handleAttachmentFile = (e) => {\n    const file = head(e.target.files);\n    if (file) {\n      setAttachment(file);\n    }\n  };\n\n  const handleSaveQuickeMessage = async (values) => {\n    const quickemessageData = { ...values };\n    try {\n      if (quickemessageId) {\n        await api.put(`/quick-messages/${quickemessageId}`, quickemessageData);\n        if (attachment != null) {\n          const formData = new FormData();\n          formData.append(\"file\", attachment);\n          await api.post(\n            `/quick-messages/${quickemessageId}/media-upload`,\n            formData\n          );\n        }\n      } else {\n        const { data } = await api.post(\"/quick-messages\", quickemessageData);\n        if (attachment != null) {\n          const formData = new FormData();\n          formData.append(\"file\", attachment);\n          await api.post(`/quick-messages/${data.id}/media-upload`, formData);\n        }\n      }\n      toast.success(i18n.t(\"quickemessage.toasts.success\"));\n      if (typeof reload == \"function\") {\n        console.log(reload);\n        console.log(\"0\");\n        reload();\n      }\n    } catch (err) {\n      toastError(err);\n    }\n    handleClose();\n  };\n\n  const deleteMedia = async () => {\n    if (attachment) {\n      setAttachment(null);\n      attachmentFile.current.value = null;\n    }\n\n    if (quickemessage.mediaPath) {\n      await api.delete(`/quick-messages/${quickemessage.id}/media-upload`);\n      setQuickemessage((prev) => ({\n        ...prev,\n        mediaPath: null,\n      }));\n      toast.success(i18n.t(\"quickemessage.toasts.deleted\"));\n      if (typeof reload == \"function\") {\n        console.log(reload);\n        console.log(\"1\");\n        reload();\n      }\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <ConfirmationModal\n        title={i18n.t(\"quickemessage.confirmationModal.deleteTitle\")}\n        open={confirmationOpen}\n        onClose={() => setConfirmationOpen(false)}\n        onConfirm={deleteMedia}\n      >\n        {i18n.t(\"quickemessage.confirmationModal.deleteMessage\")}\n      </ConfirmationModal>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        maxWidth=\"xs\"\n        fullWidth\n        scroll=\"paper\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          {quickemessageId\n            ? `${i18n.t(\"quickemessage.dialog.edit\")}`\n            : `${i18n.t(\"quickemessage.dialog.add\")}`}\n        </DialogTitle>\n        <div style={{ display: \"none\" }}>\n          <input\n            type=\"file\"\n            accept=\".png,.jpg,.jpeg\"\n            ref={attachmentFile}\n            onChange={(e) => handleAttachmentFile(e)}\n          />\n        </div>\n        <Formik\n          initialValues={quickemessage}\n          enableReinitialize={true}\n          validationSchema={QuickeMessageSchema}\n          onSubmit={(values, actions) => {\n            setTimeout(() => {\n              handleSaveQuickeMessage(values);\n              actions.setSubmitting(false);\n            }, 400);\n          }}\n        >\n          {({ touched, errors, isSubmitting, values }) => (\n            <Form>\n              <DialogContent dividers>\n                <Grid spacing={2} container>\n                  <Grid xs={12} item>\n                    <Field\n                      as={TextField}\n                      label={i18n.t(\"quickemessage.dialog.form.shortcode\")}\n                      name=\"shortcode\"\n                      error={touched.shortcode && Boolean(errors.shortcode)}\n                      helperText={touched.shortcode && errors.shortcode}\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid xs={12} item>\n                    <Field\n                      as={TextField}\n                      label={i18n.t(\"quickemessage.dialog.form.message\")}\n                      name=\"message\"\n                      error={touched.message && Boolean(errors.message)}\n                      helperText={touched.message && errors.message}\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      multiline={true}\n                      rows={7}\n                      fullWidth\n                      disabled={quickemessage.mediaPath || attachment ? true : false}\n                    />\n                  </Grid>\n                  {(profile === \"admin\" || profile === \"supervisor\") && (\n                  <Grid xs={12} item>\n                    <FormControl variant=\"outlined\" margin=\"dense\" fullWidth>\n                      <InputLabel id=\"geral-selection-label\">\n                        {i18n.t(\"quickemessage.dialog.form.geral\")}\n                      </InputLabel>\n                      <Field\n                        as={Select}\n                        label={i18n.t(\"quickemessage.dialog.form.geral\")}\n                        placeholder={i18n.t(\"quickemessage.dialog.form.geral\")}\n                        labelId=\"geral-selection-label\"\n                        id=\"geral\"\n                        name=\"geral\"\n                        error={touched.geral && Boolean(errors.geral)}\n                      >\n                        <MenuItem value={true}>Ativo</MenuItem>\n                        <MenuItem value={false}>Inativo</MenuItem>\n                      </Field>\n                    </FormControl>\n                  </Grid>\n                  )}\n                  {(quickemessage.mediaPath || attachment) && (\n                    <Grid xs={12} item>\n                      <Button startIcon={<AttachFileIcon />}>\n                        {attachment ? attachment.name : quickemessage.mediaName}\n                      </Button>\n                      <IconButton\n                        onClick={() => setConfirmationOpen(true)}\n                        color=\"secondary\"\n                      >\n                        <DeleteOutlineIcon color=\"secondary\" />\n                      </IconButton>\n                    </Grid>\n                  )}\n                </Grid>\n              </DialogContent>\n              <DialogActions>\n                {!attachment && !quickemessage.mediaPath && (\n                  <Button\n                    color=\"primary\"\n                    onClick={() => attachmentFile.current.click()}\n                    disabled={isSubmitting}\n                    variant=\"outlined\"\n                  >\n                    {i18n.t(\"quickemessage.dialog.buttons.attach\")}\n                  </Button>\n                )}\n                <Button\n                  onClick={handleClose}\n                  color=\"secondary\"\n                  disabled={isSubmitting}\n                  variant=\"outlined\"\n                >\n                  {i18n.t(\"quickemessage.dialog.buttons.cancel\")}\n                </Button>\n                <Button\n                  type=\"submit\"\n                  color=\"primary\"\n                  disabled={isSubmitting}\n                  variant=\"contained\"\n                  className={classes.btnWrapper}\n                >\n                  {quickemessageId\n                    ? `${i18n.t(\"quickemessage.dialog.buttons.edit\")}`\n                    : `${i18n.t(\"quickemessage.dialog.buttons.add\")}`}\n                  {isSubmitting && (\n                    <CircularProgress\n                      size={24}\n                      className={classes.buttonProgress}\n                    />\n                  )}\n                </Button>\n              </DialogActions>\n            </Form>\n          )}\n        </Formik>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default QuickMessageDialog;","import React, { useState, useEffect, useReducer, useContext, useCallback  } from \"react\";\nimport { toast } from \"react-toastify\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\n\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nimport MainContainer from \"../../components/MainContainer\";\nimport MainHeader from \"../../components/MainHeader\";\nimport Title from \"../../components/Title\";\n\nimport api from \"../../services/api\";\nimport { i18n } from \"../../translate/i18n\";\nimport TableRowSkeleton from \"../../components/TableRowSkeleton\";\nimport QuickMessageDialog from \"../../components/QuickMessageDialog\";\nimport ConfirmationModal from \"../../components/ConfirmationModal\";\nimport toastError from \"../../errors/toastError\";\nimport { Grid } from \"@material-ui/core\";\nimport { isArray } from \"lodash\";\nimport { socketConnection } from \"../../services/socket\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\n\n\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_QUICKMESSAGES\") {\n    //console.log(\"aqui\");\n    //console.log(action);\n    //console.log(action.payload);\n    const quickmessages = action.payload;\n    const newQuickmessages = [];\n    //console.log(newQuickmessages);\n\n    if (isArray(quickmessages)) {\n      quickmessages.forEach((quickemessage) => {\n        const quickemessageIndex = state.findIndex(\n          (u) => u.id === quickemessage.id\n        );\n        if (quickemessageIndex !== -1) {\n          state[quickemessageIndex] = quickemessage;\n        } else {\n          newQuickmessages.push(quickemessage);\n        }\n      });\n    }\n\n    return [...state, ...newQuickmessages];\n  }\n\n  if (action.type === \"UPDATE_QUICKMESSAGES\") {\n    const quickemessage = action.payload;\n    const quickemessageIndex = state.findIndex((u) => u.id === quickemessage.id);\n\n    if (quickemessageIndex !== -1) {\n      state[quickemessageIndex] = quickemessage;\n      return [...state];\n    } else {\n      return [quickemessage, ...state];\n    }\n  }\n\n  if (action.type === \"DELETE_QUICKMESSAGE\") {\n    const quickemessageId = action.payload;\n\n    const quickemessageIndex = state.findIndex((u) => u.id === quickemessageId);\n    if (quickemessageIndex !== -1) {\n      state.splice(quickemessageIndex, 1);\n    }\n    return [...state];\n  }\n\n  if (action.type === \"RESET\") {\n    return [];\n  }\n};\n\nconst useStyles = makeStyles((theme) => ({\n  mainPaper: {\n    flex: 1,\n    padding: theme.spacing(1),\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n}));\n\nconst Quickemessages = () => {\n  const classes = useStyles();\n\n  const [loading, setLoading] = useState(false);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [hasMore, setHasMore] = useState(false);\n  const [selectedQuickemessage, setSelectedQuickemessage] = useState(null);\n  const [deletingQuickemessage, setDeletingQuickemessage] = useState(null);\n  const [quickemessageModalOpen, setQuickMessageDialogOpen] = useState(false);\n  const [confirmModalOpen, setConfirmModalOpen] = useState(false);\n  const [searchParam, setSearchParam] = useState(\"\");\n  const [quickemessages, dispatch] = useReducer(reducer, []);\n  const { user } = useContext(AuthContext);\n  const { profile } = user;\n\n  useEffect(() => {\n    dispatch({ type: \"RESET\" });\n    setPageNumber(1);\n  }, [searchParam]);\n\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      fetchQuickemessages();\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchParam, pageNumber]);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketConnection({ companyId });\n\n    socket.on(`company-quickemessage`, (data) => {\n      if (data.action === \"update\" || data.action === \"create\") {\n        dispatch({ type: \"UPDATE_QUICKMESSAGES\", payload: data.record });\n      }\n      if (data.action === \"delete\") {\n        dispatch({ type: \"DELETE_QUICKMESSAGE\", payload: +data.id });\n      }\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  const fetchQuickemessages = async () => {\n    try {\n      const companyId = localStorage.getItem(\"companyId\");\n      //const searchParam = ({ companyId, userId: user.id });\n      const { data } = await api.get(\"/quick-messages/list\", {\n        params: { companyId, userId: user.id },\n      });\n      //console.log(data);\n      dispatch({ type: \"LOAD_QUICKMESSAGES\", payload: data });\n      setHasMore(data.hasMore);\n      setLoading(false);\n    } catch (err) {\n      toastError(err);\n    }\n  };\n\n  const handleOpenQuickMessageDialog = () => {\n    setSelectedQuickemessage(null);\n    setQuickMessageDialogOpen(true);\n  };\n\n  const handleCloseQuickMessageDialog = () => {\n    setSelectedQuickemessage(null);\n    setQuickMessageDialogOpen(false);\n  \t//window.location.reload();\n    fetchQuickemessages();\n  };\n\n  const handleSearch = (event) => {\n    setSearchParam(event.target.value.toLowerCase());\n  };\n\n  const handleEditQuickemessage = (quickemessage) => {\n    //console.log(quickemessage);\n    setSelectedQuickemessage(quickemessage);\n    setQuickMessageDialogOpen(true);\n  };\n\n  const handleDeleteQuickemessage = async (quickemessageId) => {\n    try {\n      await api.delete(`/quick-messages/${quickemessageId}`);\n      toast.success(i18n.t(\"quickemessages.toasts.deleted\"));\n    } catch (err) {\n      toastError(err);\n    }\n    setDeletingQuickemessage(null);\n    setSearchParam(\"\");\n    setPageNumber(1);\n    fetchQuickemessages();\n    dispatch({ type: \"RESET\" });\n        \n  };\n\n  const loadMore = () => {\n    setPageNumber((prevState) => prevState + 1);\n  };\n\n  const handleScroll = (e) => {\n    if (!hasMore || loading) return;\n    const { scrollTop, scrollHeight, clientHeight } = e.currentTarget;\n    if (scrollHeight - (scrollTop + 100) < clientHeight) {\n      loadMore();\n    }\n  };\n\n  return (\n    <MainContainer>\n      <ConfirmationModal\n        title={deletingQuickemessage && `${i18n.t(\"quickemessages.confirmationModal.deleteTitle\")} ${deletingQuickemessage.shortcode}?`}\n        open={confirmModalOpen}\n        onClose={setConfirmModalOpen}\n        onConfirm={() => handleDeleteQuickemessage(deletingQuickemessage.id)}\n      >\n        {i18n.t(\"quickemessages.confirmationModal.deleteMessage\")}\n      </ConfirmationModal>\n      <QuickMessageDialog\n        resetPagination={() => {\n          setPageNumber(1);\n          fetchQuickemessages();\n        }}\n        open={quickemessageModalOpen}\n        onClose={handleCloseQuickMessageDialog}\n        aria-labelledby=\"form-dialog-title\"\n        quickemessageId={selectedQuickemessage && selectedQuickemessage.id}\n      />\n      <MainHeader>\n        <Grid style={{ width: \"99.6%\" }} container>\n          <Grid xs={12} sm={8} item>\n            <Title>{i18n.t(\"quickemessages.title\")}</Title>\n          </Grid>\n          <Grid xs={12} sm={4} item>\n            <Grid spacing={2} container>\n              <Grid xs={6} sm={6} item>\n                <TextField\n                  fullWidth\n                  placeholder={i18n.t(\"quickemessages.searchPlaceholder\")}\n                  type=\"search\"\n                  value={searchParam}\n                  onChange={handleSearch}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <SearchIcon style={{ color: \"gray\" }} />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid xs={6} sm={6} item>\n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  onClick={handleOpenQuickMessageDialog}\n                  color=\"primary\"\n                >\n                  {i18n.t(\"quickemessages.buttons.add\")}\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </MainHeader>\n      <Paper\n        className={classes.mainPaper}\n        variant=\"outlined\"\n        onScroll={handleScroll}\n      >\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">\n                {i18n.t(\"quickemessages.table.shortcode\")}\n              </TableCell>\n              \n              <TableCell align=\"center\">\n                {i18n.t(\"quickemessages.table.mediaName\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"quickemessages.table.status\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"quickemessages.table.actions\")}\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <>\n              {quickemessages.map((quickemessage) => (\n                <TableRow key={quickemessage.id}>\n                  <TableCell align=\"center\">{quickemessage.shortcode}</TableCell>\n                  \n                  <TableCell align=\"center\">\n                    {quickemessage.mediaName ?? \"Sem anexo\"}\n                  </TableCell>\n                  <TableCell align=\"center\">\n  \t\t\t\t\t{quickemessage.geral === true ? (\n    \t\t\t\t\t<CheckCircleIcon style={{ color: 'green' }} />\n  \t\t\t\t\t\t) : (\n    \t\t\t\t\t''\n  \t\t\t\t\t\t)}\n\t\t\t\t  </TableCell>\n                  <TableCell align=\"center\">\n{(profile === \"admin\" || profile === \"supervisor\" ||\n  (profile === \"user\" && !quickemessage.geral)) && (\n  <IconButton\n    size=\"small\"\n    onClick={() => handleEditQuickemessage(quickemessage)}\n  >\n    <EditIcon />\n  </IconButton>\n)}\n\n{(profile === \"admin\" || profile === \"supervisor\" ||\n  (profile === \"user\" && !quickemessage.geral)) && (\n  <IconButton\n    size=\"small\"\n    onClick={(e) => {\n      setConfirmModalOpen(true);\n      setDeletingQuickemessage(quickemessage);\n    }}\n  >\n    <DeleteOutlineIcon />\n  </IconButton>\n)}\n                  </TableCell>\n                </TableRow>\n              ))}\n              {loading && <TableRowSkeleton columns={5} />}\n            </>\n          </TableBody>\n        </Table>\n      </Paper>\n    </MainContainer>\n  );\n};\n\nexport default Quickemessages;","import React, { useContext } from \"react\";\nimport { Route as RouterRoute, Redirect } from \"react-router-dom\";\n\nimport { AuthContext } from \"../context/Auth/AuthContext\";\nimport BackdropLoading from \"../components/BackdropLoading\";\n\nconst Route = ({ component: Component, isPrivate = false, ...rest }) => {\n\tconst { isAuth, loading } = useContext(AuthContext);\n\n\tif (!isAuth && isPrivate) {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{loading && <BackdropLoading />}\n\t\t\t\t<Redirect to={{ pathname: \"/login\", state: { from: rest.location } }} />\n\t\t\t</>\n\t\t);\n\t}\n\n\tif (isAuth && !isPrivate) {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{loading && <BackdropLoading />}\n\t\t\t\t<Redirect to={{ pathname: \"/\", state: { from: rest.location } }} />;\n\t\t\t</>\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{loading && <BackdropLoading />}\n\t\t\t<RouterRoute {...rest} component={Component} />\n\t\t</>\n\t);\n};\n\nexport default Route;\n","import React, {\n  useState,\n  useEffect,\n  useReducer,\n  useCallback,\n  useContext,\n} from \"react\";\nimport { toast } from \"react-toastify\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nimport MainContainer from \"../../components/MainContainer\";\nimport MainHeader from \"../../components/MainHeader\";\nimport MainHeaderButtonsWrapper from \"../../components/MainHeaderButtonsWrapper\";\nimport Title from \"../../components/Title\";\n\nimport api from \"../../services/api\";\nimport { i18n } from \"../../translate/i18n\";\nimport TableRowSkeleton from \"../../components/TableRowSkeleton\";\nimport ScheduleModal from \"../../components/ScheduleModal\";\nimport ConfirmationModal from \"../../components/ConfirmationModal\";\nimport toastError from \"../../errors/toastError\";\nimport moment from \"moment\";\nimport { capitalize } from \"lodash\";\nimport { socketConnection } from \"../../services/socket\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\n\n// A custom hook that builds on useLocation to parse\n// the query string for you.\nconst getUrlParam = (param) => {\n  return new URLSearchParams(window.location.search).get(param);\n};\n\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_SCHEDULES\") {\n    const schedules = action.payload;\n    const newSchedules = [];\n\n    schedules.forEach((schedule) => {\n      const scheduleIndex = state.findIndex((s) => s.id === schedule.id);\n      if (scheduleIndex !== -1) {\n        state[scheduleIndex] = schedule;\n      } else {\n        newSchedules.push(schedule);\n      }\n    });\n\n    return [...state, ...newSchedules];\n  }\n\n  if (action.type === \"UPDATE_SCHEDULES\") {\n    const schedule = action.payload;\n    const scheduleIndex = state.findIndex((s) => s.id === schedule.id);\n\n    if (scheduleIndex !== -1) {\n      state[scheduleIndex] = schedule;\n      return [...state];\n    } else {\n      return [schedule, ...state];\n    }\n  }\n\n  if (action.type === \"DELETE_SCHEDULE\") {\n    const scheduleId = action.payload;\n\n    const scheduleIndex = state.findIndex((s) => s.id === scheduleId);\n    if (scheduleIndex !== -1) {\n      state.splice(scheduleIndex, 1);\n    }\n    return [...state];\n  }\n\n  if (action.type === \"RESET\") {\n    return [];\n  }\n};\n\nconst useStyles = makeStyles((theme) => ({\n  mainPaper: {\n    flex: 1,\n    padding: theme.spacing(1),\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n}));\n\nconst Schedules = () => {\n  const classes = useStyles();\n\n  const { user } = useContext(AuthContext);\n\n  const [loading, setLoading] = useState(false);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [hasMore, setHasMore] = useState(false);\n  const [selectedSchedule, setSelectedSchedule] = useState(null);\n  const [deletingSchedule, setDeletingSchedule] = useState(null);\n  const [confirmModalOpen, setConfirmModalOpen] = useState(false);\n  const [searchParam, setSearchParam] = useState(\"\");\n  const [schedules, dispatch] = useReducer(reducer, []);\n  const [scheduleModalOpen, setScheduleModalOpen] = useState(false);\n  const [contactId, setContactId] = useState(+getUrlParam(\"contactId\"));\n\n  const fetchSchedules = useCallback(async () => {\n    try {\n      const { data } = await api.get(\"/schedules/\", {\n        params: { searchParam, pageNumber },\n      });\n      dispatch({ type: \"LOAD_SCHEDULES\", payload: data.schedules });\n      setHasMore(data.hasMore);\n      setLoading(false);\n    } catch (err) {\n      toastError(err);\n    }\n  }, [searchParam, pageNumber]);\n\n  const handleOpenScheduleModalFromContactId = useCallback(() => {\n    if (contactId) {\n      handleOpenScheduleModal();\n    }\n  }, [contactId]);\n\n  useEffect(() => {\n    dispatch({ type: \"RESET\" });\n    setPageNumber(1);\n  }, [searchParam]);\n\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      fetchSchedules();\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n  }, [\n    searchParam,\n    pageNumber,\n    contactId,\n    fetchSchedules,\n    handleOpenScheduleModalFromContactId,\n  ]);\n\n  useEffect(() => {\n    handleOpenScheduleModalFromContactId();\n    const socket = socketConnection({ companyId: user.companyId });\n\n    socket.on(\"user\", (data) => {\n      if (data.action === \"update\" || data.action === \"create\") {\n        dispatch({ type: \"UPDATE_SCHEDULES\", payload: data.schedules });\n      }\n\n      if (data.action === \"delete\") {\n        dispatch({ type: \"DELETE_USER\", payload: +data.scheduleId });\n      }\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, [handleOpenScheduleModalFromContactId, user]);\n\n  const cleanContact = () => {\n    setContactId(\"\");\n  };\n\n  const handleOpenScheduleModal = () => {\n    setSelectedSchedule(null);\n    setScheduleModalOpen(true);\n  };\n\n  const handleCloseScheduleModal = () => {\n    setSelectedSchedule(null);\n    setScheduleModalOpen(false);\n  };\n\n  const handleSearch = (event) => {\n    setSearchParam(event.target.value.toLowerCase());\n  };\n\n  const handleEditSchedule = (schedule) => {\n    setSelectedSchedule(schedule);\n    setScheduleModalOpen(true);\n  };\n\n  const handleDeleteSchedule = async (scheduleId) => {\n    try {\n      await api.delete(`/schedules/${scheduleId}`);\n      toast.success(i18n.t(\"schedules.toasts.deleted\"));\n    } catch (err) {\n      toastError(err);\n    }\n    setDeletingSchedule(null);\n    setSearchParam(\"\");\n    setPageNumber(1);\n\n    dispatch({ type: \"RESET\" });\n    setPageNumber(1);\n    await fetchSchedules();\n  };\n\n  const loadMore = () => {\n    setPageNumber((prevState) => prevState + 1);\n  };\n\n  const handleScroll = (e) => {\n    if (!hasMore || loading) return;\n    const { scrollTop, scrollHeight, clientHeight } = e.currentTarget;\n    if (scrollHeight - (scrollTop + 100) < clientHeight) {\n      loadMore();\n    }\n  };\n\n  const truncate = (str, len) => {\n    if (str.length > len) {\n      return str.substring(0, len) + \"...\";\n    }\n    return str;\n  };\n\n  return (\n    <MainContainer>\n      <ConfirmationModal\n        title={\n          deletingSchedule &&\n          `${i18n.t(\"schedules.confirmationModal.deleteTitle\")}`\n        }\n        open={confirmModalOpen}\n        onClose={setConfirmModalOpen}\n        onConfirm={() => handleDeleteSchedule(deletingSchedule.id)}\n      >\n        {i18n.t(\"schedules.confirmationModal.deleteMessage\")}\n      </ConfirmationModal>\n      <ScheduleModal\n        open={scheduleModalOpen}\n        onClose={handleCloseScheduleModal}\n        reload={fetchSchedules}\n        aria-labelledby=\"form-dialog-title\"\n        scheduleId={selectedSchedule && selectedSchedule.id}\n        contactId={contactId}\n        cleanContact={cleanContact}\n      />\n      <MainHeader>\n        <Title>{i18n.t(\"schedules.title\")}</Title>\n        <MainHeaderButtonsWrapper>\n          <TextField\n            placeholder={i18n.t(\"contacts.searchPlaceholder\")}\n            type=\"search\"\n            value={searchParam}\n            onChange={handleSearch}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon style={{ color: \"gray\" }} />\n                </InputAdornment>\n              ),\n            }}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleOpenScheduleModal}\n          >\n            {i18n.t(\"schedules.buttons.add\")}\n          </Button>\n        </MainHeaderButtonsWrapper>\n      </MainHeader>\n      <Paper\n        className={classes.mainPaper}\n        variant=\"outlined\"\n        onScroll={handleScroll}\n      >\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">\n                {i18n.t(\"schedules.table.contact\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"schedules.table.body\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"schedules.table.sendAt\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"schedules.table.status\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"schedules.table.actions\")}\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <>\n              {schedules.map((schedule) => (\n                <TableRow key={schedule.id}>\n                  <TableCell align=\"center\">{schedule.contact.name}</TableCell>\n                  <TableCell align=\"center\" title={schedule.body}>\n                    {truncate(schedule.body, 25)}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {moment(schedule.sendAt).format(\"DD/MM/YYYY HH:mm:ss\")}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {capitalize(schedule.status)}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => handleEditSchedule(schedule)}\n                    >\n                      <EditIcon />\n                    </IconButton>\n\n                    <IconButton\n                      size=\"small\"\n                      onClick={(e) => {\n                        setConfirmModalOpen(true);\n                        setDeletingSchedule(schedule);\n                      }}\n                    >\n                      <DeleteOutlineIcon />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n              {loading && <TableRowSkeleton columns={4} />}\n            </>\n          </TableBody>\n        </Table>\n      </Paper>\n    </MainContainer>\n  );\n};\n\nexport default Schedules;\n","import React, { useState, useEffect, useRef, useContext } from \"react\";\n\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field } from \"formik\";\nimport { toast } from \"react-toastify\";\nimport { head } from \"lodash\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport AttachFileIcon from \"@material-ui/icons/AttachFile\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport Chip from '@material-ui/core/Chip';\n\nimport { i18n } from \"../../translate/i18n\";\nimport moment from \"moment\";\n\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\nimport {\n  Box,\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n  Tab,\n  Tabs,\n} from \"@material-ui/core\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport ConfirmationModal from \"../ConfirmationModal\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n\n  textField: {\n    marginRight: theme.spacing(1),\n    flex: 1,\n  },\n\n  extraAttr: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n\n  btnWrapper: {\n    position: \"relative\",\n  },\n\n  buttonProgress: {\n    color: green[500],\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n\nconst CampaignSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n});\n\nconst CampaignModal = ({\n  open,\n  onClose,\n  campaignId,\n  initialValues,\n  onSave,\n  resetPagination,\n}) => {\n  const classes = useStyles();\n  const isMounted = useRef(true);\n  const { user } = useContext(AuthContext);\n  const { companyId } = user;\n\n  const initialState = {\n    name: \"\",\n    message1: \"\",\n    message2: \"\",\n    message3: \"\",\n    message4: \"\",\n    message5: \"\",\n    confirmationMessage1: \"\",\n    confirmationMessage2: \"\",\n    confirmationMessage3: \"\",\n    confirmationMessage4: \"\",\n    confirmationMessage5: \"\",\n    status: \"INATIVA\", // INATIVA, PROGRAMADA, EM_ANDAMENTO, CANCELADA, FINALIZADA,\n    confirmation: false,\n    scheduledAt: \"\",\n    //whatsappId: \"\",\n    contactListId: \"\",\n    tagListId: \"Nenhuma\",\n    companyId,\n  };\n\n  const [campaign, setCampaign] = useState(initialState);\n  const [whatsapps, setWhatsapps] = useState([]);\n  const [selectedWhatsapps, setSelectedWhatsapps] = useState([]);\n  const [contactLists, setContactLists] = useState([]);\n  const [tagLists, setTagLists] = useState([]);\n  const [messageTab, setMessageTab] = useState(0);\n  const [attachment, setAttachment] = useState(null);\n  const [confirmationOpen, setConfirmationOpen] = useState(false);\n  const [campaignEditable, setCampaignEditable] = useState(true);\n  const attachmentFile = useRef(null);\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    if (isMounted.current) {\n      if (initialValues) {\n        setCampaign((prevState) => {\n          return { ...prevState, ...initialValues };\n        });\n      }\n\n      api\n        .get(`/contact-lists/list`, { params: { companyId } })\n        .then(({ data }) => setContactLists(data));\n\n      api\n  \t\t.get(`/whatsapp`, { params: { companyId, session: 0 } })\n  \t\t.then(({ data }) => {\n    \t\t// Mapear os dados recebidos da API para adicionar a propriedade 'selected'\n    \t\tconst mappedWhatsapps = data.map((whatsapp) => ({\n      \t\t...whatsapp,\n      \t\tselected: false,\n    \t}));\n\n        setWhatsapps(mappedWhatsapps);\n      });\n\n      api.get(`/tags`, { params: { companyId } })\n      .then(({ data }) => {\n        const fetchedTags = data.tags;\n        // Perform any necessary data transformation here\n        const formattedTagLists = fetchedTags.map((tag) => ({\n          id: tag.id,\n          name: tag.name,\n        }));\n        setTagLists(formattedTagLists);\n      })\n      .catch((error) => {\n        console.error(\"Error retrieving tags:\", error);\n      });\n      \n      if (!campaignId) return;\n\n      api.get(`/campaigns/${campaignId}`).then(({ data }) => {\n        setCampaign((prev) => {\n          let prevCampaignData = Object.assign({}, prev);\n\n          Object.entries(data).forEach(([key, value]) => {\n            if (key === \"scheduledAt\" && value !== \"\" && value !== null) {\n              prevCampaignData[key] = moment(value).format(\"YYYY-MM-DDTHH:mm\");\n            } else {\n              prevCampaignData[key] = value === null ? \"\" : value;\n            }\n          });\n\n          return prevCampaignData;\n        });\n      });\n    }\n  }, [campaignId, open, initialValues, companyId]);\n\n  \n\n  useEffect(() => {\n    const now = moment();\n    const scheduledAt = moment(campaign.scheduledAt);\n    const moreThenAnHour =\n      !Number.isNaN(scheduledAt.diff(now)) && scheduledAt.diff(now, \"hour\") > 1;\n    const isEditable =\n      campaign.status === \"INATIVA\" ||\n      (campaign.status === \"PROGRAMADA\" && moreThenAnHour);\n\n    setCampaignEditable(isEditable);\n  }, [campaign.status, campaign.scheduledAt]);\n\n  const handleClose = () => {\n    onClose();\n    setCampaign(initialState);\n  };\n\n  const handleAttachmentFile = (e) => {\n    const file = head(e.target.files);\n    if (file) {\n      setAttachment(file);\n    }\n  };\n\n  const handleSaveCampaign = async (values) => {\n    try {\n      const dataValues = {\n        ...values,  // Merge the existing values object\n        whatsappId: selectedWhatsapps.join(\",\"),\n      };\n    \n      //console.log(values);\n      //console.log(selectedWhatsapps);\n    \n      Object.entries(values).forEach(([key, value]) => {\n        if (key === \"scheduledAt\" && value !== \"\" && value !== null) {\n          dataValues[key] = moment(value).format(\"YYYY-MM-DD HH:mm:ss\");\n        } else {\n          dataValues[key] = value === \"\" ? null : value;\n        }\n      });\n\n      if (campaignId) {\n        await api.put(`/campaigns/${campaignId}`, dataValues);\n\n        if (attachment != null) {\n          const formData = new FormData();\n          formData.append(\"file\", attachment);\n          await api.post(`/campaigns/${campaignId}/media-upload`, formData);\n        }\n        handleClose();\n      } else {\n        const { data } = await api.post(\"/campaigns\", dataValues);\n\n        if (attachment != null) {\n          const formData = new FormData();\n          formData.append(\"file\", attachment);\n          await api.post(`/campaigns/${data.id}/media-upload`, formData);\n        }\n        if (onSave) {\n          onSave(data);\n        }\n        handleClose();\n      }\n      toast.success(i18n.t(\"campaigns.toasts.success\"));\n    } catch (err) {\n      console.log(err);\n      toastError(err);\n    }\n  };\n\n  const deleteMedia = async () => {\n    if (attachment) {\n      setAttachment(null);\n      attachmentFile.current.value = null;\n    }\n\n    if (campaign.mediaPath) {\n      await api.delete(`/campaigns/${campaign.id}/media-upload`);\n      setCampaign((prev) => ({ ...prev, mediaPath: null, mediaName: null }));\n      toast.success(i18n.t(\"campaigns.toasts.deleted\"));\n    }\n  };\n\n  const renderMessageField = (identifier) => {\n    return (\n      <Field\n        as={TextField}\n        id={identifier}\n        name={identifier}\n        fullWidth\n        rows={5}\n        label={i18n.t(`campaigns.dialog.form.${identifier}`)}\n        placeholder={i18n.t(\"campaigns.dialog.form.messagePlaceholder\")}\n        multiline={true}\n        variant=\"outlined\"\n        helperText=\"Utilize variáveis como {nome}, {numero}, {email} ou defina variáveis personalizadas.\"\n        disabled={!campaignEditable && campaign.status !== \"CANCELADA\"}\n      />\n    );\n  };\n\n  const renderConfirmationMessageField = (identifier) => {\n    return (\n      <Field\n        as={TextField}\n        id={identifier}\n        name={identifier}\n        fullWidth\n        rows={5}\n        label={i18n.t(`campaigns.dialog.form.${identifier}`)}\n        placeholder={i18n.t(\"campaigns.dialog.form.messagePlaceholder\")}\n        multiline={true}\n        variant=\"outlined\"\n        disabled={!campaignEditable && campaign.status !== \"CANCELADA\"}\n      />\n    );\n  };\n\n  const cancelCampaign = async () => {\n    try {\n      await api.post(`/campaigns/${campaign.id}/cancel`);\n      toast.success(i18n.t(\"campaigns.toasts.cancel\"));\n      setCampaign((prev) => ({ ...prev, status: \"CANCELADA\" }));\n      resetPagination();\n    } catch (err) {\n      toast.error(err.message);\n    }\n  };\n\n  const restartCampaign = async () => {\n    try {\n      await api.post(`/campaigns/${campaign.id}/restart`);\n      toast.success(i18n.t(\"campaigns.toasts.restart\"));\n      setCampaign((prev) => ({ ...prev, status: \"EM_ANDAMENTO\" }));\n      resetPagination();\n    } catch (err) {\n      toast.error(err.message);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <ConfirmationModal\n        title={i18n.t(\"campaigns.confirmationModal.deleteTitle\")}\n        open={confirmationOpen}\n        onClose={() => setConfirmationOpen(false)}\n        onConfirm={deleteMedia}\n      >\n        {i18n.t(\"campaigns.confirmationModal.deleteMessage\")}\n      </ConfirmationModal>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        fullWidth\n        maxWidth=\"md\"\n        scroll=\"paper\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          {campaignEditable ? (\n            <>\n              {campaignId\n                ? `${i18n.t(\"campaigns.dialog.update\")}`\n                : `${i18n.t(\"campaigns.dialog.new\")}`}\n            </>\n          ) : (\n            <>{`${i18n.t(\"campaigns.dialog.readonly\")}`}</>\n          )}\n        </DialogTitle>\n        <div style={{ display: \"none\" }}>\n          <input\n            type=\"file\"\n            ref={attachmentFile}\n            onChange={(e) => handleAttachmentFile(e)}\n          />\n        </div>\n        <Formik\n          initialValues={campaign}\n          enableReinitialize={true}\n          validationSchema={CampaignSchema}\n          onSubmit={(values, actions) => {\n            setTimeout(() => {\n              handleSaveCampaign(values);\n              actions.setSubmitting(false);\n            }, 400);\n          }}\n        >\n          {({ values, errors, touched, isSubmitting }) => (\n            <Form>\n              <DialogContent dividers>\n                <Grid spacing={2} container>\n                  <Grid xs={12} md={4} item>\n                    <Field\n                      as={TextField}\n                      label={i18n.t(\"campaigns.dialog.form.name\")}\n                      name=\"name\"\n                      error={touched.name && Boolean(errors.name)}\n                      helperText={touched.name && errors.name}\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      className={classes.textField}\n                      disabled={!campaignEditable}\n                    />\n                  </Grid>\n                  <Grid xs={12} md={4} item>\n                    <FormControl\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      className={classes.formControl}\n                    >\n                      <InputLabel id=\"confirmation-selection-label\">\n                        {i18n.t(\"campaigns.dialog.form.confirmation\")}\n                      </InputLabel>\n                      <Field\n                        as={Select}\n                        label={i18n.t(\"campaigns.dialog.form.confirmation\")}\n                        placeholder={i18n.t(\n                          \"campaigns.dialog.form.confirmation\"\n                        )}\n                        labelId=\"confirmation-selection-label\"\n                        id=\"confirmation\"\n                        name=\"confirmation\"\n                        error={\n                          touched.confirmation && Boolean(errors.confirmation)\n                        }\n                        disabled={!campaignEditable}\n                      >\n                        <MenuItem value={false}>Desabilitada</MenuItem>\n                        <MenuItem value={true}>Habilitada</MenuItem>\n                      </Field>\n                    </FormControl>\n                  </Grid>\n                  <Grid xs={12} md={4} item>\n                    <FormControl\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      className={classes.formControl}\n                    >\n                      <InputLabel id=\"contactList-selection-label\">\n                        {i18n.t(\"campaigns.dialog.form.contactList\")}\n                      </InputLabel>\n                      <Field\n                        as={Select}\n                        label={i18n.t(\"campaigns.dialog.form.contactList\")}\n                        placeholder={i18n.t(\n                          \"campaigns.dialog.form.contactList\"\n                        )}\n                        labelId=\"contactList-selection-label\"\n                        id=\"contactListId\"\n                        name=\"contactListId\"\n                        error={\n                          touched.contactListId && Boolean(errors.contactListId)\n                        }\n                        disabled={!campaignEditable}\n                      >\n                        <MenuItem value=\"\">Nenhuma</MenuItem>\n                        {contactLists &&\n                          contactLists.map((contactList) => (\n                            <MenuItem\n                              key={contactList.id}\n                              value={contactList.id}\n                            >\n                              {contactList.name}\n                            </MenuItem>\n                          ))}\n                      </Field>\n                    </FormControl>\n                  </Grid>\n                  <Grid xs={12} md={4} item>\n                  <FormControl\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    className={classes.formControl}\n                  >\n                    <InputLabel id=\"tagList-selection-label\">\n                      {i18n.t(\"campaigns.dialog.form.tagList\")}\n                    </InputLabel>\n                    <Field\n                      as={Select}\n                      label={i18n.t(\"campaigns.dialog.form.tagList\")}\n                      placeholder={i18n.t(\"campaigns.dialog.form.tagList\")}\n                      labelId=\"tagList-selection-label\"\n                      id=\"tagListId\"\n                      name=\"tagListId\"\n                      error={touched.tagListId && Boolean(errors.tagListId)}\n                      disabled={!campaignEditable}\n                    >\n                      <MenuItem value=\"\">Nenhuma</MenuItem>\n                      {Array.isArray(tagLists) &&\n                        tagLists.map((tagList) => (\n                          <MenuItem key={tagList.id} value={tagList.id}>\n                            {tagList.name}\n                          </MenuItem>\n                        ))}\n                    </Field>\n                  </FormControl>\n                </Grid>\n\n<Grid xs={12} md={4} item>\n  <FormControl\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    className={classes.formControl}\n  >\n    <InputLabel id=\"whatsapp-selection-label\">\n      {i18n.t(\"campaigns.dialog.form.whatsapp\")}\n    </InputLabel>\n    <Field\n      as={Select}\n      multiple \n      label={i18n.t(\"campaigns.dialog.form.whatsapp\")}\n      placeholder={i18n.t(\"campaigns.dialog.form.whatsapp\")}\n      labelId=\"whatsapp-selection-label\"\n      id=\"whatsappIds\"\n      name=\"whatsappIds\"\n      error={touched.whatsappId && Boolean(errors.whatsappId)}\n      disabled={!campaignEditable}\n      value={selectedWhatsapps}  \n      onChange={(event) => setSelectedWhatsapps(event.target.value)} \n      renderValue={(selected) => (\n        <div>\n          {selected.map((value) => (\n            <Chip key={value} label={whatsapps.find((whatsapp) => whatsapp.id === value).name} />\n          ))}\n        </div>\n      )}\n    >\n      {whatsapps &&\n        whatsapps.map((whatsapp) => (\n          <MenuItem key={whatsapp.id} value={whatsapp.id}>\n            {whatsapp.name}\n          </MenuItem>\n        ))}\n    </Field>\n  </FormControl>\n</Grid>\n\n                  <Grid xs={12} md={4} item>\n                    <Field\n                      as={TextField}\n                      label={i18n.t(\"campaigns.dialog.form.scheduledAt\")}\n                      name=\"scheduledAt\"\n                      error={touched.scheduledAt && Boolean(errors.scheduledAt)}\n                      helperText={touched.scheduledAt && errors.scheduledAt}\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      type=\"datetime-local\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      fullWidth\n                      className={classes.textField}\n                      disabled={!campaignEditable}\n                    />\n                  </Grid>\n                  <Grid xs={12} item>\n                    <Tabs\n                      value={messageTab}\n                      indicatorColor=\"primary\"\n                      textColor=\"primary\"\n                      onChange={(e, v) => setMessageTab(v)}\n                      variant=\"fullWidth\"\n                      centered\n                      style={{\n                        background: \"#f2f2f2\",\n                        border: \"1px solid #e6e6e6\",\n                        borderRadius: 2,\n                      }}\n                    >\n                      <Tab label=\"Msg. 1\" index={0} />\n                      <Tab label=\"Msg. 2\" index={1} />\n                      <Tab label=\"Msg. 3\" index={2} />\n                      <Tab label=\"Msg. 4\" index={3} />\n                      <Tab label=\"Msg. 5\" index={4} />\n                    </Tabs>\n                    <Box style={{ paddingTop: 20, border: \"none\" }}>\n                      {messageTab === 0 && (\n                        <>\n                          {values.confirmation ? (\n                            <Grid spacing={2} container>\n                              <Grid xs={12} md={8} item>\n                                <>{renderMessageField(\"message1\")}</>\n                              </Grid>\n                              <Grid xs={12} md={4} item>\n                                <>\n                                  {renderConfirmationMessageField(\n                                    \"confirmationMessage1\"\n                                  )}\n                                </>\n                              </Grid>\n                            </Grid>\n                          ) : (\n                            <>{renderMessageField(\"message1\")}</>\n                          )}\n                        </>\n                      )}\n                      {messageTab === 1 && (\n                        <>\n                          {values.confirmation ? (\n                            <Grid spacing={2} container>\n                              <Grid xs={12} md={8} item>\n                                <>{renderMessageField(\"message2\")}</>\n                              </Grid>\n                              <Grid xs={12} md={4} item>\n                                <>\n                                  {renderConfirmationMessageField(\n                                    \"confirmationMessage2\"\n                                  )}\n                                </>\n                              </Grid>\n                            </Grid>\n                          ) : (\n                            <>{renderMessageField(\"message2\")}</>\n                          )}\n                        </>\n                      )}\n                      {messageTab === 2 && (\n                        <>\n                          {values.confirmation ? (\n                            <Grid spacing={2} container>\n                              <Grid xs={12} md={8} item>\n                                <>{renderMessageField(\"message3\")}</>\n                              </Grid>\n                              <Grid xs={12} md={4} item>\n                                <>\n                                  {renderConfirmationMessageField(\n                                    \"confirmationMessage3\"\n                                  )}\n                                </>\n                              </Grid>\n                            </Grid>\n                          ) : (\n                            <>{renderMessageField(\"message3\")}</>\n                          )}\n                        </>\n                      )}\n                      {messageTab === 3 && (\n                        <>\n                          {values.confirmation ? (\n                            <Grid spacing={2} container>\n                              <Grid xs={12} md={8} item>\n                                <>{renderMessageField(\"message4\")}</>\n                              </Grid>\n                              <Grid xs={12} md={4} item>\n                                <>\n                                  {renderConfirmationMessageField(\n                                    \"confirmationMessage4\"\n                                  )}\n                                </>\n                              </Grid>\n                            </Grid>\n                          ) : (\n                            <>{renderMessageField(\"message4\")}</>\n                          )}\n                        </>\n                      )}\n                      {messageTab === 4 && (\n                        <>\n                          {values.confirmation ? (\n                            <Grid spacing={2} container>\n                              <Grid xs={12} md={8} item>\n                                <>{renderMessageField(\"message5\")}</>\n                              </Grid>\n                              <Grid xs={12} md={4} item>\n                                <>\n                                  {renderConfirmationMessageField(\n                                    \"confirmationMessage5\"\n                                  )}\n                                </>\n                              </Grid>\n                            </Grid>\n                          ) : (\n                            <>{renderMessageField(\"message5\")}</>\n                          )}\n                        </>\n                      )}\n                    </Box>\n                  </Grid>\n                  {(campaign.mediaPath || attachment) && (\n                    <Grid xs={12} item>\n                      <Button startIcon={<AttachFileIcon />}>\n                        {attachment != null\n                          ? attachment.name\n                          : campaign.mediaName}\n                      </Button>\n                      {campaignEditable && (\n                        <IconButton\n                          onClick={() => setConfirmationOpen(true)}\n                          color=\"primary\"\n                        >\n                          <DeleteOutlineIcon color=\"secondary\" />\n                        </IconButton>\n                      )}\n                    </Grid>\n                  )}\n                </Grid>\n              </DialogContent>\n              <DialogActions>\n                {campaign.status === \"CANCELADA\" && (\n                  <Button\n                    color=\"primary\"\n                    onClick={() => restartCampaign()}\n                    variant=\"outlined\"\n                  >\n                    {i18n.t(\"campaigns.dialog.buttons.restart\")}\n                  </Button>\n                )}\n                {campaign.status === \"EM_ANDAMENTO\" && (\n                  <Button\n                    color=\"primary\"\n                    onClick={() => cancelCampaign()}\n                    variant=\"outlined\"\n                  >\n                    {i18n.t(\"campaigns.dialog.buttons.cancel\")}\n                  </Button>\n                )}\n                {!attachment && !campaign.mediaPath && campaignEditable && (\n                  <Button\n                    color=\"primary\"\n                    onClick={() => attachmentFile.current.click()}\n                    disabled={isSubmitting}\n                    variant=\"outlined\"\n                  >\n                    {i18n.t(\"campaigns.dialog.buttons.attach\")}\n                  </Button>\n                )}\n                <Button\n                  onClick={handleClose}\n                  color=\"primary\"\n                  disabled={isSubmitting}\n                  variant=\"outlined\"\n                >\n                  {i18n.t(\"campaigns.dialog.buttons.close\")}\n                </Button>\n                {(campaignEditable || campaign.status === \"CANCELADA\") && (\n                  <Button\n                    type=\"submit\"\n                    color=\"primary\"\n                    disabled={isSubmitting}\n                    variant=\"contained\"\n                    className={classes.btnWrapper}\n                  >\n                    {campaignId\n                      ? `${i18n.t(\"campaigns.dialog.buttons.edit\")}`\n                      : `${i18n.t(\"campaigns.dialog.buttons.add\")}`}\n                    {isSubmitting && (\n                      <CircularProgress\n                        size={24}\n                        className={classes.buttonProgress}\n                      />\n                    )}\n                  </Button>\n                )}\n              </DialogActions>\n            </Form>\n          )}\n        </Formik>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default CampaignModal;","/* eslint-disable no-unused-vars */\n\nimport React, { useState, useEffect, useReducer } from \"react\";\nimport { toast } from \"react-toastify\";\n\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport TimerOffIcon from \"@material-ui/icons/TimerOff\";\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\n\nimport MainContainer from \"../../components/MainContainer\";\nimport MainHeader from \"../../components/MainHeader\";\nimport Title from \"../../components/Title\";\n\nimport api from \"../../services/api\";\nimport { i18n } from \"../../translate/i18n\";\nimport TableRowSkeleton from \"../../components/TableRowSkeleton\";\nimport CampaignModal from \"../../components/CampaignModal\";\nimport ConfirmationModal from \"../../components/ConfirmationModal\";\nimport toastError from \"../../errors/toastError\";\nimport { Grid } from \"@material-ui/core\";\nimport { isArray } from \"lodash\";\nimport { useDate } from \"../../hooks/useDate\";\nimport { socketConnection } from \"../../services/socket\";\n\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_CAMPAIGNS\") {\n    const campaigns = action.payload;\n    const newCampaigns = [];\n\n    if (isArray(campaigns)) {\n      campaigns.forEach((campaign) => {\n        const campaignIndex = state.findIndex((u) => u.id === campaign.id);\n        if (campaignIndex !== -1) {\n          state[campaignIndex] = campaign;\n        } else {\n          newCampaigns.push(campaign);\n        }\n      });\n    }\n\n    return [...state, ...newCampaigns];\n  }\n\n  if (action.type === \"UPDATE_CAMPAIGNS\") {\n    const campaign = action.payload;\n    const campaignIndex = state.findIndex((u) => u.id === campaign.id);\n\n    if (campaignIndex !== -1) {\n      state[campaignIndex] = campaign;\n      return [...state];\n    } else {\n      return [campaign, ...state];\n    }\n  }\n\n  if (action.type === \"DELETE_CAMPAIGN\") {\n    const campaignId = action.payload;\n\n    const campaignIndex = state.findIndex((u) => u.id === campaignId);\n    if (campaignIndex !== -1) {\n      state.splice(campaignIndex, 1);\n    }\n    return [...state];\n  }\n\n  if (action.type === \"RESET\") {\n    return [];\n  }\n};\n\nconst useStyles = makeStyles((theme) => ({\n  mainPaper: {\n    flex: 1,\n    padding: theme.spacing(1),\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n}));\n\nconst Campaigns = () => {\n  const classes = useStyles();\n\n  const history = useHistory();\n\n  const [loading, setLoading] = useState(false);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [hasMore, setHasMore] = useState(false);\n  const [selectedCampaign, setSelectedCampaign] = useState(null);\n  const [deletingCampaign, setDeletingCampaign] = useState(null);\n  const [campaignModalOpen, setCampaignModalOpen] = useState(false);\n  const [confirmModalOpen, setConfirmModalOpen] = useState(false);\n  const [searchParam, setSearchParam] = useState(\"\");\n  const [campaigns, dispatch] = useReducer(reducer, []);\n\n  const { datetimeToClient } = useDate();\n\n  useEffect(() => {\n    dispatch({ type: \"RESET\" });\n    setPageNumber(1);\n  }, [searchParam]);\n\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      fetchCampaigns();\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchParam, pageNumber]);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketConnection({ companyId });\n\n    socket.on(`company-${companyId}-campaign`, (data) => {\n      if (data.action === \"update\" || data.action === \"create\") {\n        dispatch({ type: \"UPDATE_CAMPAIGNS\", payload: data.record });\n      }\n      if (data.action === \"delete\") {\n        dispatch({ type: \"DELETE_CAMPAIGN\", payload: +data.id });\n      }\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  const fetchCampaigns = async () => {\n    try {\n      const { data } = await api.get(\"/campaigns/\", {\n        params: { searchParam, pageNumber },\n      });\n      dispatch({ type: \"LOAD_CAMPAIGNS\", payload: data.records });\n      setHasMore(data.hasMore);\n      setLoading(false);\n    } catch (err) {\n      toastError(err);\n    }\n  };\n\n  const handleOpenCampaignModal = () => {\n    setSelectedCampaign(null);\n    setCampaignModalOpen(true);\n  };\n\n  const handleCloseCampaignModal = () => {\n    setSelectedCampaign(null);\n    setCampaignModalOpen(false);\n  };\n\n  const handleSearch = (event) => {\n    setSearchParam(event.target.value.toLowerCase());\n  };\n\n  const handleEditCampaign = (campaign) => {\n    setSelectedCampaign(campaign);\n    setCampaignModalOpen(true);\n  };\n\n  const handleDeleteCampaign = async (campaignId) => {\n    try {\n      await api.delete(`/campaigns/${campaignId}`);\n      toast.success(i18n.t(\"campaigns.toasts.deleted\"));\n    } catch (err) {\n      toastError(err);\n    }\n    setDeletingCampaign(null);\n    setSearchParam(\"\");\n    setPageNumber(1);\n  };\n\n  const loadMore = () => {\n    setPageNumber((prevState) => prevState + 1);\n  };\n\n  const handleScroll = (e) => {\n    if (!hasMore || loading) return;\n    const { scrollTop, scrollHeight, clientHeight } = e.currentTarget;\n    if (scrollHeight - (scrollTop + 100) < clientHeight) {\n      loadMore();\n    }\n  };\n\n  const formatStatus = (val) => {\n    switch (val) {\n      case \"INATIVA\":\n        return \"Inativa\";\n      case \"PROGRAMADA\":\n        return \"Programada\";\n      case \"EM_ANDAMENTO\":\n        return \"Em Andamento\";\n      case \"CANCELADA\":\n        return \"Cancelada\";\n      case \"FINALIZADA\":\n        return \"Finalizada\";\n      default:\n        return val;\n    }\n  };\n\n  const cancelCampaign = async (campaign) => {\n    try {\n      await api.post(`/campaigns/${campaign.id}/cancel`);\n      toast.success(i18n.t(\"campaigns.toasts.cancel\"));\n      setPageNumber(1);\n      fetchCampaigns();\n    } catch (err) {\n      toast.error(err.message);\n    }\n  };\n\n  const restartCampaign = async (campaign) => {\n    try {\n      await api.post(`/campaigns/${campaign.id}/restart`);\n      toast.success(i18n.t(\"campaigns.toasts.restart\"));\n      setPageNumber(1);\n      fetchCampaigns();\n    } catch (err) {\n      toast.error(err.message);\n    }\n  };\n\n  return (\n    <MainContainer>\n      <ConfirmationModal\n        title={\n          deletingCampaign &&\n          `${i18n.t(\"campaigns.confirmationModal.deleteTitle\")} ${\n            deletingCampaign.name\n          }?`\n        }\n        open={confirmModalOpen}\n        onClose={setConfirmModalOpen}\n        onConfirm={() => handleDeleteCampaign(deletingCampaign.id)}\n      >\n        {i18n.t(\"campaigns.confirmationModal.deleteMessage\")}\n      </ConfirmationModal>\n      <CampaignModal\n        resetPagination={() => {\n          setPageNumber(1);\n          fetchCampaigns();\n        }}\n        open={campaignModalOpen}\n        onClose={handleCloseCampaignModal}\n        aria-labelledby=\"form-dialog-title\"\n        campaignId={selectedCampaign && selectedCampaign.id}\n      />\n      <MainHeader>\n        <Grid style={{ width: \"99.6%\" }} container>\n          <Grid xs={12} sm={8} item>\n            <Title>{i18n.t(\"campaigns.title\")}</Title>\n          </Grid>\n          <Grid xs={12} sm={4} item>\n            <Grid spacing={2} container>\n              <Grid xs={6} sm={6} item>\n                <TextField\n                  fullWidth\n                  placeholder={i18n.t(\"campaigns.searchPlaceholder\")}\n                  type=\"search\"\n                  value={searchParam}\n                  onChange={handleSearch}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <SearchIcon style={{ color: \"gray\" }} />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid xs={6} sm={6} item>\n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  onClick={handleOpenCampaignModal}\n                  color=\"primary\"\n                >\n                  {i18n.t(\"campaigns.buttons.add\")}\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </MainHeader>\n      <Paper\n        className={classes.mainPaper}\n        variant=\"outlined\"\n        onScroll={handleScroll}\n      >\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">\n                {i18n.t(\"campaigns.table.name\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"campaigns.table.status\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"campaigns.table.contactList\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"campaigns.table.whatsapp\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"campaigns.table.scheduledAt\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"campaigns.table.completedAt\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"campaigns.table.confirmation\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"campaigns.table.actions\")}\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <>\n              {campaigns.map((campaign) => (\n                <TableRow key={campaign.id}>\n                  <TableCell align=\"center\">{campaign.name}</TableCell>\n                  <TableCell align=\"center\">\n                    {formatStatus(campaign.status)}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {campaign.contactListId\n                      ? campaign.contactList.name\n                      : \"Não definida\"}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {campaign.whatsappId\n                      ? campaign.whatsapp.name\n                      : \"Não definido\"}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {campaign.scheduledAt\n                      ? datetimeToClient(campaign.scheduledAt)\n                      : \"Sem agendamento\"}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {campaign.completedAt\n                      ? datetimeToClient(campaign.completedAt)\n                      : \"Não concluída\"}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {campaign.confirmation ? \"Habilitada\" : \"Desabilitada\"}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {campaign.status === \"EM_ANDAMENTO\" && (\n                      <IconButton\n                        onClick={() => cancelCampaign(campaign)}\n                        title=\"Parar Campanha\"\n                        size=\"small\"\n                      >\n                        <PauseCircleOutlineIcon />\n                      </IconButton>\n                    )}\n                    {campaign.status === \"CANCELADA\" && (\n                      <IconButton\n                        onClick={() => restartCampaign(campaign)}\n                        title=\"Parar Campanha\"\n                        size=\"small\"\n                      >\n                        <PlayCircleOutlineIcon />\n                      </IconButton>\n                    )}\n                    <IconButton\n                      onClick={() =>\n                        history.push(`/campaign/${campaign.id}/report`)\n                      }\n                      size=\"small\"\n                    >\n                      <DescriptionIcon />\n                    </IconButton>\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => handleEditCampaign(campaign)}\n                    >\n                      <EditIcon />\n                    </IconButton>\n\n                    <IconButton\n                      size=\"small\"\n                      onClick={(e) => {\n                        setConfirmModalOpen(true);\n                        setDeletingCampaign(campaign);\n                      }}\n                    >\n                      <DeleteOutlineIcon />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n              {loading && <TableRowSkeleton columns={8} />}\n            </>\n          </TableBody>\n        </Table>\n      </Paper>\n    </MainContainer>\n  );\n};\n\nexport default Campaigns;\n","import React, { useEffect, useState } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { toast } from \"react-toastify\";\n\nimport MainContainer from \"../../components/MainContainer\";\nimport MainHeader from \"../../components/MainHeader\";\nimport Title from \"../../components/Title\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport api from \"../../services/api\";\n\nimport { i18n } from \"../../translate/i18n\";\nimport {\n  Box,\n  Button,\n  FormControl,\n  Grid,\n  IconButton,\n  InputLabel,\n  MenuItem,\n  Select,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport ConfirmationModal from \"../../components/ConfirmationModal\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainPaper: {\n    flex: 1,\n    padding: theme.spacing(1),\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n  textRight: {\n    textAlign: \"right\",\n  },\n  tabPanelsContainer: {\n    padding: theme.spacing(2),\n  },\n}));\n\nconst initialSettings = {\n  messageInterval: 20,\n  longerIntervalAfter: 20,\n  greaterInterval: 60,\n  variables: [],\n};\n\nconst CampaignsConfig = () => {\n  const classes = useStyles();\n\n  const [settings, setSettings] = useState(initialSettings);\n  const [showVariablesForm, setShowVariablesForm] = useState(false);\n  const [confirmationOpen, setConfirmationOpen] = useState(false);\n  const [selectedKey, setSelectedKey] = useState(null);\n  const [variable, setVariable] = useState({ key: \"\", value: \"\" });\n\n  useEffect(() => {\n    api.get(\"/campaign-settings\").then(({ data }) => {\n      const settingsList = [];\n      if (Array.isArray(data) && data.length > 0) {\n        data.forEach((item) => {\n          settingsList.push([item.key, JSON.parse(item.value)]);\n        });\n        setSettings(Object.fromEntries(settingsList));\n      }\n    });\n  }, []);\n\n  const handleOnChangeVariable = (e) => {\n    if (e.target.value !== null) {\n      const changedProp = {};\n      changedProp[e.target.name] = e.target.value;\n      setVariable((prev) => ({ ...prev, ...changedProp }));\n    }\n  };\n\n  const handleOnChangeSettings = (e) => {\n    const changedProp = {};\n    changedProp[e.target.name] = e.target.value;\n    setSettings((prev) => ({ ...prev, ...changedProp }));\n  };\n\n  const addVariable = () => {\n    setSettings((prev) => {\n      const variablesExists = settings.variables.filter(\n        (v) => v.key === variable.key\n      );\n      const variables = prev.variables;\n      if (variablesExists.length === 0) {\n        variables.push(Object.assign({}, variable));\n        setVariable({ key: \"\", value: \"\" });\n      }\n      return { ...prev, variables };\n    });\n  };\n\n  const removeVariable = () => {\n    const newList = settings.variables.filter((v) => v.key !== selectedKey);\n    setSettings((prev) => ({ ...prev, variables: newList }));\n    setSelectedKey(null);\n  };\n\n  const saveSettings = async () => {\n    await api.post(\"/campaign-settings\", { settings });\n    toast.success(\"Configurações salvas\");\n  };\n\n  return (\n    <MainContainer>\n      <ConfirmationModal\n        title={i18n.t(\"campaigns.confirmationModal.deleteTitle\")}\n        open={confirmationOpen}\n        onClose={() => setConfirmationOpen(false)}\n        onConfirm={removeVariable}\n      >\n        {i18n.t(\"campaigns.confirmationModal.deleteMessage\")}\n      </ConfirmationModal>\n      <MainHeader>\n        <Grid style={{ width: \"99.6%\" }} container>\n          <Grid xs={12} item>\n            <Title>{i18n.t(\"campaignsConfig.title\")}</Title>\n          </Grid>\n        </Grid>\n      </MainHeader>\n      <Paper className={classes.mainPaper} variant=\"outlined\">\n        <Box className={classes.tabPanelsContainer}>\n          <Grid spacing={2} container>\n            <Grid xs={12} item>\n              <Typography component={\"h3\"}>Intervalos</Typography>\n            </Grid>\n            <Grid xs={12} md={4} item>\n              <FormControl\n                variant=\"outlined\"\n                className={classes.formControl}\n                fullWidth\n              >\n                <InputLabel id=\"messageInterval-label\">\n                  Intervalo Randômico de Disparo\n                </InputLabel>\n                <Select\n                  name=\"messageInterval\"\n                  id=\"messageInterval\"\n                  labelId=\"messageInterval-label\"\n                  label=\"Intervalo Randômico de Disparo\"\n                  value={settings.messageInterval}\n                  onChange={(e) => handleOnChangeSettings(e)}\n                >\n                  <MenuItem value={0}>Sem Intervalo</MenuItem>\n                  <MenuItem value={5}>5 segundos</MenuItem>\n                  <MenuItem value={10}>10 segundos</MenuItem>\n                  <MenuItem value={15}>15 segundos</MenuItem>\n                  <MenuItem value={20}>20 segundos</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid xs={12} md={4} item>\n              <FormControl\n                variant=\"outlined\"\n                className={classes.formControl}\n                fullWidth\n              >\n                <InputLabel id=\"longerIntervalAfter-label\">\n                  Intervalo Maior Após\n                </InputLabel>\n                <Select\n                  name=\"longerIntervalAfter\"\n                  id=\"longerIntervalAfter\"\n                  labelId=\"longerIntervalAfter-label\"\n                  label=\"Intervalo Maior Após\"\n                  value={settings.longerIntervalAfter}\n                  onChange={(e) => handleOnChangeSettings(e)}\n                >\n                  <MenuItem value={0}>Não definido</MenuItem>\n                  <MenuItem value={5}>5 mensagens</MenuItem>\n                  <MenuItem value={10}>10 mensagens</MenuItem>\n                  <MenuItem value={15}>15 mensagens</MenuItem>\n                  <MenuItem value={20}>20 mensagens</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid xs={12} md={4} item>\n              <FormControl\n                variant=\"outlined\"\n                className={classes.formControl}\n                fullWidth\n              >\n                <InputLabel id=\"greaterInterval-label\">\n                  Intervalo de Disparo Maior\n                </InputLabel>\n                <Select\n                  name=\"greaterInterval\"\n                  id=\"greaterInterval\"\n                  labelId=\"greaterInterval-label\"\n                  label=\"Intervalo de Disparo Maior\"\n                  value={settings.greaterInterval}\n                  onChange={(e) => handleOnChangeSettings(e)}\n                >\n                  <MenuItem value={0}>Sem Intervalo</MenuItem>\n                  <MenuItem value={20}>20 segundos</MenuItem>\n                  <MenuItem value={30}>30 segundos</MenuItem>\n                  <MenuItem value={40}>40 segundos</MenuItem>\n                  <MenuItem value={50}>50 segundos</MenuItem>\n                  <MenuItem value={60}>60 segundos</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid xs={12} className={classes.textRight} item>\n              <Button\n                onClick={() => setShowVariablesForm(!showVariablesForm)}\n                color=\"primary\"\n                style={{ marginRight: 10 }}\n              >\n                Adicionar Variável\n              </Button>\n              <Button\n                onClick={saveSettings}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Salvar Configurações\n              </Button>\n            </Grid>\n            {showVariablesForm && (\n              <>\n                <Grid xs={12} md={6} item>\n                  <TextField\n                    label=\"Atalho\"\n                    variant=\"outlined\"\n                    value={variable.key}\n                    name=\"key\"\n                    onChange={handleOnChangeVariable}\n                    fullWidth\n                  />\n                </Grid>\n                <Grid xs={12} md={6} item>\n                  <TextField\n                    label=\"Conteúdo\"\n                    variant=\"outlined\"\n                    value={variable.value}\n                    name=\"value\"\n                    onChange={handleOnChangeVariable}\n                    fullWidth\n                  />\n                </Grid>\n                <Grid xs={12} className={classes.textRight} item>\n                  <Button\n                    onClick={() => setShowVariablesForm(!showVariablesForm)}\n                    color=\"primary\"\n                    style={{ marginRight: 10 }}\n                  >\n                    Fechar\n                  </Button>\n                  <Button\n                    onClick={addVariable}\n                    color=\"primary\"\n                    variant=\"contained\"\n                  >\n                    Adicionar\n                  </Button>\n                </Grid>\n              </>\n            )}\n            {settings.variables.length > 0 && (\n              <Grid xs={12} className={classes.textRight} item>\n                <Table size=\"small\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell style={{ width: \"1%\" }}></TableCell>\n                      <TableCell>Atalho</TableCell>\n                      <TableCell>Conteúdo</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {Array.isArray(settings.variables) &&\n                      settings.variables.map((v, k) => (\n                        <TableRow key={k}>\n                          <TableCell>\n                            <IconButton\n                              size=\"small\"\n                              onClick={() => {\n                                setSelectedKey(v.key);\n                                setConfirmationOpen(true);\n                              }}\n                            >\n                              <DeleteOutlineIcon />\n                            </IconButton>\n                          </TableCell>\n                          <TableCell>{\"{\" + v.key + \"}\"}</TableCell>\n                          <TableCell>{v.value}</TableCell>\n                        </TableRow>\n                      ))}\n                  </TableBody>\n                </Table>\n              </Grid>\n            )}\n          </Grid>\n        </Box>\n      </Paper>\n    </MainContainer>\n  );\n};\n\nexport default CampaignsConfig;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport MainContainer from \"../../components/MainContainer\";\nimport MainHeader from \"../../components/MainHeader\";\nimport Title from \"../../components/Title\";\n\nimport { Grid, LinearProgress, Typography } from \"@material-ui/core\";\nimport api from \"../../services/api\";\nimport { has, get, isNull } from \"lodash\";\nimport CardCounter from \"../../components/Dashboard/CardCounter\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\nimport EventAvailableIcon from \"@material-ui/icons/EventAvailable\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport DoneAllIcon from \"@material-ui/icons/DoneAll\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport WhatsAppIcon from \"@material-ui/icons/WhatsApp\";\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\nimport { useDate } from \"../../hooks/useDate\";\n\nimport { socketConnection } from \"../../services/socket\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainPaper: {\n    flex: 1,\n    padding: theme.spacing(2),\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n  textRight: {\n    textAlign: \"right\",\n  },\n  tabPanelsContainer: {\n    padding: theme.spacing(2),\n  },\n}));\n\nconst CampaignReport = () => {\n  const classes = useStyles();\n\n  const { campaignId } = useParams();\n\n  const [campaign, setCampaign] = useState({});\n  const [validContacts, setValidContacts] = useState(0);\n  const [delivered, setDelivered] = useState(0);\n  const [confirmationRequested, setConfirmationRequested] = useState(0);\n  const [confirmed, setConfirmed] = useState(0);\n  const [percent, setPercent] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const mounted = useRef(true);\n\n  const { datetimeToClient } = useDate();\n\n  useEffect(() => {\n    if (mounted.current) {\n      findCampaign();\n    }\n\n    return () => {\n      mounted.current = false;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (mounted.current && has(campaign, \"shipping\")) {\n      if (has(campaign, \"contactList\")) {\n        const contactList = get(campaign, \"contactList\");\n        const valids = contactList.contacts.filter((c) => c.isWhatsappValid);\n        setValidContacts(valids.length);\n      }\n\n      if (has(campaign, \"shipping\")) {\n        const contacts = get(campaign, \"shipping\");\n        const delivered = contacts.filter((c) => !isNull(c.deliveredAt));\n        const confirmationRequested = contacts.filter(\n          (c) => !isNull(c.confirmationRequestedAt)\n        );\n        const confirmed = contacts.filter(\n          (c) => !isNull(c.deliveredAt) && !isNull(c.confirmationRequestedAt)\n        );\n        setDelivered(delivered.length);\n        setConfirmationRequested(confirmationRequested.length);\n        setConfirmed(confirmed.length);\n        setDelivered(delivered.length);\n      }\n    }\n  }, [campaign]);\n\n  useEffect(() => {\n    setPercent((delivered / validContacts) * 100);\n  }, [delivered, validContacts]);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketConnection({ companyId });\n\n    socket.on(`company-${companyId}-campaign`, (data) => {\n      console.log(data);\n      if (data.record.id === +campaignId) {\n        setCampaign(data.record);\n\n        if (data.record.status === \"FINALIZADA\") {\n          setTimeout(() => {\n            findCampaign();\n          }, 5000);\n        }\n      }\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [campaignId]);\n\n  const findCampaign = async () => {\n    setLoading(true);\n    const { data } = await api.get(`/campaigns/${campaignId}`);\n    setCampaign(data);\n    setLoading(false);\n  };\n\n  const formatStatus = (val) => {\n    switch (val) {\n      case \"INATIVA\":\n        return \"Inativa\";\n      case \"PROGRAMADA\":\n        return \"Programada\";\n      case \"EM_ANDAMENTO\":\n        return \"Em Andamento\";\n      case \"CANCELADA\":\n        return \"Cancelada\";\n      case \"FINALIZADA\":\n        return \"Finalizada\";\n      default:\n        return val;\n    }\n  };\n\n  return (\n    <MainContainer>\n      <MainHeader>\n        <Grid style={{ width: \"99.6%\" }} container>\n          <Grid xs={12} item>\n            <Title>Relatório da {campaign.name || \"Campanha\"}</Title>\n          </Grid>\n        </Grid>\n      </MainHeader>\n      <Paper className={classes.mainPaper} variant=\"outlined\">\n        <Typography variant=\"h6\" component=\"h2\">\n          Status: {formatStatus(campaign.status)} {delivered} de {validContacts}\n        </Typography>\n        <Grid spacing={2} container>\n          <Grid xs={12} item>\n            <LinearProgress\n              variant=\"determinate\"\n              style={{ height: 15, borderRadius: 3, margin: \"20px 0\" }}\n              value={percent}\n            />\n          </Grid>\n          <Grid xs={12} md={4} item>\n            <CardCounter\n              icon={<GroupIcon fontSize=\"inherit\" />}\n              title=\"Contatos Válidos\"\n              value={validContacts}\n              loading={loading}\n            />\n          </Grid>\n          {campaign.confirmation && (\n            <>\n              <Grid xs={12} md={4} item>\n                <CardCounter\n                  icon={<DoneIcon fontSize=\"inherit\" />}\n                  title=\"Confirmações Solicitadas\"\n                  value={confirmationRequested}\n                  loading={loading}\n                />\n              </Grid>\n              <Grid xs={12} md={4} item>\n                <CardCounter\n                  icon={<DoneAllIcon fontSize=\"inherit\" />}\n                  title=\"Confirmações\"\n                  value={confirmed}\n                  loading={loading}\n                />\n              </Grid>\n            </>\n          )}\n          <Grid xs={12} md={4} item>\n            <CardCounter\n              icon={<CheckCircleIcon fontSize=\"inherit\" />}\n              title=\"Entregues\"\n              value={delivered}\n              loading={loading}\n            />\n          </Grid>\n          {campaign.whatsappId && (\n            <Grid xs={12} md={4} item>\n              <CardCounter\n                icon={<WhatsAppIcon fontSize=\"inherit\" />}\n                title=\"Conexão\"\n                value={campaign.whatsapp.name}\n                loading={loading}\n              />\n            </Grid>\n          )}\n          {campaign.contactListId && (\n            <Grid xs={12} md={4} item>\n              <CardCounter\n                icon={<ListAltIcon fontSize=\"inherit\" />}\n                title=\"Lista de Contatos\"\n                value={campaign.contactList.name}\n                loading={loading}\n              />\n            </Grid>\n          )}\n          <Grid xs={12} md={4} item>\n            <CardCounter\n              icon={<ScheduleIcon fontSize=\"inherit\" />}\n              title=\"Agendamento\"\n              value={datetimeToClient(campaign.scheduledAt)}\n              loading={loading}\n            />\n          </Grid>\n          <Grid xs={12} md={4} item>\n            <CardCounter\n              icon={<EventAvailableIcon fontSize=\"inherit\" />}\n              title=\"Conclusão\"\n              value={datetimeToClient(campaign.completedAt)}\n              loading={loading}\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n    </MainContainer>\n  );\n};\n\nexport default CampaignReport;\n","import React, { useState, useEffect, useRef } from \"react\";\n\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field } from \"formik\";\nimport { toast } from \"react-toastify\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport AttachFileIcon from \"@material-ui/icons/AttachFile\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport { i18n } from \"../../translate/i18n\";\nimport { head } from \"lodash\";\n\nimport api from \"../../services/api\";\nimport toastError from \"../../errors/toastError\";\nimport {\n  FormControl,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\nimport ConfirmationModal from \"../ConfirmationModal\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  multFieldLine: {\n    display: \"flex\",\n    \"& > *:not(:last-child)\": {\n      marginRight: theme.spacing(1),\n    },\n  },\n\n  btnWrapper: {\n    position: \"relative\",\n  },\n\n  buttonProgress: {\n    color: green[500],\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  colorAdorment: {\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst AnnouncementSchema = Yup.object().shape({\n  title: Yup.string().required(\"Obrigatório\"),\n  text: Yup.string().required(\"Obrigatório\"),\n});\n\nconst AnnouncementModal = ({ open, onClose, announcementId, reload }) => {\n  const classes = useStyles();\n\n  const initialState = {\n    title: \"\",\n    text: \"\",\n    priority: 3,\n    status: true,\n  };\n\n  const [confirmationOpen, setConfirmationOpen] = useState(false);\n  const [announcement, setAnnouncement] = useState(initialState);\n  const [attachment, setAttachment] = useState(null);\n  const attachmentFile = useRef(null);\n\n  useEffect(() => {\n    try {\n      (async () => {\n        if (!announcementId) return;\n\n        const { data } = await api.get(`/announcements/${announcementId}`);\n        setAnnouncement((prevState) => {\n          return { ...prevState, ...data };\n        });\n      })();\n    } catch (err) {\n      toastError(err);\n    }\n  }, [announcementId, open]);\n\n  const handleClose = () => {\n    setAnnouncement(initialState);\n    setAttachment(null);\n    onClose();\n  };\n\n  const handleAttachmentFile = (e) => {\n    const file = head(e.target.files);\n    if (file) {\n      setAttachment(file);\n    }\n  };\n\n  const handleSaveAnnouncement = async (values) => {\n    const announcementData = { ...values };\n    try {\n      if (announcementId) {\n        await api.put(`/announcements/${announcementId}`, announcementData);\n        if (attachment != null) {\n          const formData = new FormData();\n          formData.append(\"file\", attachment);\n          await api.post(\n            `/announcements/${announcementId}/media-upload`,\n            formData\n          );\n        }\n      } else {\n        const { data } = await api.post(\"/announcements\", announcementData);\n        if (attachment != null) {\n          const formData = new FormData();\n          formData.append(\"file\", attachment);\n          await api.post(`/announcements/${data.id}/media-upload`, formData);\n        }\n      }\n      toast.success(i18n.t(\"announcements.toasts.success\"));\n      if (typeof reload == \"function\") {\n        reload();\n      }\n    } catch (err) {\n      toastError(err);\n    }\n    handleClose();\n  };\n\n  const deleteMedia = async () => {\n    if (attachment) {\n      setAttachment(null);\n      attachmentFile.current.value = null;\n    }\n\n    if (announcement.mediaPath) {\n      await api.delete(`/announcements/${announcement.id}/media-upload`);\n      setAnnouncement((prev) => ({\n        ...prev,\n        mediaPath: null,\n      }));\n      toast.success(i18n.t(\"announcements.toasts.deleted\"));\n      if (typeof reload == \"function\") {\n        reload();\n      }\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <ConfirmationModal\n        title={i18n.t(\"announcements.confirmationModal.deleteTitle\")}\n        open={confirmationOpen}\n        onClose={() => setConfirmationOpen(false)}\n        onConfirm={deleteMedia}\n      >\n        {i18n.t(\"announcements.confirmationModal.deleteMessage\")}\n      </ConfirmationModal>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        maxWidth=\"xs\"\n        fullWidth\n        scroll=\"paper\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          {announcementId\n            ? `${i18n.t(\"announcements.dialog.edit\")}`\n            : `${i18n.t(\"announcements.dialog.add\")}`}\n        </DialogTitle>\n        <div style={{ display: \"none\" }}>\n          <input\n            type=\"file\"\n            accept=\".png,.jpg,.jpeg\"\n            ref={attachmentFile}\n            onChange={(e) => handleAttachmentFile(e)}\n          />\n        </div>\n        <Formik\n          initialValues={announcement}\n          enableReinitialize={true}\n          validationSchema={AnnouncementSchema}\n          onSubmit={(values, actions) => {\n            setTimeout(() => {\n              handleSaveAnnouncement(values);\n              actions.setSubmitting(false);\n            }, 400);\n          }}\n        >\n          {({ touched, errors, isSubmitting, values }) => (\n            <Form>\n              <DialogContent dividers>\n                <Grid spacing={2} container>\n                  <Grid xs={12} item>\n                    <Field\n                      as={TextField}\n                      label={i18n.t(\"announcements.dialog.form.title\")}\n                      name=\"title\"\n                      error={touched.title && Boolean(errors.title)}\n                      helperText={touched.title && errors.title}\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid xs={12} item>\n                    <Field\n                      as={TextField}\n                      label={i18n.t(\"announcements.dialog.form.text\")}\n                      name=\"text\"\n                      error={touched.text && Boolean(errors.text)}\n                      helperText={touched.text && errors.text}\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      multiline={true}\n                      rows={7}\n                      fullWidth\n                    />\n                  </Grid>\n                  <Grid xs={12} item>\n                    <FormControl variant=\"outlined\" margin=\"dense\" fullWidth>\n                      <InputLabel id=\"status-selection-label\">\n                        {i18n.t(\"announcements.dialog.form.status\")}\n                      </InputLabel>\n                      <Field\n                        as={Select}\n                        label={i18n.t(\"announcements.dialog.form.status\")}\n                        placeholder={i18n.t(\"announcements.dialog.form.status\")}\n                        labelId=\"status-selection-label\"\n                        id=\"status\"\n                        name=\"status\"\n                        error={touched.status && Boolean(errors.status)}\n                      >\n                        <MenuItem value={true}>Ativo</MenuItem>\n                        <MenuItem value={false}>Inativo</MenuItem>\n                      </Field>\n                    </FormControl>\n                  </Grid>\n                  <Grid xs={12} item>\n                    <FormControl variant=\"outlined\" margin=\"dense\" fullWidth>\n                      <InputLabel id=\"priority-selection-label\">\n                        {i18n.t(\"announcements.dialog.form.priority\")}\n                      </InputLabel>\n                      <Field\n                        as={Select}\n                        label={i18n.t(\"announcements.dialog.form.priority\")}\n                        placeholder={i18n.t(\n                          \"announcements.dialog.form.priority\"\n                        )}\n                        labelId=\"priority-selection-label\"\n                        id=\"priority\"\n                        name=\"priority\"\n                        error={touched.priority && Boolean(errors.priority)}\n                      >\n                        <MenuItem value={1}>Alta</MenuItem>\n                        <MenuItem value={2}>Média</MenuItem>\n                        <MenuItem value={3}>Baixa</MenuItem>\n                      </Field>\n                    </FormControl>\n                  </Grid>\n                  {(announcement.mediaPath || attachment) && (\n                    <Grid xs={12} item>\n                      <Button startIcon={<AttachFileIcon />}>\n                        {attachment ? attachment.name : announcement.mediaName}\n                      </Button>\n                      <IconButton\n                        onClick={() => setConfirmationOpen(true)}\n                        color=\"secondary\"\n                      >\n                        <DeleteOutlineIcon />\n                      </IconButton>\n                    </Grid>\n                  )}\n                </Grid>\n              </DialogContent>\n              <DialogActions>\n                {!attachment && !announcement.mediaPath && (\n                  <Button\n                    color=\"primary\"\n                    onClick={() => attachmentFile.current.click()}\n                    disabled={isSubmitting}\n                    variant=\"outlined\"\n                  >\n                    {i18n.t(\"announcements.dialog.buttons.attach\")}\n                  </Button>\n                )}\n                <Button\n                  onClick={handleClose}\n                  color=\"secondary\"\n                  disabled={isSubmitting}\n                  variant=\"outlined\"\n                >\n                  {i18n.t(\"announcements.dialog.buttons.cancel\")}\n                </Button>\n                <Button\n                  type=\"submit\"\n                  color=\"primary\"\n                  disabled={isSubmitting}\n                  variant=\"contained\"\n                  className={classes.btnWrapper}\n                >\n                  {announcementId\n                    ? `${i18n.t(\"announcements.dialog.buttons.add\")}`\n                    : `${i18n.t(\"announcements.dialog.buttons.edit\")}`}\n                  {isSubmitting && (\n                    <CircularProgress\n                      size={24}\n                      className={classes.buttonProgress}\n                    />\n                  )}\n                </Button>\n              </DialogActions>\n            </Form>\n          )}\n        </Formik>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default AnnouncementModal;\n","import React, { useState, useEffect, useReducer, useContext } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nimport MainContainer from \"../../components/MainContainer\";\nimport MainHeader from \"../../components/MainHeader\";\nimport Title from \"../../components/Title\";\n\nimport api from \"../../services/api\";\nimport { i18n } from \"../../translate/i18n\";\nimport TableRowSkeleton from \"../../components/TableRowSkeleton\";\nimport AnnouncementModal from \"../../components/AnnouncementModal\";\nimport ConfirmationModal from \"../../components/ConfirmationModal\";\nimport toastError from \"../../errors/toastError\";\nimport { Grid } from \"@material-ui/core\";\nimport { isArray } from \"lodash\";\nimport { socketConnection } from \"../../services/socket\";\n\n\n\n\nconst reducer = (state, action) => {\n  if (action.type === \"LOAD_ANNOUNCEMENTS\") {\n    const announcements = action.payload;\n    const newAnnouncements = [];\n\n    if (isArray(announcements)) {\n      announcements.forEach((announcement) => {\n        const announcementIndex = state.findIndex(\n          (u) => u.id === announcement.id\n        );\n        if (announcementIndex !== -1) {\n          state[announcementIndex] = announcement;\n        } else {\n          newAnnouncements.push(announcement);\n        }\n      });\n    }\n\n    return [...state, ...newAnnouncements];\n  }\n\n  if (action.type === \"UPDATE_ANNOUNCEMENTS\") {\n    const announcement = action.payload;\n    const announcementIndex = state.findIndex((u) => u.id === announcement.id);\n\n    if (announcementIndex !== -1) {\n      state[announcementIndex] = announcement;\n      return [...state];\n    } else {\n      return [announcement, ...state];\n    }\n  }\n\n  if (action.type === \"DELETE_ANNOUNCEMENT\") {\n    const announcementId = action.payload;\n\n    const announcementIndex = state.findIndex((u) => u.id === announcementId);\n    if (announcementIndex !== -1) {\n      state.splice(announcementIndex, 1);\n    }\n    return [...state];\n  }\n\n  if (action.type === \"RESET\") {\n    return [];\n  }\n};\n\nconst useStyles = makeStyles((theme) => ({\n  mainPaper: {\n    flex: 1,\n    padding: theme.spacing(1),\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n}));\n\nconst Announcements = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const { user } = useContext(AuthContext);\n\n  const [loading, setLoading] = useState(false);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [hasMore, setHasMore] = useState(false);\n  const [selectedAnnouncement, setSelectedAnnouncement] = useState(null);\n  const [deletingAnnouncement, setDeletingAnnouncement] = useState(null);\n  const [announcementModalOpen, setAnnouncementModalOpen] = useState(false);\n  const [confirmModalOpen, setConfirmModalOpen] = useState(false);\n  const [searchParam, setSearchParam] = useState(\"\");\n  const [announcements, dispatch] = useReducer(reducer, []);\n\n\n  // trava para nao acessar pagina que não pode  \nuseEffect(() => {\n  async function fetchData() {\n    if (!user.super) {\n      toast.error(\"Esta empresa não possui permissão para acessar essa página! Estamos lhe redirecionando.\");\n      setTimeout(() => {\n        history.push(`/`)\n      }, 1000);\n    }\n  }\n  fetchData();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n}, []);\n\n\n\n\n\n  useEffect(() => {\n    dispatch({ type: \"RESET\" });\n    setPageNumber(1);\n  }, [searchParam]);\n\n  useEffect(() => {\n    setLoading(true);\n    const delayDebounceFn = setTimeout(() => {\n      fetchAnnouncements();\n    }, 500);\n    return () => clearTimeout(delayDebounceFn);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchParam, pageNumber]);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketConnection({ companyId });\n\n    socket.on(`company-announcement`, (data) => {\n      if (data.action === \"update\" || data.action === \"create\") {\n        dispatch({ type: \"UPDATE_ANNOUNCEMENTS\", payload: data.record });\n      }\n      if (data.action === \"delete\") {\n        dispatch({ type: \"DELETE_ANNOUNCEMENT\", payload: +data.id });\n      }\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  const fetchAnnouncements = async () => {\n    try {\n      const { data } = await api.get(\"/announcements/\", {\n        params: { searchParam, pageNumber },\n      });\n      dispatch({ type: \"LOAD_ANNOUNCEMENTS\", payload: data.records });\n      setHasMore(data.hasMore);\n      setLoading(false);\n    } catch (err) {\n      toastError(err);\n    }\n  };\n\n  const handleOpenAnnouncementModal = () => {\n    setSelectedAnnouncement(null);\n    setAnnouncementModalOpen(true);\n  };\n\n  const handleCloseAnnouncementModal = () => {\n    setSelectedAnnouncement(null);\n    setAnnouncementModalOpen(false);\n  };\n\n  const handleSearch = (event) => {\n    setSearchParam(event.target.value.toLowerCase());\n  };\n\n  const handleEditAnnouncement = (announcement) => {\n    setSelectedAnnouncement(announcement);\n    setAnnouncementModalOpen(true);\n  };\n\n  const handleDeleteAnnouncement = async (announcementId) => {\n    try {\n      await api.delete(`/announcements/${announcementId}`);\n      toast.success(i18n.t(\"announcements.toasts.deleted\"));\n    } catch (err) {\n      toastError(err);\n    }\n    setDeletingAnnouncement(null);\n    setSearchParam(\"\");\n    setPageNumber(1);\n  };\n\n  const loadMore = () => {\n    setPageNumber((prevState) => prevState + 1);\n  };\n\n  const handleScroll = (e) => {\n    if (!hasMore || loading) return;\n    const { scrollTop, scrollHeight, clientHeight } = e.currentTarget;\n    if (scrollHeight - (scrollTop + 100) < clientHeight) {\n      loadMore();\n    }\n  };\n\n  const translatePriority = (val) => {\n    if (val === 1) {\n      return \"Alta\";\n    }\n    if (val === 2) {\n      return \"Média\";\n    }\n    if (val === 3) {\n      return \"Baixa\";\n    }\n  };\n\n  return (\n    <MainContainer>\n      <ConfirmationModal\n        title={\n          deletingAnnouncement &&\n          `${i18n.t(\"announcements.confirmationModal.deleteTitle\")} ${\n            deletingAnnouncement.name\n          }?`\n        }\n        open={confirmModalOpen}\n        onClose={setConfirmModalOpen}\n        onConfirm={() => handleDeleteAnnouncement(deletingAnnouncement.id)}\n      >\n        {i18n.t(\"announcements.confirmationModal.deleteMessage\")}\n      </ConfirmationModal>\n      <AnnouncementModal\n        resetPagination={() => {\n          setPageNumber(1);\n          fetchAnnouncements();\n        }}\n        open={announcementModalOpen}\n        onClose={handleCloseAnnouncementModal}\n        aria-labelledby=\"form-dialog-title\"\n        announcementId={selectedAnnouncement && selectedAnnouncement.id}\n      />\n      <MainHeader>\n        <Grid style={{ width: \"99.6%\" }} container>\n          <Grid xs={12} sm={8} item>\n            <Title>{i18n.t(\"announcements.title\")}</Title>\n          </Grid>\n          <Grid xs={12} sm={4} item>\n            <Grid spacing={2} container>\n              <Grid xs={6} sm={6} item>\n                <TextField\n                  fullWidth\n                  placeholder={i18n.t(\"announcements.searchPlaceholder\")}\n                  type=\"search\"\n                  value={searchParam}\n                  onChange={handleSearch}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <SearchIcon style={{ color: \"gray\" }} />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid xs={6} sm={6} item>\n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  onClick={handleOpenAnnouncementModal}\n                  color=\"primary\"\n                >\n                  {i18n.t(\"announcements.buttons.add\")}\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </MainHeader>\n      <Paper\n        className={classes.mainPaper}\n        variant=\"outlined\"\n        onScroll={handleScroll}\n      >\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">\n                {i18n.t(\"announcements.table.title\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"announcements.table.priority\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"announcements.table.mediaName\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"announcements.table.status\")}\n              </TableCell>\n              <TableCell align=\"center\">\n                {i18n.t(\"announcements.table.actions\")}\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <>\n              {announcements.map((announcement) => (\n                <TableRow key={announcement.id}>\n                  <TableCell align=\"center\">{announcement.title}</TableCell>\n                  <TableCell align=\"center\">\n                    {translatePriority(announcement.priority)}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {announcement.mediaName ?? \"Sem anexo\"}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {announcement.status ? \"ativo\" : \"inativo\"}\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => handleEditAnnouncement(announcement)}\n                    >\n                      <EditIcon />\n                    </IconButton>\n\n                    <IconButton\n                      size=\"small\"\n                      onClick={(e) => {\n                        setConfirmModalOpen(true);\n                        setDeletingAnnouncement(announcement);\n                      }}\n                    >\n                      <DeleteOutlineIcon />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n              {loading && <TableRowSkeleton columns={5} />}\n            </>\n          </TableBody>\n        </Table>\n      </Paper>\n    </MainContainer>\n  );\n};\n\n\n\n\n\nexport default Announcements;\n","import React, { useContext, useState } from \"react\";\nimport {\n  Chip,\n  IconButton,\n  List,\n  ListItem,\n  ListItemSecondaryAction,\n  ListItemText,\n  makeStyles,\n} from \"@material-ui/core\";\n\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { useDate } from \"../../hooks/useDate\";\nimport Typography from '@material-ui/core/Typography';\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nimport ConfirmationModal from \"../../components/ConfirmationModal\";\nimport api from \"../../services/api\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    position: \"relative\",\n    flex: 1,\n    height: \"calc(100% - 58px)\",\n    overflow: \"hidden\",\n    borderRadius: 0,\n  },\n  chatList: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    position: \"relative\",\n    flex: 1,\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n  listItem: {\n    cursor: \"pointer\",\n  },\n  inline: {\n    color: \"white\"\n  }\n}));\n\nexport default function ChatList({\n  chats,\n  handleSelectChat,\n  handleDeleteChat,\n  handleEditChat,\n  pageInfo,\n  loading,\n}) {\n  const classes = useStyles();\n  const history = useHistory();\n  const { user } = useContext(AuthContext);\n  const { datetimeToClient } = useDate();\n\n  const [confirmationModal, setConfirmModalOpen] = useState(false);\n  const [selectedChat, setSelectedChat] = useState({});\n\n  const { id } = useParams();\n\n  const goToMessages = async (chat) => {\n    if (unreadMessages(chat) > 0) {\n      try {\n        await api.post(`/chats/${chat.id}/read`, { userId: user.id });\n      } catch (err) { }\n    }\n\n    if (id !== chat.uuid) {\n      history.push(`/chats/${chat.uuid}`);\n      handleSelectChat(chat);\n    }\n  };\n\n  const handleDelete = () => {\n    handleDeleteChat(selectedChat);\n  };\n\n  const unreadMessages = (chat) => {\n    const currentUser = chat.users.find((u) => u.userId === user.id);\n    return currentUser.unreads;\n  };\n\n  const getPrimaryText = (chat) => {\n    const mainText = chat.title;\n    const unreads = unreadMessages(chat);\n    return (\n      <>\n        {mainText}\n        {unreads > 0 && (\n          <Chip\n            size=\"small\"\n            style={{ marginLeft: 5 }}\n            label={unreads}\n            color=\"secondary\"\n          />\n        )}\n      </>\n    );\n  };\n\n  const getSecondaryText = (chat) => {\n    return chat.lastMessage !== \"\"\n      ? `${datetimeToClient(chat.updatedAt)}: ${chat.lastMessage}`\n      : \"\";\n  };\n\n  const getItemStyle = (chat) => {\n    return {\n      borderLeft: chat.uuid === id ? \"6px solid #002d6e\" : null,\n      backgroundColor: chat.uuid === id ? \"#7f7f7f\" : null,\n    };\n  };\n\n  return (\n    <>\n      <ConfirmationModal\n        title={\"Excluir Conversa\"}\n        open={confirmationModal}\n        onClose={setConfirmModalOpen}\n        onConfirm={handleDelete}\n      >\n        Esta ação não pode ser revertida, confirmar?\n      </ConfirmationModal>\n      <div className={classes.mainContainer}>\n        <div className={classes.chatList}>\n          <List>\n            {Array.isArray(chats) &&\n              chats.length > 0 &&\n              chats.map((chat, key) => (\n                <ListItem\n                  onClick={() => goToMessages(chat)}\n                  key={key}\n                  className={classes.listItem}\n                  style={getItemStyle(chat)}\n                  button\n                >\n                  <ListItemText\n                    primary={\n                      <>\n                        <Typography\n                          component=\"span\"\n                          variant=\"body2\"\n                          className={classes.inline}\n                          color=\"textPrimary\"\n                        >\n                          {getPrimaryText(chat)}\n                        </Typography>\n                      </>\n                    }\n                    secondary={\n                      <>\n                        <Typography\n                          component=\"span\"\n                          variant=\"body2\"\n                          className={classes.inline}\n                          color=\"textPrimary\"\n                        >\n                          {getSecondaryText(chat)}\n                        </Typography>\n                      </>\n                    }\n                  />\n\n                  {chat.ownerId === user.id && (\n                    <ListItemSecondaryAction>\n                      <IconButton\n                        onClick={() => {\n                          goToMessages(chat).then(() => {\n                            handleEditChat(chat);\n                          });\n                        }}\n                        edge=\"end\"\n                        aria-label=\"delete\"\n                        size=\"small\"\n                        style={{ marginRight: 5, color: \"white\" }}\n                      >\n                        <EditIcon />\n                      </IconButton>\n                      <IconButton\n                        onClick={() => {\n                          setSelectedChat(chat);\n                          setConfirmModalOpen(true);\n                        }}\n                        edge=\"end\"\n                        aria-label=\"delete\"\n                        size=\"small\"\n                        style={{ color: \"white\" }}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </ListItemSecondaryAction>\n                  )}\n                </ListItem>\n              ))}\n          </List>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport {\n  Box,\n  FormControl,\n  IconButton,\n  Input,\n  InputAdornment,\n  makeStyles,\n  Paper,\n  Typography,\n} from \"@material-ui/core\";\nimport SendIcon from \"@material-ui/icons/Send\";\n\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { useDate } from \"../../hooks/useDate\";\nimport api from \"../../services/api\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    position: \"relative\",\n    flex: 1,\n    overflow: \"hidden\",\n    borderRadius: 0,\n    height: \"100%\",\n    borderLeft: \"1px solid rgba(0, 0, 0, 0.12)\",\n    // backgroundColor: theme.mode === 'light' ? \"#f2f2f2\" : \"#7f7f7f\",\n  },\n  messageList: {\n    position: \"relative\",\n    overflowY: \"auto\",\n    height: \"100%\",\n    ...theme.scrollbarStyles,\n    background: theme.palette.total,\n  },\n  inputArea: {\n    position: \"relative\",\n    height: \"auto\",\n  },\n  input: {\n    padding: \"20px\",\n  },\n  buttonSend: {\n    margin: theme.spacing(1),\n  },\n  boxLeft: {\n    padding: \"10px 10px 5px\",\n    margin: \"10px\",\n    position: \"relative\",\n    backgroundColor: \"white\",\n    color: \"#7f7f7f\",\n    maxWidth: 300,\n    borderRadius: 10,\n    borderBottomLeftRadius: 0,\n    border: \"1px solid rgba(0, 0, 0, 0.12)\",\n  },\n  boxRight: {\n    padding: \"10px 10px 5px\",\n    margin: \"10px 10px 10px auto\",\n    position: \"relative\",\n    backgroundColor: \"#E3F3F9\",\n    color: \"#7f7f7f\",\n    textAlign: \"right\",\n    maxWidth: 300,\n    borderRadius: 10,\n    borderBottomRightRadius: 0,\n    border: \"1px solid rgba(0, 0, 0, 0.12)\",\n  },\n}));\n\nexport default function ChatMessages({\n  chat,\n  messages,\n  handleSendMessage,\n  handleLoadMore,\n  scrollToBottomRef,\n  pageInfo,\n  loading,\n}) {\n  const classes = useStyles();\n  const { user } = useContext(AuthContext);\n  const { datetimeToClient } = useDate();\n  const baseRef = useRef();\n\n  const [contentMessage, setContentMessage] = useState(\"\");\n\n  const scrollToBottom = () => {\n    if (baseRef.current) {\n      baseRef.current.scrollIntoView({});\n    }\n  };\n\n  const unreadMessages = (chat) => {\n    if (chat !== undefined) {\n      const currentUser = chat.users.find((u) => u.userId === user.id);\n      return currentUser.unreads > 0;\n    }\n    return 0;\n  };\n\n  useEffect(() => {\n    if (unreadMessages(chat) > 0) {\n      try {\n        api.post(`/chats/${chat.id}/read`, { userId: user.id });\n      } catch (err) {}\n    }\n    scrollToBottomRef.current = scrollToBottom;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleScroll = (e) => {\n    const { scrollTop } = e.currentTarget;\n    if (!pageInfo.hasMore || loading) return;\n    if (scrollTop < 600) {\n      handleLoadMore();\n    }\n  };\n\n  return (\n    <Paper className={classes.mainContainer}>\n      <div onScroll={handleScroll} className={classes.messageList}>\n        {Array.isArray(messages) &&\n          messages.map((item, key) => {\n            if (item.senderId === user.id) {\n              return (\n                <Box key={key} className={classes.boxRight}>\n                  <Typography variant=\"subtitle2\">\n                    {item.sender.name}\n                  </Typography>\n                  {item.message}\n                  <Typography variant=\"caption\" display=\"block\">\n                    {datetimeToClient(item.createdAt)}\n                  </Typography>\n                </Box>\n              );\n            } else {\n              return (\n                <Box key={key} className={classes.boxLeft}>\n                  <Typography variant=\"subtitle2\">\n                    {item.sender.name}\n                  </Typography>\n                  {item.message}\n                  <Typography variant=\"caption\" display=\"block\">\n                    {datetimeToClient(item.createdAt)}\n                  </Typography>\n                </Box>\n              );\n            }\n          })}\n        <div ref={baseRef}></div>\n      </div>\n      <div className={classes.inputArea}>\n        <FormControl variant=\"outlined\" fullWidth>\n          <Input\n            multiline\n            value={contentMessage}\n            onKeyUp={(e) => {\n              if (e.key === \"Enter\" && contentMessage.trim() !== \"\") {\n                handleSendMessage(contentMessage);\n                setContentMessage(\"\");\n              }\n            }}\n            onChange={(e) => setContentMessage(e.target.value)}\n            className={classes.input}\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton\n                  onClick={() => {\n                    if (contentMessage.trim() !== \"\") {\n                      handleSendMessage(contentMessage);\n                      setContentMessage(\"\");\n                    }\n                  }}\n                  className={classes.buttonSend}\n                >\n                  <SendIcon />\n                </IconButton>\n              </InputAdornment>\n            }\n          />\n        </FormControl>\n      </div>\n    </Paper>\n  );\n}\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\n\nimport { useParams, useHistory } from \"react-router-dom\";\n\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  makeStyles,\n  Paper,\n  Tab,\n  Tabs,\n  TextField,\n} from \"@material-ui/core\";\nimport ChatList from \"./ChatList\";\nimport ChatMessages from \"./ChatMessages\";\nimport { UsersFilter } from \"../../components/UsersFilter\";\nimport api from \"../../services/api\";\nimport { socketConnection } from \"../../services/socket\";\n\nimport { has, isObject } from \"lodash\";\n\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport withWidth, { isWidthUp } from \"@material-ui/core/withWidth\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    position: \"relative\",\n    flex: 1,\n    padding: theme.spacing(2),\n    height: `calc(100% - 48px)`,\n    overflowY: \"hidden\",\n    border: \"1px solid rgba(0, 0, 0, 0.12)\",\n  },\n  gridContainer: {\n    flex: 1,\n    height: \"100%\",\n    border: \"1px solid rgba(0, 0, 0, 0.12)\",\n    background: theme.palette.total,\n  },\n  gridItem: {\n    height: \"100%\",\n  },\n  gridItemTab: {\n    height: \"92%\",\n    width: \"100%\",\n  },\n  btnContainer: {\n    textAlign: \"right\",\n    padding: 10,\n  },\n}));\n\nexport function ChatModal({\n  open,\n  chat,\n  type,\n  handleClose,\n  handleLoadNewChat,\n}) {\n  const [users, setUsers] = useState([]);\n  const [title, setTitle] = useState(\"\");\n\n  useEffect(() => {\n    setTitle(\"\");\n    setUsers([]);\n    if (type === \"edit\") {\n      const userList = chat.users.map((u) => ({\n        id: u.user.id,\n        name: u.user.name,\n      }));\n      setUsers(userList);\n      setTitle(chat.title);\n    }\n  }, [chat, open, type]);\n\n  const handleSave = async () => {\n    try {\n      if (type === \"edit\") {\n        await api.put(`/chats/${chat.id}`, {\n          users,\n          title,\n        });\n      } else {\n        const { data } = await api.post(\"/chats\", {\n          users,\n          title,\n        });\n        handleLoadNewChat(data);\n      }\n      handleClose();\n    } catch (err) {}\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">Conversa</DialogTitle>\n      <DialogContent>\n        <Grid spacing={2} container>\n          <Grid xs={12} style={{ padding: 18 }} item>\n            <TextField\n              label=\"Título\"\n              placeholder=\"Título\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n              variant=\"outlined\"\n              size=\"small\"\n              fullWidth\n            />\n          </Grid>\n          <Grid xs={12} item>\n            <UsersFilter\n              onFiltered={(users) => setUsers(users)}\n              initialUsers={users}\n            />\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Fechar\n        </Button>\n        <Button onClick={handleSave} color=\"primary\" variant=\"contained\">\n          Salvar\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nfunction Chat(props) {\n  const classes = useStyles();\n  const { user } = useContext(AuthContext);\n  const history = useHistory();\n\n  const [showDialog, setShowDialog] = useState(false);\n  const [dialogType, setDialogType] = useState(\"new\");\n  const [currentChat, setCurrentChat] = useState({});\n  const [chats, setChats] = useState([]);\n  const [chatsPageInfo, setChatsPageInfo] = useState({ hasMore: false });\n  const [messages, setMessages] = useState([]);\n  const [messagesPageInfo, setMessagesPageInfo] = useState({ hasMore: false });\n  const [messagesPage, setMessagesPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [tab, setTab] = useState(0);\n  const isMounted = useRef(true);\n  const scrollToBottomRef = useRef();\n  const { id } = useParams();\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    if (isMounted.current) {\n      findChats().then((data) => {\n        const { records } = data;\n        if (records.length > 0) {\n          setChats(records);\n          setChatsPageInfo(data);\n\n          if (id && records.length) {\n            const chat = records.find((r) => r.uuid === id);\n            selectChat(chat);\n          }\n        }\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (isObject(currentChat) && has(currentChat, \"id\")) {\n      findMessages(currentChat.id).then(() => {\n        if (typeof scrollToBottomRef.current === \"function\") {\n          setTimeout(() => {\n            scrollToBottomRef.current();\n          }, 300);\n        }\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentChat]);\n\n  useEffect(() => {\n    const companyId = localStorage.getItem(\"companyId\");\n    const socket = socketConnection({ companyId });\n\n    socket.on(`company-${companyId}-chat-user-${user.id}`, (data) => {\n      if (data.action === \"create\") {\n        setChats((prev) => [data.record, ...prev]);\n      }\n      if (data.action === \"update\") {\n        const changedChats = chats.map((chat) => {\n          if (chat.id === data.record.id) {\n            setCurrentChat(data.record);\n            return {\n              ...data.record,\n            };\n          }\n          return chat;\n        });\n        setChats(changedChats);\n      }\n    });\n\n    socket.on(`company-${companyId}-chat`, (data) => {\n      if (data.action === \"delete\") {\n        const filteredChats = chats.filter((c) => c.id !== +data.id);\n        setChats(filteredChats);\n        setMessages([]);\n        setMessagesPage(1);\n        setMessagesPageInfo({ hasMore: false });\n        setCurrentChat({});\n        history.push(\"/chats\");\n      }\n    });\n\n    if (isObject(currentChat) && has(currentChat, \"id\")) {\n      socket.on(`company-${companyId}-chat-${currentChat.id}`, (data) => {\n        if (data.action === \"new-message\") {\n          setMessages((prev) => [...prev, data.newMessage]);\n          const changedChats = chats.map((chat) => {\n            if (chat.id === data.newMessage.chatId) {\n              return {\n                ...data.chat,\n              };\n            }\n            return chat;\n          });\n          setChats(changedChats);\n          scrollToBottomRef.current();\n        }\n\n        if (data.action === \"update\") {\n          const changedChats = chats.map((chat) => {\n            if (chat.id === data.chat.id) {\n              return {\n                ...data.chat,\n              };\n            }\n            return chat;\n          });\n          setChats(changedChats);\n          scrollToBottomRef.current();\n        }\n      });\n    }\n\n    return () => {\n      socket.disconnect();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentChat]);\n\n  const selectChat = (chat) => {\n    try {\n      setMessages([]);\n      setMessagesPage(1);\n      setCurrentChat(chat);\n      setTab(1);\n    } catch (err) {}\n  };\n\n  const sendMessage = async (contentMessage) => {\n    setLoading(true);\n    try {\n      await api.post(`/chats/${currentChat.id}/messages`, {\n        message: contentMessage,\n      });\n    } catch (err) {}\n    setLoading(false);\n  };\n\n  const deleteChat = async (chat) => {\n    try {\n      await api.delete(`/chats/${chat.id}`);\n    } catch (err) {}\n  };\n\n  const findMessages = async (chatId) => {\n    setLoading(true);\n    try {\n      const { data } = await api.get(\n        `/chats/${chatId}/messages?pageNumber=${messagesPage}`\n      );\n      setMessagesPage((prev) => prev + 1);\n      setMessagesPageInfo(data);\n      setMessages((prev) => [...data.records, ...prev]);\n    } catch (err) {}\n    setLoading(false);\n  };\n\n  const loadMoreMessages = async () => {\n    if (!loading) {\n      findMessages(currentChat.id);\n    }\n  };\n\n  const findChats = async () => {\n    try {\n      const { data } = await api.get(\"/chats\");\n      return data;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const renderGrid = () => {\n    return (\n      <Grid className={classes.gridContainer} container>\n        <Grid className={classes.gridItem} md={3} item>\n          {user.profile === \"admin\" && (\n            <div className={classes.btnContainer}>\n              <Button\n                onClick={() => {\n                  setDialogType(\"new\");\n                  setShowDialog(true);\n                }}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Nova\n              </Button>\n            </div>\n          )}\n          <ChatList\n            chats={chats}\n            pageInfo={chatsPageInfo}\n            loading={loading}\n            handleSelectChat={(chat) => selectChat(chat)}\n            handleDeleteChat={(chat) => deleteChat(chat)}\n            handleEditChat={() => {\n              setDialogType(\"edit\");\n              setShowDialog(true);\n            }}\n          />\n        </Grid>\n        <Grid className={classes.gridItem} md={9} item>\n          {isObject(currentChat) && has(currentChat, \"id\") && (\n            <ChatMessages\n              chat={currentChat}\n              scrollToBottomRef={scrollToBottomRef}\n              pageInfo={messagesPageInfo}\n              messages={messages}\n              loading={loading}\n              handleSendMessage={sendMessage}\n              handleLoadMore={loadMoreMessages}\n            />\n          )}\n        </Grid>\n      </Grid>\n    );\n  };\n\n  const renderTab = () => {\n    return (\n      <Grid className={classes.gridContainer} container>\n        <Grid md={12} item>\n          <Tabs\n            value={tab}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            onChange={(e, v) => setTab(v)}\n            aria-label=\"disabled tabs example\"\n          >\n            <Tab label=\"Chats\" />\n            <Tab label=\"Mensagens\" />\n          </Tabs>\n        </Grid>\n        {tab === 0 && (\n          <Grid className={classes.gridItemTab} md={12} item>\n            <div className={classes.btnContainer}>\n              <Button\n                onClick={() => setShowDialog(true)}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Novo\n              </Button>\n            </div>\n            <ChatList\n              chats={chats}\n              pageInfo={chatsPageInfo}\n              loading={loading}\n              handleSelectChat={(chat) => selectChat(chat)}\n              handleDeleteChat={(chat) => deleteChat(chat)}\n            />\n          </Grid>\n        )}\n        {tab === 1 && (\n          <Grid className={classes.gridItemTab} md={12} item>\n            {isObject(currentChat) && has(currentChat, \"id\") && (\n              <ChatMessages\n                scrollToBottomRef={scrollToBottomRef}\n                pageInfo={messagesPageInfo}\n                messages={messages}\n                loading={loading}\n                handleSendMessage={sendMessage}\n                handleLoadMore={loadMoreMessages}\n              />\n            )}\n          </Grid>\n        )}\n      </Grid>\n    );\n  };\n\n  return (\n    <>\n      <ChatModal\n        type={dialogType}\n        open={showDialog}\n        chat={currentChat}\n        handleLoadNewChat={(data) => {\n          setMessages([]);\n          setMessagesPage(1);\n          setCurrentChat(data);\n          setTab(1);\n          history.push(`/chats/${data.uuid}`);\n        }}\n        handleClose={() => setShowDialog(false)}\n      />\n      <Paper className={classes.mainContainer}>\n        {isWidthUp(\"md\", props.width) ? renderGrid() : renderTab()}\n      </Paper>\n    </>\n  );\n}\n\nexport default withWidth()(Chat);\n","import React, { useState, useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\n\nimport SubscriptionModal from \"../../components/SubscriptionModal\";\nimport MainHeader from \"../../components/MainHeader\";\nimport Title from \"../../components/Title\";\nimport MainContainer from \"../../components/MainContainer\";\n\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainPaper: {\n    flex: 1,\n    padding: theme.spacing(1),\n    overflowY: \"scroll\",\n    ...theme.scrollbarStyles,\n  },\n}));\n\nconst _formatDate = (date) => {\n  const now = new Date();\n  const past = new Date(date);\n  const diff = Math.abs(now.getTime() - past.getTime());\n  const days = Math.ceil(diff / (1000 * 60 * 60 * 24));\n\n  return days;\n}\n\nconst Contacts = () => {\n  const classes = useStyles();\n  const { user } = useContext(AuthContext);\n\n  const [loading,] = useState(false);\n  const [, setPageNumber] = useState(1);\n  const [selectedContactId, setSelectedContactId] = useState(null);\n  const [contactModalOpen, setContactModalOpen] = useState(false);\n  const [hasMore,] = useState(false);\n\n\n  const handleOpenContactModal = () => {\n    setSelectedContactId(null);\n    setContactModalOpen(true);\n  };\n\n  const handleCloseContactModal = () => {\n    setSelectedContactId(null);\n    setContactModalOpen(false);\n  };\n\n  const loadMore = () => {\n    setPageNumber((prevState) => prevState + 1);\n  };\n\n  const handleScroll = (e) => {\n    if (!hasMore || loading) return;\n    const { scrollTop, scrollHeight, clientHeight } = e.currentTarget;\n    if (scrollHeight - (scrollTop + 100) < clientHeight) {\n      loadMore();\n    }\n  };\n\n  return (\n    <MainContainer className={classes.mainContainer}>\n      <SubscriptionModal\n        open={contactModalOpen}\n        onClose={handleCloseContactModal}\n        aria-labelledby=\"form-dialog-title\"\n        contactId={selectedContactId}\n      ></SubscriptionModal>\n\n      <MainHeader>\n        <Title>Assinatura</Title>\n      </MainHeader>\n      <Grid item xs={12} sm={4}>\n        <Paper\n          className={classes.mainPaper}\n          variant=\"outlined\"\n          onScroll={handleScroll}\n        >\n\n          <div>\n            <TextField\n              id=\"outlined-full-width\"\n              label=\"Período de teste\"\n              defaultValue={`Seu período de teste termina em ${_formatDate(user?.company?.trialExpiration)} dias!`}\n              fullWidth\n              margin=\"normal\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              InputProps={{\n                readOnly: true,\n              }}\n              variant=\"outlined\"\n            />\n\n          </div>\n\n          <div>\n            <TextField\n              id=\"outlined-full-width\"\n              label=\"Email de cobrança\"\n              defaultValue={user?.company?.email}\n              fullWidth\n              margin=\"normal\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              InputProps={{\n                readOnly: true,\n              }}\n              variant=\"outlined\"\n            />\n\n          </div>\n\n          <div>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleOpenContactModal}\n              fullWidth\n            >\n              Assine Agora!\n            </Button>\n          </div>\n\n        </Paper>\n      </Grid>\n    </MainContainer>\n  );\n};\n\nexport default Contacts;\n","import React, { useState, useEffect, useReducer, useContext, useCallback } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport api from \"../../services/api\";\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport Board from 'react-trello';\nimport { toast } from \"react-toastify\";\nimport { i18n } from \"../../translate/i18n\";\nimport { useHistory } from 'react-router-dom';\nimport { socketConnection } from \"../../services/socket\";\nimport toastError from \"../../errors/toastError\";\n\n/*\n\n\nCÓDIGO DESENVOLVIDO POR RAFAEL RIBEIRO\nPROÍBIDA A VENDA TOTAL OU PARCIAL DESTE CÓDIGO\nCONTATO: HELP@WHATICKET-SAAS.COM\nTELEFONE: +55 51 9323-1592\n\n\n*/\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(1),\n    overflowY: \"hidden\",\n  },\n\n  button: {\n    background: \"#10a110\",\n    border: \"none\",\n    padding: \"10px\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    borderRadius: \"5px\",\n  },\n\n}));\n\n\n\nconst Kanban = () => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [tags, setTags] = useState([]);\n  const [reloadData, setReloadData] = useState(false);\n  const [isInitialLoadComplete, setIsInitialLoadComplete] = useState(false);\n  const [file, setFile] = useState({ lanes: [] });\n  const [tickets, setTickets] = useState([]);\n  const { user } = useContext(AuthContext);\n  const { profile, queues } = user;\n  const jsonString = user.queues.map(queue => queue.UserQueue.queueId);\n\n\n\n  useEffect(() => {\n    popularCards(jsonString);\n  }, [tags, tickets, reloadData]);\n\n  useEffect(() => {\n    fetchTags();\n  }, []);\n\n  const fetchTags = async () => {\n    try {\n      const response = await api.get(\"/tags/kanban\");\n      const fetchedTags = response.data.lista || [];\n      //console.log(response);\n      setTags(fetchedTags);\n\n      // Fetch tickets after fetching tags\n      await fetchTickets(jsonString);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const fetchTickets = async (jsonString) => {\n    try {\n      const { data } = await api.get(\"/tickets/kanban\", {\n        params: {\n          queueIds: JSON.stringify(jsonString),\n          teste: true\n        }\n      });\n      setTickets(data.tickets);\n    } catch (err) {\n      console.log(err);\n      setTickets([]);\n    }\n  };\n\n  const handleCardClick = (uuid) => {\n    //console.log(\"Clicked on card with UUID:\", uuid);\n    history.push('/tickets/' + uuid);\n  };\n\n  const handleCardMove = async (cardId, sourceLaneId, targetLaneId) => {\n    try {\n\n      await api.delete(`/ticket-tags/${targetLaneId}`);\n      toast.success('Ticket Tag Removido!');\n      await api.put(`/ticket-tags/${targetLaneId}/${sourceLaneId}`);\n      toast.success('Ticket Tag Adicionado com Sucesso!');\n\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const popularCards = (jsonString) => {\n    const ticketsNaoAgrupados = tickets.filter(ticket => ticket.tags.length === 0 && !ticket.isGroup);\n\n    const tagsOrdenadas = tags.sort((a, b) => a.position - b.position);\n\n    const lanes = [\n      {\n        id: \"lane0\",\n        title: \"Em Aberto\",\n        style: {\n          maxHeight: '80vh',\n        },\n        cards: ticketsNaoAgrupados.map(ticket => ({\n          id: ticket.id.toString(),\n          label: \"Ticket nº \" + ticket.id.toString(),\n          description: (\n            <div>\n              <p>\n                {ticket.contact.number}\n                <br />\n                {ticket.lastMessage}\n              </p>\n              <button className={classes.button} onClick={() => handleCardClick(ticket.uuid)}>Ver Ticket</button>\n            </div>\n          ),\n          title: ticket.contact.name,\n          draggable: true,\n          href: \"/tickets/\" + ticket.uuid,\n        })),\n\n      },\n      ...tagsOrdenadas.map(tag => {\n        const ticketsFiltrados = tickets.filter(ticket => {\n          const tagIds = ticket.tags.map(tag => tag.id);\n          return tagIds.includes(tag.id);\n        });\n\n        return {\n          id: tag.id.toString(),\n          title: tag.name,\n          cards: ticketsFiltrados.map(ticket => ({\n            id: ticket.id.toString(),\n            label: \"Ticket nº \" + ticket.id.toString(),\n            description: (\n              <div>\n                <p>\n                  {ticket.contact.number}\n                  <br />\n                  {ticket.lastMessage}\n                </p>\n                <button className={classes.button} onClick={() => handleCardClick(ticket.uuid)}>Ver Ticket</button>\n              </div>\n            ),\n            title: ticket.contact.name,\n            draggable: true,\n            href: \"/tickets/\" + ticket.uuid,\n          })),\n          style: { maxHeight: '80vh', backgroundColor: tag.color, color: \"white\" }\n        };\n      }),\n    ];\n\n    setFile({ lanes });\n  };\n\n  const handleUpdateLanes = async (data) => {\n    try {\n\n      const { data: response } = await api.put(\"/tags/kanban\", data);\n\n    } catch (error) {\n      toastError('Falha ao alterar posições das lanes');\n    }\n  }\n\n\n\n  return (\n    <div className={classes.root}>\n      <Board\n        data={file}\n\n        handleLaneDragEnd={(board, sourceLaneId, targetLaneId) => {\n\n          const currentOrder = file.lanes;\n\n          function moverObjeto(antigoIndex, novoIndex) {\n\n            const objetoMovido = currentOrder.splice(antigoIndex, 1)[0];\n            currentOrder.splice(novoIndex, 0, objetoMovido);\n            return currentOrder;\n          }\n\n          const newOrder = moverObjeto(board, sourceLaneId);\n\n          handleUpdateLanes(newOrder);\n        }}\n        onCardMoveAcrossLanes={handleCardMove}\n        style={{ height: '90vh', backgroundColor: 'rgba(252, 252, 252, 0.03)' }}\n        draggable={true}\n      />\n    </div>\n  );\n};\n\n\nexport default Kanban;","import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter, Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\n\nimport LoggedInLayout from \"../layout\";\nimport Dashboard from \"../pages/Dashboard/\";\nimport TicketResponsiveContainer from \"../pages/TicketResponsiveContainer\";\nimport Signup from \"../pages/Signup/\";\nimport Login from \"../pages/Login/\";\nimport Connections from \"../pages/Connections/\";\nimport SettingsCustom from \"../pages/SettingsCustom/\";\nimport Financeiro from \"../pages/Financeiro/\";\nimport Users from \"../pages/Users\";\nimport Contacts from \"../pages/Contacts/\";\nimport Queues from \"../pages/Queues/\";\nimport Tags from \"../pages/Tags/\";\nimport MessagesAPI from \"../pages/MessagesAPI/\";\nimport Helps from \"../pages/Helps/\";\nimport ContactLists from \"../pages/ContactLists/\";\nimport ContactListItems from \"../pages/ContactListItems/\";\n// import Companies from \"../pages/Companies/\";\nimport QuickMessages from \"../pages/QuickMessages/\";\nimport { AuthProvider } from \"../context/Auth/AuthContext\";\nimport { TicketsContextProvider } from \"../context/Tickets/TicketsContext\";\nimport { WhatsAppsProvider } from \"../context/WhatsApp/WhatsAppsContext\";\nimport Route from \"./Route\";\nimport Schedules from \"../pages/Schedules\";\nimport Campaigns from \"../pages/Campaigns\";\nimport CampaignsConfig from \"../pages/CampaignsConfig\";\nimport CampaignReport from \"../pages/CampaignReport\";\nimport Annoucements from \"../pages/Annoucements\";\nimport Chat from \"../pages/Chat\";\nimport Subscription from \"../pages/Subscription/\";\nimport Kanban from \"../pages/Kanban\"\n\n\nconst Routes = () => {\n  const [showCampaigns, setShowCampaigns] = useState(false);\n\n  useEffect(() => {\n    const cshow = localStorage.getItem(\"cshow\");\n    if (cshow !== undefined) {\n      setShowCampaigns(true);\n    }\n  }, []);\n\n  return (\n    <BrowserRouter>\n      <AuthProvider>\n        <TicketsContextProvider>\n          <Switch>\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/signup\" component={Signup} />\n            {/* <Route exact path=\"/create-company\" component={Companies} /> */}\n            <WhatsAppsProvider>\n              <LoggedInLayout>\n                <Route exact path=\"/\" component={Dashboard} isPrivate />\n                <Route\n                  exact\n                  path=\"/tickets/:ticketId?\"\n                  component={TicketResponsiveContainer}\n                  isPrivate\n                />\n                <Route\n                  exact\n                  path=\"/connections\"\n                  component={Connections}\n                  isPrivate\n                />\n                <Route\n                  exact\n                  path=\"/quick-messages\"\n                  component={QuickMessages}\n                  isPrivate\n                />\n                <Route\n                  exact\n                  path=\"/schedules\"\n                  component={Schedules}\n                  isPrivate\n                />\n                <Route exact path=\"/tags\" component={Tags} isPrivate />\n                <Route exact path=\"/contacts\" component={Contacts} isPrivate />\n                <Route exact path=\"/helps\" component={Helps} isPrivate />\n                <Route exact path=\"/users\" component={Users} isPrivate />\n                <Route\n                  exact\n                  path=\"/messages-api\"\n                  component={MessagesAPI}\n                  isPrivate\n                />\n                <Route\n                  exact\n                  path=\"/settings\"\n                  component={SettingsCustom}\n                  isPrivate\n                />\n                <Route\n                  exact\n                  path=\"/financeiro\"\n                  component={Financeiro}\n                  isPrivate\n                />\n                <Route exact path=\"/queues\" component={Queues} isPrivate />\n                <Route\n                  exact\n                  path=\"/announcements\"\n                  component={Annoucements}\n                  isPrivate\n                />\n                <Route\n                  exact\n                  path=\"/subscription\"\n                  component={Subscription}\n                  isPrivate\n                />\n                \n                <Route\n                  exact\n                  path=\"/Kanban\"\n                  component={Kanban}\n                  isPrivate\n                />\n                \n                \n                <Route exact path=\"/chats/:id?\" component={Chat} isPrivate />\n                {showCampaigns && (\n                  <>\n                    <Route\n                      exact\n                      path=\"/contact-lists\"\n                      component={ContactLists}\n                      isPrivate\n                    />\n                    <Route\n                      exact\n                      path=\"/contact-lists/:contactListId/contacts\"\n                      component={ContactListItems}\n                      isPrivate\n                    />\n                    <Route\n                      exact\n                      path=\"/campaigns\"\n                      component={Campaigns}\n                      isPrivate\n                    />\n                    <Route\n                      exact\n                      path=\"/campaign/:campaignId/report\"\n                      component={CampaignReport}\n                      isPrivate\n                    />\n                    <Route\n                      exact\n                      path=\"/campaigns-config\"\n                      component={CampaignsConfig}\n                      isPrivate\n                    />\n                    \n                  </>\n                )}\n              </LoggedInLayout>\n            </WhatsAppsProvider>\n          </Switch>\n          <ToastContainer autoClose={3000} />\n        </TicketsContextProvider>\n      </AuthProvider>\n    </BrowserRouter>\n  );\n};\n\nexport default Routes;\n","import React, { useState, useEffect } from \"react\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nimport { ptBR } from \"@material-ui/core/locale\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { useMediaQuery } from \"@material-ui/core\";\nimport ColorModeContext from \"./layout/themeContext\";\n\nimport Routes from \"./routes\";\n\nconst queryClient = new QueryClient();\n\nconst App = () => {\n    const [locale, setLocale] = useState();\n\n    const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n    const preferredTheme = window.localStorage.getItem(\"preferredTheme\");\n    const [mode, setMode] = useState(preferredTheme ? preferredTheme : prefersDarkMode ? \"dark\" : \"light\");\n\n    const colorMode = React.useMemo(\n        () => ({\n            toggleColorMode: () => {\n                setMode((prevMode) => (prevMode === \"light\" ? \"dark\" : \"light\"));\n            },\n        }),\n        []\n    );\n\n    const theme = createTheme(\n        {\n            scrollbarStyles: {\n                \"&::-webkit-scrollbar\": {\n                    width: '8px',\n                    height: '8px',\n                },\n                \"&::-webkit-scrollbar-thumb\": {\n                    boxShadow: 'inset 0 0 6px rgba(0, 0, 0, 0.3)',\n                    backgroundColor: \"#e8e8e8\",\n                },\n            },\n            scrollbarStylesSoft: {\n                \"&::-webkit-scrollbar\": {\n                    width: \"8px\",\n                },\n                \"&::-webkit-scrollbar-thumb\": {\n                    backgroundColor: mode === \"light\" ? \"#F3F3F3\" : \"#333333\",\n                },\n            },\n            palette: {\n                type: mode,\n                primary: { main: \"#FFB259\" },\n                textPrimary: mode === \"light\" ? \"#FFB259\" : \"#FFFFFF\",\n                borderPrimary: mode === \"light\" ? \"#FFB259\" : \"#FFFFFF\",\n                dark: { main: mode === \"light\" ? \"#333333\" : \"#F3F3F3\" },\n                light: { main: mode === \"light\" ? \"#F3F3F3\" : \"#333333\" },\n                tabHeaderBackground: mode === \"light\" ? \"#EEE\" : \"#1B1B1B\",\n                optionsBackground: mode === \"light\" ? \"#fafafa\" : \"#333\",\n                fancyBackground: mode === \"light\" ? \"#fafafa\" : \"#333\",\n                total: mode === \"light\" ? \"#fff\" : \"#222\",\n                messageIcons: mode === \"light\" ? \"grey\" : \"#F3F3F3\",\n                inputBackground: mode === \"light\" ? \"#FFFFFF\" : \"#333\",\n                barraSuperior: \"#B05E00\"\n            },\n            mode,\n        },\n        locale\n    );\n\n    useEffect(() => {\n        const i18nlocale = localStorage.getItem(\"i18nextLng\");\n        const browserLocale =\n            i18nlocale.substring(0, 2) + i18nlocale.substring(3, 5);\n\n        if (browserLocale === \"ptBR\") {\n            setLocale(ptBR);\n        }\n    }, []);\n\n    useEffect(() => {\n        window.localStorage.setItem(\"preferredTheme\", mode);\n    }, [mode]);\n\n    return (\n        <ColorModeContext.Provider value={{ colorMode }}>\n            <ThemeProvider theme={theme}>\n                <QueryClientProvider client={queryClient}>\n                    <Routes />\n                </QueryClientProvider>\n            </ThemeProvider>\n        </ColorModeContext.Provider>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n\t<CssBaseline>\n\t\t<App />\n\t</CssBaseline>,\n\tdocument.getElementById(\"root\")\n);\n\n// ReactDOM.render(\n// \t<React.StrictMode>\n// \t\t<CssBaseline>\n// \t\t\t<App />\n// \t\t</CssBaseline>,\n//   </React.StrictMode>\n\n// \tdocument.getElementById(\"root\")\n// );\n","module.exports = __webpack_public_path__ + \"static/media/planilha.549edeba.xlsx\";","module.exports = __webpack_public_path__ + \"static/media/sound.9fd5812c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/logo1.66901aaf.png\";","module.exports = __webpack_public_path__ + \"static/media/chat_notify.2529c259.mp3\";","module.exports = __webpack_public_path__ + \"static/media/wa-background.2675a051.png\";","module.exports = __webpack_public_path__ + \"static/media/wa-background-dark.8244f042.png\";","module.exports = __webpack_public_path__ + \"static/media/logologin.c4af2808.png\";"],"sourceRoot":""}